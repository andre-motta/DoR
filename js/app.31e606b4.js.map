{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?2f33","webpack:///./src/App.vue","webpack:///./src/components/GraphView.vue","webpack:///./src/clients/crossref/runtime.ts","webpack:///./src/clients/crossref/models/Affiliation.ts","webpack:///./src/clients/crossref/models/Agency.ts","webpack:///./src/clients/crossref/models/AgencyMessage.ts","webpack:///./src/clients/crossref/models/Author.ts","webpack:///./src/clients/crossref/models/DateParts.ts","webpack:///./src/clients/crossref/models/DoiAgency.ts","webpack:///./src/clients/crossref/models/ModelDate.ts","webpack:///./src/clients/crossref/models/Query.ts","webpack:///./src/clients/crossref/models/Reference.ts","webpack:///./src/clients/crossref/models/Work.ts","webpack:///./src/clients/crossref/models/WorkAssertion.ts","webpack:///./src/clients/crossref/models/WorkClinicalTrial.ts","webpack:///./src/clients/crossref/models/WorkDomain.ts","webpack:///./src/clients/crossref/models/WorkFreeToRead.ts","webpack:///./src/clients/crossref/models/WorkFunder.ts","webpack:///./src/clients/crossref/models/WorkISSNType.ts","webpack:///./src/clients/crossref/models/WorkInstitution.ts","webpack:///./src/clients/crossref/models/WorkJournalIssue.ts","webpack:///./src/clients/crossref/models/WorkLicense.ts","webpack:///./src/clients/crossref/models/WorkLink.ts","webpack:///./src/clients/crossref/models/WorkMessage.ts","webpack:///./src/clients/crossref/models/WorkReview.ts","webpack:///./src/clients/crossref/models/WorkStandardsBody.ts","webpack:///./src/clients/crossref/models/WorkUpdate.ts","webpack:///./src/clients/crossref/models/Works.ts","webpack:///./src/clients/crossref/models/WorksMessage.ts","webpack:///./src/clients/crossref/models/WorksMessageMessageItemsAssertionExplanation.ts","webpack:///./src/clients/crossref/models/WorksMessageMessageItemsAssertionGroup.ts","webpack:///./src/clients/crossref/models/WorksMessageMessageItemsRelationJavaLangString34985.ts","webpack:///./src/clients/crossref/apis/DepositsApi.ts","webpack:///./src/clients/crossref/apis/WorksApi.ts","webpack:///./src/tools/WorksCache.ts","webpack:///./src/tools/CachedWorksApi.ts","webpack:///./src/components/GraphView.vue?50b1","webpack:///./src/components/GraphView.vue?fb2c","webpack:///./src/components/TopFive.vue","webpack:///./src/clients/orcid/runtime.ts","webpack:///./src/clients/orcid/models/AddressV20.ts","webpack:///./src/clients/orcid/models/AddressV30.ts","webpack:///./src/clients/orcid/models/AddressV30Rc1.ts","webpack:///./src/clients/orcid/models/AddressV30Rc2.ts","webpack:///./src/clients/orcid/models/AffiliationSummaryV30.ts","webpack:///./src/clients/orcid/models/AffiliationSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/AffiliationSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/BiographyV20.ts","webpack:///./src/clients/orcid/models/BiographyV30.ts","webpack:///./src/clients/orcid/models/BiographyV30Rc1.ts","webpack:///./src/clients/orcid/models/BiographyV30Rc2.ts","webpack:///./src/clients/orcid/models/Citation.ts","webpack:///./src/clients/orcid/models/ActivitiesSummaryV20.ts","webpack:///./src/clients/orcid/models/AddressesV20.ts","webpack:///./src/clients/orcid/models/AmountV20.ts","webpack:///./src/clients/orcid/models/ContributorAttributesV30.ts","webpack:///./src/clients/orcid/models/ContributorAttributesV30Rc1.ts","webpack:///./src/clients/orcid/models/ContributorAttributesV30Rc2.ts","webpack:///./src/clients/orcid/models/CountryV20.ts","webpack:///./src/clients/orcid/models/CountryV30.ts","webpack:///./src/clients/orcid/models/CountryV30Rc1.ts","webpack:///./src/clients/orcid/models/CountryV30Rc2.ts","webpack:///./src/clients/orcid/models/DistinctionSummaryV30.ts","webpack:///./src/clients/orcid/models/DistinctionSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/DistinctionSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/DistinctionV30.ts","webpack:///./src/clients/orcid/models/DistinctionV30Rc1.ts","webpack:///./src/clients/orcid/models/DistinctionV30Rc2.ts","webpack:///./src/clients/orcid/models/EducationSummaryV20.ts","webpack:///./src/clients/orcid/models/EducationSummaryV30.ts","webpack:///./src/clients/orcid/models/EducationSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/EducationSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/EducationV20.ts","webpack:///./src/clients/orcid/models/EducationV30.ts","webpack:///./src/clients/orcid/models/EducationV30Rc1.ts","webpack:///./src/clients/orcid/models/EducationV30Rc2.ts","webpack:///./src/clients/orcid/models/EmailV20.ts","webpack:///./src/clients/orcid/models/EmailV30.ts","webpack:///./src/clients/orcid/models/EmailV30Rc1.ts","webpack:///./src/clients/orcid/models/EmailV30Rc2.ts","webpack:///./src/clients/orcid/models/EmploymentSummaryV20.ts","webpack:///./src/clients/orcid/models/EmploymentSummaryV30.ts","webpack:///./src/clients/orcid/models/EmploymentSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/EmploymentSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/EmploymentV20.ts","webpack:///./src/clients/orcid/models/EmploymentV30.ts","webpack:///./src/clients/orcid/models/EmploymentV30Rc1.ts","webpack:///./src/clients/orcid/models/EmploymentV30Rc2.ts","webpack:///./src/clients/orcid/models/ExternalIDV20.ts","webpack:///./src/clients/orcid/models/ExternalIDV30.ts","webpack:///./src/clients/orcid/models/ExternalIDV30Rc1.ts","webpack:///./src/clients/orcid/models/ExternalIDV30Rc2.ts","webpack:///./src/clients/orcid/models/FundingContributorAttributesV20.ts","webpack:///./src/clients/orcid/models/FundingContributorAttributesV30.ts","webpack:///./src/clients/orcid/models/FundingContributorAttributesV30Rc1.ts","webpack:///./src/clients/orcid/models/FundingContributorAttributesV30Rc2.ts","webpack:///./src/clients/orcid/models/FundingSummaryV20.ts","webpack:///./src/clients/orcid/models/FundingSummaryV30.ts","webpack:///./src/clients/orcid/models/FundingSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/FundingSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/FundingV20.ts","webpack:///./src/clients/orcid/models/FundingV30.ts","webpack:///./src/clients/orcid/models/FundingV30Rc1.ts","webpack:///./src/clients/orcid/models/FundingV30Rc2.ts","webpack:///./src/clients/orcid/models/HistoryV20.ts","webpack:///./src/clients/orcid/models/HistoryV30.ts","webpack:///./src/clients/orcid/models/HistoryV30Rc1.ts","webpack:///./src/clients/orcid/models/HistoryV30Rc2.ts","webpack:///./src/clients/orcid/models/InvitedPositionSummaryV30.ts","webpack:///./src/clients/orcid/models/InvitedPositionSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/InvitedPositionSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/InvitedPositionV30.ts","webpack:///./src/clients/orcid/models/InvitedPositionV30Rc1.ts","webpack:///./src/clients/orcid/models/InvitedPositionV30Rc2.ts","webpack:///./src/clients/orcid/models/KeywordV20.ts","webpack:///./src/clients/orcid/models/KeywordV30.ts","webpack:///./src/clients/orcid/models/KeywordV30Rc1.ts","webpack:///./src/clients/orcid/models/KeywordV30Rc2.ts","webpack:///./src/clients/orcid/models/MembershipSummaryV30.ts","webpack:///./src/clients/orcid/models/MembershipSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/MembershipSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/MembershipV30.ts","webpack:///./src/clients/orcid/models/MembershipV30Rc1.ts","webpack:///./src/clients/orcid/models/MembershipV30Rc2.ts","webpack:///./src/clients/orcid/models/NameV20.ts","webpack:///./src/clients/orcid/models/NameV30.ts","webpack:///./src/clients/orcid/models/NameV30Rc1.ts","webpack:///./src/clients/orcid/models/NameV30Rc2.ts","webpack:///./src/clients/orcid/models/OrganizationAddressV20.ts","webpack:///./src/clients/orcid/models/OrganizationAddressV30.ts","webpack:///./src/clients/orcid/models/OrganizationAddressV30Rc1.ts","webpack:///./src/clients/orcid/models/OrganizationAddressV30Rc2.ts","webpack:///./src/clients/orcid/models/OtherNameV20.ts","webpack:///./src/clients/orcid/models/OtherNameV30.ts","webpack:///./src/clients/orcid/models/OtherNameV30Rc1.ts","webpack:///./src/clients/orcid/models/OtherNameV30Rc2.ts","webpack:///./src/clients/orcid/models/PeerReviewSummaryV20.ts","webpack:///./src/clients/orcid/models/PeerReviewSummaryV30.ts","webpack:///./src/clients/orcid/models/PeerReviewSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/PeerReviewSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/PeerReviewV20.ts","webpack:///./src/clients/orcid/models/PeerReviewV30.ts","webpack:///./src/clients/orcid/models/PeerReviewV30Rc1.ts","webpack:///./src/clients/orcid/models/PeerReviewV30Rc2.ts","webpack:///./src/clients/orcid/models/PersonExternalIdentifierV20.ts","webpack:///./src/clients/orcid/models/PersonExternalIdentifierV30.ts","webpack:///./src/clients/orcid/models/PersonExternalIdentifierV30Rc1.ts","webpack:///./src/clients/orcid/models/PersonExternalIdentifierV30Rc2.ts","webpack:///./src/clients/orcid/models/PreferencesV20.ts","webpack:///./src/clients/orcid/models/PreferencesV30.ts","webpack:///./src/clients/orcid/models/PreferencesV30Rc1.ts","webpack:///./src/clients/orcid/models/PreferencesV30Rc2.ts","webpack:///./src/clients/orcid/models/PublicationDateV20.ts","webpack:///./src/clients/orcid/models/PublicationDateV30Rc1.ts","webpack:///./src/clients/orcid/models/QualificationSummaryV30.ts","webpack:///./src/clients/orcid/models/QualificationSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/QualificationSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/QualificationV30.ts","webpack:///./src/clients/orcid/models/QualificationV30Rc1.ts","webpack:///./src/clients/orcid/models/QualificationV30Rc2.ts","webpack:///./src/clients/orcid/models/ResearchResourceItemV30.ts","webpack:///./src/clients/orcid/models/ResearchResourceItemV30Rc2.ts","webpack:///./src/clients/orcid/models/ResearchResourceSummaryV30.ts","webpack:///./src/clients/orcid/models/ResearchResourceSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/ResearchResourceSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/ResearchResourceV30.ts","webpack:///./src/clients/orcid/models/ResearchResourceV30Rc1.ts","webpack:///./src/clients/orcid/models/ResearchResourceV30Rc2.ts","webpack:///./src/clients/orcid/models/ResearcherUrlV20.ts","webpack:///./src/clients/orcid/models/ResearcherUrlV30.ts","webpack:///./src/clients/orcid/models/ResearcherUrlV30Rc1.ts","webpack:///./src/clients/orcid/models/ResearcherUrlV30Rc2.ts","webpack:///./src/clients/orcid/models/ServiceSummaryV30.ts","webpack:///./src/clients/orcid/models/ServiceSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/ServiceSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/ServiceV30.ts","webpack:///./src/clients/orcid/models/ServiceV30Rc1.ts","webpack:///./src/clients/orcid/models/ServiceV30Rc2.ts","webpack:///./src/clients/orcid/models/TranslatedTitleV30.ts","webpack:///./src/clients/orcid/models/TranslatedTitleV30Rc2.ts","webpack:///./src/clients/orcid/models/WorkSummaryV20.ts","webpack:///./src/clients/orcid/models/WorkSummaryV30.ts","webpack:///./src/clients/orcid/models/WorkSummaryV30Rc1.ts","webpack:///./src/clients/orcid/models/WorkSummaryV30Rc2.ts","webpack:///./src/clients/orcid/models/WorkV20.ts","webpack:///./src/clients/orcid/models/WorkV30.ts","webpack:///./src/clients/orcid/models/WorkV30Rc1.ts","webpack:///./src/clients/orcid/models/WorkV30Rc2.ts","webpack:///./src/clients/orcid/models/ClientSummary.ts","webpack:///./src/clients/orcid/models/CompletionDateV20.ts","webpack:///./src/clients/orcid/models/ContributorEmailV20.ts","webpack:///./src/clients/orcid/models/ContributorOrcidV20.ts","webpack:///./src/clients/orcid/models/ContributorV20.ts","webpack:///./src/clients/orcid/models/CreatedDateV20.ts","webpack:///./src/clients/orcid/models/CreditNameV20.ts","webpack:///./src/clients/orcid/models/DayV20.ts","webpack:///./src/clients/orcid/models/DeactivationDateV20.ts","webpack:///./src/clients/orcid/models/DisambiguatedOrganizationV20.ts","webpack:///./src/clients/orcid/models/EducationsSummaryV20.ts","webpack:///./src/clients/orcid/models/EmailsV20.ts","webpack:///./src/clients/orcid/models/EmploymentsSummaryV20.ts","webpack:///./src/clients/orcid/models/ExternalIDsV20.ts","webpack:///./src/clients/orcid/models/FamilyNameV20.ts","webpack:///./src/clients/orcid/models/FundingContributorV20.ts","webpack:///./src/clients/orcid/models/FundingContributorsV20.ts","webpack:///./src/clients/orcid/models/FundingGroupV20.ts","webpack:///./src/clients/orcid/models/FundingTitleV20.ts","webpack:///./src/clients/orcid/models/FundingsV20.ts","webpack:///./src/clients/orcid/models/FuzzyDateV20.ts","webpack:///./src/clients/orcid/models/GivenNamesV20.ts","webpack:///./src/clients/orcid/models/KeywordsV20.ts","webpack:///./src/clients/orcid/models/LastModifiedDateV20.ts","webpack:///./src/clients/orcid/models/MonthV20.ts","webpack:///./src/clients/orcid/models/OrcidIdentifierV20.ts","webpack:///./src/clients/orcid/models/OrganizationDefinedFundingSubTypeV20.ts","webpack:///./src/clients/orcid/models/OrganizationV20.ts","webpack:///./src/clients/orcid/models/OtherNamesV20.ts","webpack:///./src/clients/orcid/models/PeerReviewGroupV20.ts","webpack:///./src/clients/orcid/models/PeerReviewsV20.ts","webpack:///./src/clients/orcid/models/PersonExternalIdentifiersV20.ts","webpack:///./src/clients/orcid/models/PersonV20.ts","webpack:///./src/clients/orcid/models/PersonalDetailsV20.ts","webpack:///./src/clients/orcid/models/RecordV20.ts","webpack:///./src/clients/orcid/models/ResearcherUrlsV20.ts","webpack:///./src/clients/orcid/models/ResultV20.ts","webpack:///./src/clients/orcid/models/SearchV20.ts","webpack:///./src/clients/orcid/models/SourceClientIdV20.ts","webpack:///./src/clients/orcid/models/SourceNameV20.ts","webpack:///./src/clients/orcid/models/SourceOrcidV20.ts","webpack:///./src/clients/orcid/models/SourceV20.ts","webpack:///./src/clients/orcid/models/SubmissionDateV20.ts","webpack:///./src/clients/orcid/models/SubtitleV20.ts","webpack:///./src/clients/orcid/models/TitleV20.ts","webpack:///./src/clients/orcid/models/TranslatedTitleV20.ts","webpack:///./src/clients/orcid/models/UrlV20.ts","webpack:///./src/clients/orcid/models/WorkBulkV20.ts","webpack:///./src/clients/orcid/models/WorkContributorsV20.ts","webpack:///./src/clients/orcid/models/WorkGroupV20.ts","webpack:///./src/clients/orcid/models/WorkTitleV20.ts","webpack:///./src/clients/orcid/models/WorksSummaryV20.ts","webpack:///./src/clients/orcid/models/YearV20.ts","webpack:///./src/clients/orcid/apis/DevelopmentPublicAPIV30Api.ts","webpack:///./src/clients/orcid/apis/PublicAPIV20Api.ts","webpack:///./src/clients/arxiv/runtime.ts","webpack:///./src/clients/arxiv/models/Author.ts","webpack:///./src/clients/arxiv/models/Category.ts","webpack:///./src/clients/arxiv/models/Comment.ts","webpack:///./src/clients/arxiv/models/Link.ts","webpack:///./src/clients/arxiv/models/Entry.ts","webpack:///./src/clients/arxiv/models/ItemsPerPage.ts","webpack:///./src/clients/arxiv/models/Title.ts","webpack:///./src/clients/arxiv/models/Feed.ts","webpack:///./src/clients/arxiv/apis/QueryApi.ts","webpack:///./src/components/TopFive.vue?8c75","webpack:///./src/components/TopFive.vue?cad9","webpack:///./src/backend/models/Reuse.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts","webpack:///./src/assets/dor-logo.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","alt","src","href","appear","showSplash","reuseData","ref","BASE_PATH","replace","isBlob","Blob","configuration","fetchApi","url","init","fetchParams","middleware","pre","fetch","response","post","clone","this","next","concat","preMiddlewares","middlewares","map","withMiddleware","postMiddlewares","context","createFetchParams","status","basePath","path","undefined","query","keys","queryParamsStringify","body","FormData","URLSearchParams","JSON","stringify","headers","assign","method","credentials","constructor","field","msg","Error","querystring","username","password","apiKey","accessToken","exists","json","params","prefix","fullKey","Array","multiValue","singleValue","encodeURIComponent","String","join","Date","toISOString","filter","part","mapValues","fn","reduce","acc","raw","transformer","jsonValue","AffiliationFromJSON","AffiliationFromJSONTyped","ignoreDiscriminator","AgencyFromJSON","AgencyFromJSONTyped","AgencyMessageFromJSON","AgencyMessageFromJSONTyped","DoiAgencyFromJSON","AuthorFromJSON","AuthorFromJSONTyped","DatePartsFromJSON","DatePartsFromJSONTyped","DoiAgencyFromJSONTyped","ModelDateFromJSON","ModelDateFromJSONTyped","QueryFromJSON","QueryFromJSONTyped","ReferenceFromJSON","ReferenceFromJSONTyped","WorkFromJSON","WorkFromJSONTyped","WorkInstitutionFromJSON","WorkUpdateFromJSON","WorkStandardsBodyFromJSON","WorkISSNTypeFromJSON","WorkLicenseFromJSON","WorkFunderFromJSON","WorkDomainFromJSON","WorkClinicalTrialFromJSON","WorkReviewFromJSON","WorkLinkFromJSON","WorkFreeToReadFromJSON","WorkJournalIssueFromJSON","WorksMessageMessageItemsRelationJavaLangString34985FromJSON","WorkAssertionFromJSON","WorkAssertionFromJSONTyped","WorksMessageMessageItemsAssertionGroupFromJSON","WorksMessageMessageItemsAssertionExplanationFromJSON","WorkClinicalTrialFromJSONTyped","WorkDomainFromJSONTyped","WorkFreeToReadFromJSONTyped","WorkFunderFromJSONTyped","WorkISSNTypeFromJSONTyped","WorkInstitutionFromJSONTyped","WorkJournalIssueFromJSONTyped","WorkLicenseFromJSONTyped","WorkLinkFromJSONTyped","WorkMessageFromJSON","WorkMessageFromJSONTyped","WorkReviewFromJSONTyped","WorkStandardsBodyFromJSONTyped","WorkUpdateFromJSONTyped","WorksFromJSON","WorksFromJSONTyped","WorksMessageFromJSON","WorksMessageFromJSONTyped","WorksMessageMessageItemsAssertionExplanationFromJSONTyped","WorksMessageMessageItemsAssertionGroupFromJSONTyped","WorksMessageMessageItemsRelationJavaLangString34985FromJSONTyped","requestParameters","doi","queryParameters","headerParameters","request","worksDoiAgencyGetRaw","worksDoiGetRaw","rows","order","facet","sample","sort","offset","mailto","select","cursor","worksGetRaw","cache","set","recordExists","cacheRecord","find","x","WorksCache","instance","prefill","prefillWorks","forEach","currentWork","dOI","apiCache","Promise","resolve","message","props","setup","cyroot","cyInstance","worksApi","transformToGraph","getNodes","transformedNodes","nodes","edges","getLinks","reusedNodes","all","getReusedNode","sourceNodes","getSourceNode","item","pos","ary","id","getItemTitle","reusedDOI","title","sourceDOI","source","target","worksDoiGet","catch","err","console","warn","work","workMessage","getAuthors","author","issued","dateParts","authors","family","elementsPromise","cytoConfig","container","elements","layout","style","selector","content","width","height","color","zoom","pan","y","minZoom","maxZoom","zoomingEnabled","userZoomingEnabled","panningEnabled","userPanningEnabled","boxSelectionEnabled","selectionType","touchTapThreshold","desktopTapThreshold","autolock","autoungrabify","autounselectify","headless","styleEnabled","hideEdgesOnViewport","textureOnViewport","motionBlur","motionBlurOpacity","animate","pixelRatio","use","throttle","cy","handleWindowResize","clearTimeout","setTimeout","run","addEventListener","render","AddressV20VisibilityEnum","AddressV30VisibilityEnum","AddressV30Rc1VisibilityEnum","AddressV30Rc2VisibilityEnum","AffiliationSummaryV30VisibilityEnum","AffiliationSummaryV30Rc1VisibilityEnum","AffiliationSummaryV30Rc2VisibilityEnum","BiographyV20VisibilityEnum","BiographyV30VisibilityEnum","BiographyV30Rc1VisibilityEnum","BiographyV30Rc2VisibilityEnum","CitationCitationTypeEnum","text","ActivitiesSummaryV20FromJSON","ActivitiesSummaryV20FromJSONTyped","LastModifiedDateV20FromJSON","EducationsSummaryV20FromJSON","EmploymentsSummaryV20FromJSON","FundingsV20FromJSON","PeerReviewsV20FromJSON","WorksSummaryV20FromJSON","AddressV20FromJSON","AddressV20FromJSONTyped","CreatedDateV20FromJSON","SourceV20FromJSON","CountryV20FromJSON","AddressesV20FromJSON","AddressesV20FromJSONTyped","AmountV20FromJSON","AmountV20FromJSONTyped","BiographyV20FromJSON","BiographyV20FromJSONTyped","CitationFromJSON","CitationFromJSONTyped","ContributorAttributesV30ContributorSequenceEnum","ContributorAttributesV30ContributorRoleEnum","ContributorAttributesV30Rc1ContributorSequenceEnum","ContributorAttributesV30Rc1ContributorRoleEnum","ContributorAttributesV30Rc2ContributorSequenceEnum","ContributorAttributesV30Rc2ContributorRoleEnum","CountryV20ValueEnum","CountryV30ValueEnum","CountryV30Rc1ValueEnum","CountryV30Rc2ValueEnum","DistinctionSummaryV30VisibilityEnum","DistinctionSummaryV30Rc1VisibilityEnum","DistinctionSummaryV30Rc2VisibilityEnum","DistinctionV30VisibilityEnum","DistinctionV30Rc1VisibilityEnum","DistinctionV30Rc2VisibilityEnum","EducationSummaryV20VisibilityEnum","EducationSummaryV30VisibilityEnum","EducationSummaryV30Rc1VisibilityEnum","EducationSummaryV30Rc2VisibilityEnum","EducationV20VisibilityEnum","EducationV30VisibilityEnum","EducationV30Rc1VisibilityEnum","EducationV30Rc2VisibilityEnum","EmailV20VisibilityEnum","EmailV30VisibilityEnum","EmailV30Rc1VisibilityEnum","EmailV30Rc2VisibilityEnum","EmploymentSummaryV20VisibilityEnum","EmploymentSummaryV30VisibilityEnum","EmploymentSummaryV30Rc1VisibilityEnum","EmploymentSummaryV30Rc2VisibilityEnum","EmploymentV20VisibilityEnum","EmploymentV30VisibilityEnum","EmploymentV30Rc1VisibilityEnum","EmploymentV30Rc2VisibilityEnum","ExternalIDV20ExternalIdRelationshipEnum","ExternalIDV30ExternalIdRelationshipEnum","ExternalIDV30Rc1ExternalIdRelationshipEnum","ExternalIDV30Rc2ExternalIdRelationshipEnum","FundingContributorAttributesV20ContributorRoleEnum","FundingContributorAttributesV30ContributorRoleEnum","FundingContributorAttributesV30Rc1ContributorRoleEnum","FundingContributorAttributesV30Rc2ContributorRoleEnum","FundingSummaryV20TypeEnum","FundingSummaryV20VisibilityEnum","FundingSummaryV30TypeEnum","FundingSummaryV30VisibilityEnum","FundingSummaryV30Rc1TypeEnum","FundingSummaryV30Rc1VisibilityEnum","FundingSummaryV30Rc2TypeEnum","FundingSummaryV30Rc2VisibilityEnum","FundingV20TypeEnum","FundingV20VisibilityEnum","FundingV30TypeEnum","FundingV30VisibilityEnum","FundingV30Rc1TypeEnum","FundingV30Rc1VisibilityEnum","FundingV30Rc2TypeEnum","FundingV30Rc2VisibilityEnum","HistoryV20CreationMethodEnum","HistoryV30CreationMethodEnum","HistoryV30Rc1CreationMethodEnum","HistoryV30Rc2CreationMethodEnum","InvitedPositionSummaryV30VisibilityEnum","InvitedPositionSummaryV30Rc1VisibilityEnum","InvitedPositionSummaryV30Rc2VisibilityEnum","InvitedPositionV30VisibilityEnum","InvitedPositionV30Rc1VisibilityEnum","InvitedPositionV30Rc2VisibilityEnum","KeywordV20VisibilityEnum","KeywordV30VisibilityEnum","KeywordV30Rc1VisibilityEnum","KeywordV30Rc2VisibilityEnum","MembershipSummaryV30VisibilityEnum","MembershipSummaryV30Rc1VisibilityEnum","MembershipSummaryV30Rc2VisibilityEnum","MembershipV30VisibilityEnum","MembershipV30Rc1VisibilityEnum","MembershipV30Rc2VisibilityEnum","NameV20VisibilityEnum","NameV30VisibilityEnum","NameV30Rc1VisibilityEnum","NameV30Rc2VisibilityEnum","OrganizationAddressV20CountryEnum","OrganizationAddressV30CountryEnum","OrganizationAddressV30Rc1CountryEnum","OrganizationAddressV30Rc2CountryEnum","OtherNameV20VisibilityEnum","OtherNameV30VisibilityEnum","OtherNameV30Rc1VisibilityEnum","OtherNameV30Rc2VisibilityEnum","PeerReviewSummaryV20VisibilityEnum","PeerReviewSummaryV30ReviewerRoleEnum","PeerReviewSummaryV30ReviewTypeEnum","PeerReviewSummaryV30VisibilityEnum","PeerReviewSummaryV30Rc1ReviewerRoleEnum","PeerReviewSummaryV30Rc1ReviewTypeEnum","PeerReviewSummaryV30Rc1VisibilityEnum","PeerReviewSummaryV30Rc2ReviewerRoleEnum","PeerReviewSummaryV30Rc2ReviewTypeEnum","PeerReviewSummaryV30Rc2VisibilityEnum","PeerReviewV20ReviewerRoleEnum","PeerReviewV20ReviewTypeEnum","PeerReviewV20SubjectTypeEnum","PeerReviewV20VisibilityEnum","PeerReviewV30ReviewerRoleEnum","PeerReviewV30ReviewTypeEnum","PeerReviewV30SubjectTypeEnum","PeerReviewV30VisibilityEnum","PeerReviewV30Rc1ReviewerRoleEnum","PeerReviewV30Rc1ReviewTypeEnum","PeerReviewV30Rc1SubjectTypeEnum","PeerReviewV30Rc1VisibilityEnum","PeerReviewV30Rc2ReviewerRoleEnum","PeerReviewV30Rc2ReviewTypeEnum","PeerReviewV30Rc2SubjectTypeEnum","PeerReviewV30Rc2VisibilityEnum","PersonExternalIdentifierV20ExternalIdRelationshipEnum","PersonExternalIdentifierV20VisibilityEnum","PersonExternalIdentifierV30ExternalIdRelationshipEnum","PersonExternalIdentifierV30VisibilityEnum","PersonExternalIdentifierV30Rc1ExternalIdRelationshipEnum","PersonExternalIdentifierV30Rc1VisibilityEnum","PersonExternalIdentifierV30Rc2ExternalIdRelationshipEnum","PersonExternalIdentifierV30Rc2VisibilityEnum","PreferencesV20LocaleEnum","PreferencesV30LocaleEnum","PreferencesV30Rc1LocaleEnum","PreferencesV30Rc2LocaleEnum","PublicationDateV20MediaTypeEnum","PublicationDateV30Rc1MediaTypeEnum","QualificationSummaryV30VisibilityEnum","QualificationSummaryV30Rc1VisibilityEnum","QualificationSummaryV30Rc2VisibilityEnum","QualificationV30VisibilityEnum","QualificationV30Rc1VisibilityEnum","QualificationV30Rc2VisibilityEnum","ResearchResourceItemV30ResourceTypeEnum","ResearchResourceItemV30Rc2ResourceTypeEnum","ResearchResourceSummaryV30VisibilityEnum","ResearchResourceSummaryV30Rc1VisibilityEnum","ResearchResourceSummaryV30Rc2VisibilityEnum","ResearchResourceV30VisibilityEnum","ResearchResourceV30Rc1VisibilityEnum","ResearchResourceV30Rc2VisibilityEnum","ResearcherUrlV20VisibilityEnum","ResearcherUrlV30VisibilityEnum","ResearcherUrlV30Rc1VisibilityEnum","ResearcherUrlV30Rc2VisibilityEnum","ServiceSummaryV30VisibilityEnum","ServiceSummaryV30Rc1VisibilityEnum","ServiceSummaryV30Rc2VisibilityEnum","ServiceV30VisibilityEnum","ServiceV30Rc1VisibilityEnum","ServiceV30Rc2VisibilityEnum","TranslatedTitleV30LanguageCodeEnum","TranslatedTitleV30Rc2LanguageCodeEnum","WorkSummaryV20TypeEnum","WorkSummaryV20VisibilityEnum","WorkSummaryV30TypeEnum","WorkSummaryV30VisibilityEnum","WorkSummaryV30Rc1TypeEnum","WorkSummaryV30Rc1VisibilityEnum","WorkSummaryV30Rc2TypeEnum","WorkSummaryV30Rc2VisibilityEnum","WorkV20TypeEnum","WorkV20VisibilityEnum","WorkV30TypeEnum","WorkV30LanguageCodeEnum","WorkV30VisibilityEnum","WorkV30Rc1TypeEnum","WorkV30Rc1VisibilityEnum","WorkV30Rc2TypeEnum","WorkV30Rc2LanguageCodeEnum","WorkV30Rc2VisibilityEnum","ClientSummaryFromJSON","ClientSummaryFromJSONTyped","CompletionDateV20FromJSON","CompletionDateV20FromJSONTyped","ContributorEmailV20FromJSON","ContributorEmailV20FromJSONTyped","ContributorOrcidV20FromJSON","ContributorOrcidV20FromJSONTyped","ContributorV20FromJSON","ContributorV20FromJSONTyped","CreditNameV20FromJSON","CountryV20FromJSONTyped","CreatedDateV20FromJSONTyped","CreditNameV20FromJSONTyped","DayV20FromJSON","DayV20FromJSONTyped","DeactivationDateV20FromJSON","DeactivationDateV20FromJSONTyped","DisambiguatedOrganizationV20FromJSON","DisambiguatedOrganizationV20FromJSONTyped","EducationSummaryV20FromJSON","EducationSummaryV20FromJSONTyped","FuzzyDateV20FromJSON","OrganizationV20FromJSON","EducationV20FromJSON","EducationV20FromJSONTyped","EducationsSummaryV20FromJSONTyped","EmailV20FromJSON","EmailV20FromJSONTyped","EmailsV20FromJSON","EmailsV20FromJSONTyped","EmploymentSummaryV20FromJSON","EmploymentSummaryV20FromJSONTyped","EmploymentV20FromJSON","EmploymentV20FromJSONTyped","EmploymentsSummaryV20FromJSONTyped","ExternalIDV20FromJSON","ExternalIDV20FromJSONTyped","UrlV20FromJSON","ExternalIDsV20FromJSON","ExternalIDsV20FromJSONTyped","FamilyNameV20FromJSON","FamilyNameV20FromJSONTyped","FundingContributorAttributesV20FromJSON","FundingContributorAttributesV20FromJSONTyped","FundingContributorV20FromJSON","FundingContributorV20FromJSONTyped","FundingContributorsV20FromJSON","FundingContributorsV20FromJSONTyped","FundingGroupV20FromJSON","FundingGroupV20FromJSONTyped","FundingSummaryV20FromJSON","FundingSummaryV20FromJSONTyped","FundingTitleV20FromJSON","FundingTitleV20FromJSONTyped","TitleV20FromJSON","TranslatedTitleV20FromJSON","FundingV20FromJSON","FundingV20FromJSONTyped","OrganizationDefinedFundingSubTypeV20FromJSON","FundingsV20FromJSONTyped","FuzzyDateV20FromJSONTyped","YearV20FromJSON","MonthV20FromJSON","GivenNamesV20FromJSON","GivenNamesV20FromJSONTyped","HistoryV20FromJSON","HistoryV20FromJSONTyped","SubmissionDateV20FromJSON","KeywordV20FromJSON","KeywordV20FromJSONTyped","KeywordsV20FromJSON","KeywordsV20FromJSONTyped","LastModifiedDateV20FromJSONTyped","MonthV20FromJSONTyped","NameV20FromJSON","NameV20FromJSONTyped","OrcidIdentifierV20FromJSON","OrcidIdentifierV20FromJSONTyped","OrganizationAddressV20FromJSON","OrganizationAddressV20FromJSONTyped","OrganizationDefinedFundingSubTypeV20FromJSONTyped","OrganizationV20FromJSONTyped","OtherNameV20FromJSON","OtherNameV20FromJSONTyped","OtherNamesV20FromJSON","OtherNamesV20FromJSONTyped","PeerReviewGroupV20FromJSON","PeerReviewGroupV20FromJSONTyped","PeerReviewSummaryV20FromJSON","PeerReviewSummaryV20FromJSONTyped","PeerReviewV20FromJSON","PeerReviewV20FromJSONTyped","WorkTitleV20FromJSON","PeerReviewsV20FromJSONTyped","PersonExternalIdentifierV20FromJSON","PersonExternalIdentifierV20FromJSONTyped","PersonExternalIdentifiersV20FromJSON","PersonExternalIdentifiersV20FromJSONTyped","PersonV20FromJSON","PersonV20FromJSONTyped","ResearcherUrlsV20FromJSON","PersonalDetailsV20FromJSON","PersonalDetailsV20FromJSONTyped","PreferencesV20FromJSON","PreferencesV20FromJSONTyped","PublicationDateV20FromJSON","PublicationDateV20FromJSONTyped","RecordV20FromJSON","RecordV20FromJSONTyped","ResearcherUrlV20FromJSON","ResearcherUrlV20FromJSONTyped","ResearcherUrlsV20FromJSONTyped","ResultV20FromJSON","ResultV20FromJSONTyped","SearchV20FromJSON","SearchV20FromJSONTyped","SourceClientIdV20FromJSON","SourceClientIdV20FromJSONTyped","SourceNameV20FromJSON","SourceNameV20FromJSONTyped","SourceOrcidV20FromJSON","SourceOrcidV20FromJSONTyped","SourceV20FromJSONTyped","SubmissionDateV20FromJSONTyped","SubtitleV20FromJSON","SubtitleV20FromJSONTyped","TitleV20FromJSONTyped","TranslatedTitleV20FromJSONTyped","UrlV20FromJSONTyped","WorkBulkV20FromJSON","WorkBulkV20FromJSONTyped","WorkContributorsV20FromJSON","WorkContributorsV20FromJSONTyped","WorkGroupV20FromJSON","WorkGroupV20FromJSONTyped","WorkSummaryV20FromJSON","WorkSummaryV20FromJSONTyped","WorkTitleV20FromJSONTyped","WorkV20FromJSON","WorkV20FromJSONTyped","WorksSummaryV20FromJSONTyped","YearV20FromJSONTyped","q","searchByQueryRaw","orcid","viewActivitiesRaw","putCode","viewAddressRaw","viewAddressesRaw","viewBiographyRaw","clientId","viewClientRaw","viewEducationRaw","viewEducationSummaryRaw","viewEducationsRaw","viewEmailsRaw","viewEmploymentRaw","viewEmploymentSummaryRaw","viewEmploymentsRaw","viewExternalIdentifierRaw","viewExternalIdentifiersRaw","viewFundingRaw","viewFundingSummaryRaw","viewFundingsRaw","viewKeywordRaw","viewKeywordsRaw","viewOtherNameRaw","viewOtherNamesRaw","viewPeerReviewRaw","viewPeerReviewSummaryRaw","viewPeerReviewsRaw","viewPersonRaw","viewPersonalDetailsRaw","viewRecordRaw","viewResearcherUrlRaw","viewResearcherUrlsRaw","putCodes","viewSpecifiedWorksRaw","viewStatusTextRaw","viewWorkRaw","viewWorkSummaryRaw","viewWorksRaw","xmlValue","parsedText","explicitArray","error","AuthorFromXml","xml","AuthorFromXmlTyped","CategoryFromXml","CategoryFromXmlTyped","term","$","scheme","CommentFromXml","CommentFromXmlTyped","_","LinkFromXml","LinkFromXmlTyped","rel","type","EntryFromXml","EntryFromXmlTyped","updated","published","summary","comment","link","primary_category","category","ItemsPerPageFromXml","ItemsPerPageFromXmlTyped","namespace","TitleFromXml","TitleFromXmlTyped","FeedFromXml","FeedFromXmlTyped","feed","totalResults","startIndex","itemsPerPage","entry","_xmlns","xmlns","queryByIdRaw","person","orcidApi","viewPersonalDetails","then","debug","crWorksApi","arxivApi","queryById","ReuseType","ReuseFromJson","components","GraphView","TopFive","reuse","App","a","mount"],"mappings":"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SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAsC,KCAlD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAsC,KC1ElD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA0B,KCAtC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA0B,KCAtC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA6B,KCAzC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA6B,KC7BzC,SAAYC,GACR,kDACA,qBACA,kCACA,0CACA,oCACA,kCACA,8CACA,0CACA,eATJ,CAAYA,QAAwB,K,IIAxBuB,GAOAC,GCPAC,GAOAC,GCPAC,GAOAC,GCbAC,GCAAC,GCAAC,GCAAC,GC6GAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GC1BAC,GC0BAC,GCAAC,GCAAC,GC1BAC,GC0BAC,GCAAC,GCAAC,GC9CAC,GCAAC,GCAAC,GCAAC,GCoBAC,GC0BAC,GCAAC,GCAAC,GC1BAC,GC0BAC,GCAAC,GCAAC,GCpFAC,GCoBAC,GCAAC,GCAAC,GC7CAC,GCAAC,GCAAC,GCAAC,GCuGAC,GASAC,GCCAC,GASAC,GCTAC,GASAC,GCTAC,GASAC,GCqBAC,GASAC,GCTAC,GASAC,GCTAC,GASAC,GCTAC,GASAC,GCjFAC,GCAAC,GCAAC,GCAAC,GCsCAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCpDAC,GCAAC,GCAAC,GCAAC,GCoDAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCxCAC,GCAAC,GCAAC,GCAAC,GCzDAC,GCAAC,GCAAC,GCAAC,GC6CAC,GCAAC,GCAAC,GCAAC,GC8BAC,GCsBAC,GAUAC,GAOAC,GCjBAC,GAUAC,GAOAC,GCjBAC,GAUAC,GAOAC,GCmBAC,GAUAC,GAOAC,GA4CAC,GC7DAC,GAUAC,GAOAC,GAkDAC,GCnEAC,GAUAC,GAOAC,GAkDAC,GCnEAC,GAUAC,GAOAC,GAkDAC,GCrIAC,GAOAC,GCPAC,GAQAC,GCRAC,GAOAC,GCPAC,GAQAC,GCvFAC,GC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C,SAAU4e,GAAgBrd,GAC5B,OAAOqiB,GAAqBriB,GAAM,GAGhC,SAAUqiB,GAAqBriB,EAAWuB,GAC5C,YAAc9C,IAATuB,GAAiC,OAATA,EAClBA,EAEJ,CAEH,MAAU,GAAOA,EAAM,SAAuBA,EAAK,cAAjBvB,IzLA1C,SAAY8P,GACR,mBACA,8BAFJ,CAAYA,QAA+C,KAO3D,SAAYC,GACR,qBACA,yBACA,qBACA,6CACA,sCACA,8BACA,wCACA,oCACA,oDACA,sDACA,kCAXJ,CAAYA,QAA2C,KCPvD,SAAYC,GACR,mBACA,6BAFJ,CAAYA,QAAkD,KAO9D,SAAYC,GACR,qBACA,yBACA,qBACA,6CACA,sCACA,8BACA,wCACA,oCACA,oDACA,sDACA,kCAXJ,CAAYA,QAA8C,KCP1D,SAAYC,GACR,mBACA,6BAFJ,CAAYA,QAAkD,KAO9D,SAAYC,GACR,qBACA,yBACA,qBACA,6CACA,sCACA,8BACA,wCACA,oCACA,oDACA,sDACA,kCAXJ,CAAYA,QAA8C,KCb1D,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAmB,KCA/B,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAmB,KCA/B,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAsB,KCAlC,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAsB,KC6GlC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAmC,KCA/C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAsC,KCAlD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAsC,KCAlD,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAA4B,KCAxC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA+B,KCA3C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA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AJJ,CAAYA,QAAwB,KCzDpC,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAiC,KCA7C,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAiC,KCA7C,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAoC,KCAhD,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1PJ,CAAYA,QAAoC,KC6ChD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA0B,KCAtC,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAA0B,KCAtC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA6B,KCAzC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA6B,KC8BzC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAkC,KCsB9C,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAAoC,KAUhD,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAAkC,KAO9C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAkC,KCjB9C,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAAuC,KAUnD,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAAqC,KAOjD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAqC,KCjBjD,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAAuC,KAUnD,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAAqC,KAOjD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAqC,KCmBjD,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAA6B,KAUzC,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAA2B,KAOvC,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,iCACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,gDACA,qBACA,4CACA,kCACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BAvCJ,CAAYA,QAA4B,KA4CxC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA2B,KC7DvC,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAA6B,KAUzC,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAA2B,KAOvC,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,8CACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,mBACA,yBACA,mBACA,gCACA,2DACA,2BA7CJ,CAAYA,QAA4B,KAkDxC,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAA2B,KCnEvC,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAAgC,KAU5C,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAA8B,KAO1C,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,iCACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,mBACA,yBACA,mBACA,gCACA,2DACA,2BA7CJ,CAAYA,QAA+B,KAkD3C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA8B,KCnE1C,SAAYC,GACR,yBACA,qBACA,qBACA,mBACA,2BALJ,CAAYA,QAAgC,KAU5C,SAAYC,GACR,qBACA,6BAFJ,CAAYA,QAA8B,KAO1C,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,8CACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,mBACA,yBACA,mBACA,gCACA,2DACA,2BA7CJ,CAAYA,QAA+B,KAkD3C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA8B,KCrI1C,SAAYC,GACR,sBACA,iBAFJ,CAAYA,QAAqD,KAOjE,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAyC,KCPrD,SAAYC,GACR,sBACA,iBACA,4BAHJ,CAAYA,QAAqD,KAQjE,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAAyC,KCRrD,SAAYC,GACR,sBACA,iBAFJ,CAAYA,QAAwD,KAOpE,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA4C,KCPxD,SAAYC,GACR,sBACA,iBACA,4BAHJ,CAAYA,QAAwD,KAQpE,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA4C,KCvFxD,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aACA,aACA,aAZJ,CAAYA,QAAwB,KCApC,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aAdJ,CAAYA,QAAwB,KCApC,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aAdJ,CAAYA,QAA2B,KCAvC,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aAdJ,CAAYA,QAA2B,KCiCvC,SAAYC,GACR,mBACA,qBACA,mBAHJ,CAAYA,QAA+B,KCA3C,SAAYC,GACR,mBACA,qBACA,mBAHJ,CAAYA,QAAkC,KC4E9C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAqC,KCAjD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAwC,KCApD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAwC,KCApD,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAA8B,KCA1C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAiC,KCA7C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAiC,KCtE7C,SAAYC,GACR,uCACA,+BACA,2BACA,yBAJJ,CAAYA,QAAuC,KCAnD,SAAYC,GACR,uCACA,+BACA,2BACA,yBAJJ,CAAYA,QAA0C,KCsBtD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAwC,KCApD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA2C,KCAvD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA2C,KCUvD,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAAiC,KCA7C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAoC,KCAhD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAoC,KCJhD,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA8B,KCA1C,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAA8B,KCA1C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAiC,KCA7C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAiC,KC0C7C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA+B,KCA3C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAkC,KCA9C,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAkC,KCA9C,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAAwB,KCApC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA2B,KCAvC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA2B,KCvGvC,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1LJ,CAAYA,QAAkC,KCA9C,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1LJ,CAAYA,QAAqC,KCiFjD,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,iCACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,gDACA,qBACA,4CACA,kCACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BAvCJ,CAAYA,QAAsB,KA4ClC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA4B,KCxBxC,SAAYC,GACR,6BACA,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,+CACA,wBACA,wCACA,6BACA,8CACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,sCACA,yBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BA5CJ,CAAYA,QAAsB,KAiDlC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA4B,KCjDxC,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,iCACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,yBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BAzCJ,CAAYA,QAAyB,KA8CrC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA+B,KC9C3C,SAAYC,GACR,6BACA,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,+CACA,wBACA,wCACA,6BACA,8CACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,sCACA,yBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BA5CJ,CAAYA,QAAyB,KAiDrC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAA+B,KCb3C,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,iCACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,gDACA,qBACA,4CACA,kCACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BAvCJ,CAAYA,QAAe,KA4C3B,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAqB,KC5CjC,SAAYC,GACR,6BACA,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,+CACA,wBACA,wCACA,6BACA,8CACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,sCACA,yBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BA5CJ,CAAYA,QAAe,KAiD3B,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1LJ,CAAYA,QAAuB,KA+LnC,SAAYC,GACR,uBACA,sCACA,qBAHJ,CAAYA,QAAqB,KChPjC,SAAYC,GACR,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,wBACA,wCACA,6BACA,iCACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,yBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BAzCJ,CAAYA,QAAkB,KA8C9B,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAwB,KC9CpC,SAAYC,GACR,6BACA,gDACA,gCACA,8BACA,iBACA,8CACA,wCACA,0CACA,+CACA,wBACA,wCACA,6BACA,8CACA,8BACA,4CACA,2BACA,sCACA,kCACA,oCACA,uBACA,wCACA,qBACA,4CACA,0CACA,sCACA,mBACA,qBACA,sCACA,yBACA,gDACA,qBACA,4CACA,kCACA,yBACA,uCACA,+CACA,mEACA,4CACA,iBACA,2BACA,+BACA,uBACA,kCACA,2BA5CJ,CAAYA,QAAkB,KAiD9B,SAAYC,GACR,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,kBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA1LJ,CAAYA,QAA0B,KA+LtC,SAAYC,GACR,uBACA,sCACA,qBACA,uBAJJ,CAAYA,QAAwB,KsD7C7B,IClGM,GAAb,2OAKI,WAAuBtU,GAAvB,kGACUE,EAAuB,QAEDzG,IAAxBuG,EAAkBsd,IAClBpd,EAAgB,KAAOF,EAAkBsd,GAGvCnd,EAAwC,GAPlD,SAS2BvH,KAAKwH,QAAQ,CAChC5G,KAAM,eACNY,OAAQ,MACRF,QAASiG,EACTzG,MAAOwG,IAbf,cASUzH,EATV,yBAgBW,IAAI,GAAwBA,GAAU,SAAC2D,GAAD,OAAesf,GAAkBtf,OAhBlF,gDALJ,8IA2BI,WAAoB4D,GAApB,uGAC2BpH,KAAK2kB,iBAAiBvd,GADjD,cACUvH,EADV,gBAEiBA,EAASpC,QAF1B,wFA3BJ,kJAmCI,WAAwB2J,GAAxB,8FACoC,OAA5BA,EAAkBwd,YAA8C/jB,IAA5BuG,EAAkBwd,MAD9D,sBAEc,IAAI,GAAsB,QAAQ,iGAFhD,cAKUtd,EAAuB,GAEvBC,EAAwC,GA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","file":"js/app.31e606b4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/DoR/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=0234fe04&lang=css\"","<template>\n  <div class=\"w-full\">\n      <transition name=\"fade\" appear>\n        <img v-if=\"showSplash\"  alt=\"Department of Reuse logo\" src=\"./assets/dor-logo.svg\" class=\"place-self-center w-1/3 mx-auto mt-10\">\n        <div class=\"\" v-else>\n\n          <div class=\"h-screen w-screen fixed bg-logo bg-no-repeat bg-cover bg-center\">\n            <div class=\"h-full w-full bg-gray-50 bg-opacity-95 \">\n               <GraphView :reuseData=\"reuseData\"/>\n            </div>\n          </div>\n\n          <div class=\"lg:flex mb-4 pt-5 px-5 relative\">\n            <div class=\"flex-grow order-2\">\n              <header class=\"bg-opacity-40 bg-gray-200 z-10\">\n                <h1 class=\"text-4xl\">Department of Reuse</h1>\n                <h2>- under development / data widely incomplete -</h2>\n              </header>\n            </div>\n            <div class=\"flex-none lg:w-72 order-1 w-full\">\n              <h2 class=\"text-xl bg-opacity-80 bg-blue-200\">Filter</h2>\n              <label>Reuse type</label>\n              <select class=\"\" name=\"\">\n                <option value=\"\">All</option>\n                <option value=\"\">Methodology</option>\n                <option value=\"\">Dataset</option>\n                <option value=\"\">Tool</option>\n                <option value=\"\">Statistics</option>\n                <option value=\"\">Protocol</option>\n                <option value=\"\">Metric</option>\n              </select>\n            </div>\n            <div class=\"flex-none w-72 order-3 hidden lg:block\" >\n                <TopFive class=\"z-10\" />\n            </div>\n          </div>\n          <footer class=\"mt-3 absolute -bottom-0 mx-auto w-full pb-3 bg-opacity-40 bg-gray-200\">\n            <p class=\"text-xs\">This is a community effort started by Maria Teresa Baldassarre, Neil Ernst, Ben Hermann, and Tim Menzies.</p>\n            <p class=\"text-xs\">Please feel free to <a class=\"text-blue-600\" href=\"https://github.com/bhermann/DoR\">comment or contribute on GitHub</a>.</p>\n          </footer>\n\n        </div>\n\n      </transition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, onMounted } from \"vue\";\n\nimport GraphView from './components/GraphView.vue';\nimport TopFive from './components/TopFive.vue';\nimport reuseJson from './assets/data/reuse.json';\nimport { ReuseFromJson } from './backend/models/Reuse';\n\nexport default {\n  name: \"App\",\n  components: { GraphView, TopFive },\n  setup() {\n    let showSplash = ref(true);\n    const reuseData = (reuseJson as Array<any>).map(ReuseFromJson);\n\n    onMounted(() => {\n      setTimeout(() => {\n        showSplash.value = false;\n      }, 3000);\n     \n\n    });\n\n    return { showSplash, reuseData };\n  },\n};\n\n/*\nmethods: {\n   nodeClicked(doi) {\n     this.$refs.doiFull.updateRecord(doi);\n   },\n   computeTopResearchers(data) {\n     return {\n       reused: this.sortByCount(data.flatMap((item) => { return item.reused.author; }), this.authorKey).slice(0,5),\n       reusing: this.sortByCount(data.flatMap((item) => { return item.reusing.author; }), this.authorKey).slice(0,5)\n     };\n   },\n   computeTopPublications(data) {\n     return {\n       reused: this.sortByCount(data.map((item) => { return {title: item.reused.title, url: item.reused.url }; }), this.publicationKey).slice(0,5),\n       reusing: this.sortByCount(data.map((item) => { return {title: item.reusing.title, url: item.reused.url }; }), this.publicationKey).slice(0,5)\n     };\n   },\n   authorKey(item) {\n     return item.given + \" \" + item.family;\n   },\n   publicationKey(item) {\n     return item.title;\n   },\n   sortByCount(toBeSorted, key) {\n     var hash = new Object();\n\n     toBeSorted.forEach(function (element) {\n                            var name = key(element);\n                            if (hash[name] == undefined) {\n                                hash[name] = 1;\n                            }\n                            else {\n                                hash[name] +=1;\n                            }});\n\n     var sorted = toBeSorted.sort(function(a,b) {\n       return hash[key(b)] - hash[key(a)];\n     });\n\n     var seen = new Object();\n     sorted = sorted.filter(function(item) {\n       var name = key(item);\n       if (seen[name] == undefined) {\n           seen[name] = true;\n           return true;\n       }\n       return false;\n     });\n\n     return sorted;\n   }\n }\n\n*/\n</script>\n\n<style>\n#app {\n  font-family: 'Bitter', serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#app h1,\n#app h2 {\n  font-weight: bold;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n","<template>\n  <div ref=\"cyroot\" class=\"h-full w-full mx-auto pt-14 pb-10\"></div>\n</template>\n\n<script lang=\"ts\">\nimport cytoscape, { Core, CytoscapeOptions, ElementsDefinition, NodeDefinition, EdgeDefinition } from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\n\nimport { ref, onMounted, PropType } from \"vue\";\n\nimport Reuse from \"../backend/models/Reuse\";\nimport { CachedWorksApi } from \"../tools/CachedWorksApi\";\nimport { Author, WorkMessage } from \"@/clients/crossref\";\n\nexport default {\n  props: {\n    reuseData: Array as PropType<Array<Reuse>>,\n  },\n  setup(props: any) {\n    const cyroot = ref(null);\n    const cyInstance = ref<Core | null>(null);\n    const worksApi = new CachedWorksApi();\n\n    async function transformToGraph(data: Array<Reuse>) : Promise<ElementsDefinition> {\n      const transformedNodes = await getNodes(data);\n     \n      return {\n        nodes: transformedNodes,\n        edges: getLinks(data),\n      };\n    }\n    async function getNodes(data: Array<Reuse>) : Promise<Array<NodeDefinition>> {\n      const reusedNodes = async() => {\n        return Promise.all(\n          data.map(getReusedNode)\n        )\n      };\n\n      const sourceNodes = async() => {\n        return Promise.all(\n          data.map(getSourceNode)\n        )\n      };\n      \n      const result = \n        (await reusedNodes())\n        .concat(await sourceNodes())\n        .sort()\n        .filter(function (item: any, pos: any, ary: any) {\n           return !pos || item.data.id != ary[pos - 1].data.id;\n        });\n\n      return result;\n    }\n\n    async function getReusedNode(item : Reuse) : Promise<NodeDefinition> {\n      const title = await getItemTitle(item.reusedDOI);\n      return {\n            data: { id: item.reusedDOI, name: title },\n          };\n    }\n\n    async function getSourceNode(item : Reuse) : Promise<NodeDefinition> {\n      return {\n            data: { id: item.sourceDOI, name: (await getItemTitle(item.sourceDOI)) },\n          };\n    }\n    \n    function getLinks(data: Array<Reuse>) : Array<EdgeDefinition> {\n      return data.map((item: Reuse) => {\n        return { data: { source: item.sourceDOI, target: item.reusedDOI } };\n      });\n    }\n    async function getItemTitle(doi: string) {\n      const work = await worksApi.worksDoiGet({ doi: doi })\n        .catch((err) => {\n          console.warn(err);\n        });\n\n      if (work as WorkMessage) {\n        const workMessage = (work as WorkMessage).message\n        return getAuthors(workMessage.author) + \" (\" + workMessage.issued.dateParts[0][0] + \")\"; \n      } else {\n        return doi;\n      }\n \n    }\n    function getAuthors(authors: Array<Author>): string {\n      if (!authors) return \"\";\n      if (!authors[0]) return \"\";\n      if (authors.length == 1) return authors[0].family;\n      return authors[0].family + \" et al.\";\n    }\n\n    const elementsPromise = transformToGraph(props.reuseData);\n\n    onMounted(() => {\n      var cytoConfig = {\n        container: cyroot.value,\n        elements: elementsPromise,\n        layout: {\n          name: \"fcose\",\n        },\n        style: [\n          {\n            selector: \"node\",\n            style: {\n              content: \"data(name)\",\n              \"font-family\": \"Roboto Condensed, Helvetica, Arial, sans-serif\",\n              width: 10,\n              height: 10,\n              \"font-size\": \"8pt\",\n              \"text-opacity\": 1,\n              \"text-valign\": \"center\",\n              \"text-halign\": \"right\",\n              color: \"#2c3e50\",\n              \"background-color\": \"#77aaff\",\n            },\n          },\n          {\n            selector: \"edge\",\n            style: {\n              \"curve-style\": \"bezier\",\n              \"target-arrow-shape\": \"triangle\",\n              \"line-color\": \"#9dbaea\",\n              \"target-arrow-color\": \"#9dbaea\",\n            },\n          },\n        ],\n        // initial viewport state:\n        zoom: 1,\n        pan: { x: 0, y: 0 },\n        // interaction options:\n        minZoom: 1e-50,\n        maxZoom: 1e50,\n        zoomingEnabled: true,\n        userZoomingEnabled: true,\n        panningEnabled: true,\n        userPanningEnabled: true,\n        boxSelectionEnabled: true,\n        selectionType: \"single\",\n        touchTapThreshold: 8,\n        desktopTapThreshold: 4,\n        autolock: false,\n        autoungrabify: false,\n        autounselectify: false,\n        // rendering options:\n        headless: false,\n        styleEnabled: true,\n        hideEdgesOnViewport: false,\n        textureOnViewport: false,\n        motionBlur: true,\n        motionBlurOpacity: 0.1,\n        animate: true,\n        pixelRatio: \"auto\",\n      } as CytoscapeOptions;\n      cytoscape.use(fcose);\n      var cy = cytoscape(cytoConfig);\n      cy.layout({ name: \"fcose\" }).run();\n      cyInstance.value = cy;\n\n      var throttle: any;\n      function handleWindowResize() {\n        clearTimeout(throttle);\n        throttle = setTimeout(function () {\n          cyInstance.value!.layout({ name: \"fcose\" }).run();\n        }, 100);\n      }\n\n      window.addEventListener(\"resize\", handleWindowResize);\n    });\n\n    return {\n      cyroot,\n      cyInstance,\n    };\n  },\n};\n</script>\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"https://api.crossref.org\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n        ? context.body\n        : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Date) {\n                return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Affiliation\n */\nexport interface Affiliation {\n    /**\n     * \n     * @type {string}\n     * @memberof Affiliation\n     */\n    name: string;\n}\n\nexport function AffiliationFromJSON(json: any): Affiliation {\n    return AffiliationFromJSONTyped(json, false);\n}\n\nexport function AffiliationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Affiliation {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n    };\n}\n\nexport function AffiliationToJSON(value?: Affiliation | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Agency\n */\nexport interface Agency {\n    /**\n     * \n     * @type {string}\n     * @memberof Agency\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Agency\n     */\n    label: string;\n}\n\nexport function AgencyFromJSON(json: any): Agency {\n    return AgencyFromJSONTyped(json, false);\n}\n\nexport function AgencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Agency {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n        'label': json['label'],\n    };\n}\n\nexport function AgencyToJSON(value?: Agency | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'label': value.label,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DoiAgency,\n    DoiAgencyFromJSON,\n    DoiAgencyFromJSONTyped,\n    DoiAgencyToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AgencyMessage\n */\nexport interface AgencyMessage {\n    /**\n     * \n     * @type {string}\n     * @memberof AgencyMessage\n     */\n    status: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AgencyMessage\n     */\n    messageType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AgencyMessage\n     */\n    messageVersion: string;\n    /**\n     * \n     * @type {DoiAgency}\n     * @memberof AgencyMessage\n     */\n    message: DoiAgency;\n}\n\nexport function AgencyMessageFromJSON(json: any): AgencyMessage {\n    return AgencyMessageFromJSONTyped(json, false);\n}\n\nexport function AgencyMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgencyMessage {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'status': json['status'],\n        'messageType': json['message-type'],\n        'messageVersion': json['message-version'],\n        'message': DoiAgencyFromJSON(json['message']),\n    };\n}\n\nexport function AgencyMessageToJSON(value?: AgencyMessage | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'message-type': value.messageType,\n        'message-version': value.messageVersion,\n        'message': DoiAgencyToJSON(value.message),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Affiliation,\n    AffiliationFromJSON,\n    AffiliationFromJSONTyped,\n    AffiliationToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Author\n */\nexport interface Author {\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    oRCID?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    suffix?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    given?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    family: string;\n    /**\n     * \n     * @type {Array<Affiliation>}\n     * @memberof Author\n     */\n    affiliation: Array<Affiliation>;\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    name?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Author\n     */\n    authenticatedOrcid?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    prefix?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Author\n     */\n    sequence: string;\n}\n\nexport function AuthorFromJSON(json: any): Author {\n    return AuthorFromJSONTyped(json, false);\n}\n\nexport function AuthorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Author {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'oRCID': !exists(json, 'ORCID') ? undefined : json['ORCID'],\n        'suffix': !exists(json, 'suffix') ? undefined : json['suffix'],\n        'given': !exists(json, 'given') ? undefined : json['given'],\n        'family': json['family'],\n        'affiliation': ((json['affiliation'] as Array<any>).map(AffiliationFromJSON)),\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'authenticatedOrcid': !exists(json, 'authenticated-orcid') ? undefined : json['authenticated-orcid'],\n        'prefix': !exists(json, 'prefix') ? undefined : json['prefix'],\n        'sequence': json['sequence'],\n    };\n}\n\nexport function AuthorToJSON(value?: Author | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'ORCID': value.oRCID,\n        'suffix': value.suffix,\n        'given': value.given,\n        'family': value.family,\n        'affiliation': ((value.affiliation as Array<any>).map(AffiliationToJSON)),\n        'name': value.name,\n        'authenticated-orcid': value.authenticatedOrcid,\n        'prefix': value.prefix,\n        'sequence': value.sequence,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DateParts\n */\nexport interface DateParts {\n    /**\n     * \n     * @type {Array<Array<number>>}\n     * @memberof DateParts\n     */\n    dateParts: Array<Array<number>>;\n}\n\nexport function DatePartsFromJSON(json: any): DateParts {\n    return DatePartsFromJSONTyped(json, false);\n}\n\nexport function DatePartsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateParts {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'dateParts': json['date-parts'],\n    };\n}\n\nexport function DatePartsToJSON(value?: DateParts | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'date-parts': value.dateParts,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Agency,\n    AgencyFromJSON,\n    AgencyFromJSONTyped,\n    AgencyToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DoiAgency\n */\nexport interface DoiAgency {\n    /**\n     * The DOI identifier associated with the work\n     * @type {string}\n     * @memberof DoiAgency\n     */\n    dOI: string;\n    /**\n     * \n     * @type {Agency}\n     * @memberof DoiAgency\n     */\n    agency: Agency;\n}\n\nexport function DoiAgencyFromJSON(json: any): DoiAgency {\n    return DoiAgencyFromJSONTyped(json, false);\n}\n\nexport function DoiAgencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DoiAgency {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'dOI': json['DOI'],\n        'agency': AgencyFromJSON(json['agency']),\n    };\n}\n\nexport function DoiAgencyToJSON(value?: DoiAgency | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'DOI': value.dOI,\n        'agency': AgencyToJSON(value.agency),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ModelDate\n */\nexport interface ModelDate {\n    /**\n     * \n     * @type {Array<Array<number>>}\n     * @memberof ModelDate\n     */\n    dateParts: Array<Array<number>>;\n    /**\n     * \n     * @type {Date}\n     * @memberof ModelDate\n     */\n    dateTime: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof ModelDate\n     */\n    timestamp: number;\n}\n\nexport function ModelDateFromJSON(json: any): ModelDate {\n    return ModelDateFromJSONTyped(json, false);\n}\n\nexport function ModelDateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelDate {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'dateParts': json['date-parts'],\n        'dateTime': (new Date(json['date-time'])),\n        'timestamp': json['timestamp'],\n    };\n}\n\nexport function ModelDateToJSON(value?: ModelDate | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'date-parts': value.dateParts,\n        'date-time': (value.dateTime.toISOString()),\n        'timestamp': value.timestamp,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Query\n */\nexport interface Query {\n    /**\n     * \n     * @type {number}\n     * @memberof Query\n     */\n    startIndex: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Query\n     */\n    searchTerms: string;\n}\n\nexport function QueryFromJSON(json: any): Query {\n    return QueryFromJSONTyped(json, false);\n}\n\nexport function QueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Query {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'startIndex': json['start-index'],\n        'searchTerms': json['search-terms'],\n    };\n}\n\nexport function QueryToJSON(value?: Query | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'start-index': value.startIndex,\n        'search-terms': value.searchTerms,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Reference\n */\nexport interface Reference {\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    issn?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    standardsBody?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    issue?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    key: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    seriesTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    isbnType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    doiAssertedBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    firstPage?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    isbn?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    doi?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    component?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    articleTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    volumeTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    volume?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    author?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    standardDesignator?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    year?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    unstructured?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    edition?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    journalTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Reference\n     */\n    issnType?: string;\n}\n\nexport function ReferenceFromJSON(json: any): Reference {\n    return ReferenceFromJSONTyped(json, false);\n}\n\nexport function ReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reference {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'issn': !exists(json, 'issn') ? undefined : json['issn'],\n        'standardsBody': !exists(json, 'standards-body') ? undefined : json['standards-body'],\n        'issue': !exists(json, 'issue') ? undefined : json['issue'],\n        'key': json['key'],\n        'seriesTitle': !exists(json, 'series-title') ? undefined : json['series-title'],\n        'isbnType': !exists(json, 'isbn-type') ? undefined : json['isbn-type'],\n        'doiAssertedBy': !exists(json, 'doi-asserted-by') ? undefined : json['doi-asserted-by'],\n        'firstPage': !exists(json, 'first-page') ? undefined : json['first-page'],\n        'isbn': !exists(json, 'isbn') ? undefined : json['isbn'],\n        'doi': !exists(json, 'doi') ? undefined : json['doi'],\n        'component': !exists(json, 'component') ? undefined : json['component'],\n        'articleTitle': !exists(json, 'article-title') ? undefined : json['article-title'],\n        'volumeTitle': !exists(json, 'volume-title') ? undefined : json['volume-title'],\n        'volume': !exists(json, 'volume') ? undefined : json['volume'],\n        'author': !exists(json, 'author') ? undefined : json['author'],\n        'standardDesignator': !exists(json, 'standard-designator') ? undefined : json['standard-designator'],\n        'year': !exists(json, 'year') ? undefined : json['year'],\n        'unstructured': !exists(json, 'unstructured') ? undefined : json['unstructured'],\n        'edition': !exists(json, 'edition') ? undefined : json['edition'],\n        'journalTitle': !exists(json, 'journal-title') ? undefined : json['journal-title'],\n        'issnType': !exists(json, 'issn-type') ? undefined : json['issn-type'],\n    };\n}\n\nexport function ReferenceToJSON(value?: Reference | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'issn': value.issn,\n        'standards-body': value.standardsBody,\n        'issue': value.issue,\n        'key': value.key,\n        'series-title': value.seriesTitle,\n        'isbn-type': value.isbnType,\n        'doi-asserted-by': value.doiAssertedBy,\n        'first-page': value.firstPage,\n        'isbn': value.isbn,\n        'doi': value.doi,\n        'component': value.component,\n        'article-title': value.articleTitle,\n        'volume-title': value.volumeTitle,\n        'volume': value.volume,\n        'author': value.author,\n        'standard-designator': value.standardDesignator,\n        'year': value.year,\n        'unstructured': value.unstructured,\n        'edition': value.edition,\n        'journal-title': value.journalTitle,\n        'issn-type': value.issnType,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Author,\n    AuthorFromJSON,\n    AuthorFromJSONTyped,\n    AuthorToJSON,\n    DateParts,\n    DatePartsFromJSON,\n    DatePartsFromJSONTyped,\n    DatePartsToJSON,\n    ModelDate,\n    ModelDateFromJSON,\n    ModelDateFromJSONTyped,\n    ModelDateToJSON,\n    Reference,\n    ReferenceFromJSON,\n    ReferenceFromJSONTyped,\n    ReferenceToJSON,\n    WorkAssertion,\n    WorkAssertionFromJSON,\n    WorkAssertionFromJSONTyped,\n    WorkAssertionToJSON,\n    WorkClinicalTrial,\n    WorkClinicalTrialFromJSON,\n    WorkClinicalTrialFromJSONTyped,\n    WorkClinicalTrialToJSON,\n    WorkDomain,\n    WorkDomainFromJSON,\n    WorkDomainFromJSONTyped,\n    WorkDomainToJSON,\n    WorkFreeToRead,\n    WorkFreeToReadFromJSON,\n    WorkFreeToReadFromJSONTyped,\n    WorkFreeToReadToJSON,\n    WorkFunder,\n    WorkFunderFromJSON,\n    WorkFunderFromJSONTyped,\n    WorkFunderToJSON,\n    WorkISSNType,\n    WorkISSNTypeFromJSON,\n    WorkISSNTypeFromJSONTyped,\n    WorkISSNTypeToJSON,\n    WorkInstitution,\n    WorkInstitutionFromJSON,\n    WorkInstitutionFromJSONTyped,\n    WorkInstitutionToJSON,\n    WorkJournalIssue,\n    WorkJournalIssueFromJSON,\n    WorkJournalIssueFromJSONTyped,\n    WorkJournalIssueToJSON,\n    WorkLicense,\n    WorkLicenseFromJSON,\n    WorkLicenseFromJSONTyped,\n    WorkLicenseToJSON,\n    WorkLink,\n    WorkLinkFromJSON,\n    WorkLinkFromJSONTyped,\n    WorkLinkToJSON,\n    WorkReview,\n    WorkReviewFromJSON,\n    WorkReviewFromJSONTyped,\n    WorkReviewToJSON,\n    WorkStandardsBody,\n    WorkStandardsBodyFromJSON,\n    WorkStandardsBodyFromJSONTyped,\n    WorkStandardsBodyToJSON,\n    WorkUpdate,\n    WorkUpdateFromJSON,\n    WorkUpdateFromJSONTyped,\n    WorkUpdateToJSON,\n    WorksMessageMessageItemsRelationJavaLangString34985,\n    WorksMessageMessageItemsRelationJavaLangString34985FromJSON,\n    WorksMessageMessageItemsRelationJavaLangString34985FromJSONTyped,\n    WorksMessageMessageItemsRelationJavaLangString34985ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Work\n */\nexport interface Work {\n    /**\n     * \n     * @type {WorkInstitution}\n     * @memberof Work\n     */\n    institution?: WorkInstitution;\n    /**\n     * \n     * @type {ModelDate}\n     * @memberof Work\n     */\n    indexed: ModelDate;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    posted?: DateParts;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    publisherLocation?: string;\n    /**\n     * \n     * @type {Array<WorkUpdate>}\n     * @memberof Work\n     */\n    updateTo?: Array<WorkUpdate>;\n    /**\n     * \n     * @type {Array<WorkStandardsBody>}\n     * @memberof Work\n     */\n    standardsBody?: Array<WorkStandardsBody>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    editionNumber?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    groupTitle?: Array<string>;\n    /**\n     * \n     * @type {number}\n     * @memberof Work\n     */\n    referenceCount: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    publisher: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    issue?: string;\n    /**\n     * \n     * @type {Array<WorkISSNType>}\n     * @memberof Work\n     */\n    isbnType?: Array<WorkISSNType>;\n    /**\n     * \n     * @type {Array<WorkLicense>}\n     * @memberof Work\n     */\n    license?: Array<WorkLicense>;\n    /**\n     * \n     * @type {Array<WorkFunder>}\n     * @memberof Work\n     */\n    funder?: Array<WorkFunder>;\n    /**\n     * \n     * @type {WorkDomain}\n     * @memberof Work\n     */\n    contentDomain: WorkDomain;\n    /**\n     * \n     * @type {Array<Author>}\n     * @memberof Work\n     */\n    chair?: Array<Author>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    shortContainerTitle?: string;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    accepted?: DateParts;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    contentUpdated?: DateParts;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    publishedPrint?: DateParts;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    _abstract?: string;\n    /**\n     * The DOI identifier associated with the work\n     * @type {string}\n     * @memberof Work\n     */\n    dOI: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    type: string;\n    /**\n     * \n     * @type {ModelDate}\n     * @memberof Work\n     */\n    created: ModelDate;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    approved?: DateParts;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    page?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    updatePolicy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    source: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Work\n     */\n    isReferencedByCount: number;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    title: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    prefix: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    volume?: string;\n    /**\n     * \n     * @type {Array<WorkClinicalTrial>}\n     * @memberof Work\n     */\n    clinicalTrialNumber?: Array<WorkClinicalTrial>;\n    /**\n     * \n     * @type {Array<Author>}\n     * @memberof Work\n     */\n    author: Array<Author>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    member: string;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    contentCreated?: DateParts;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    publishedOnline?: DateParts;\n    /**\n     * \n     * @type {Reference}\n     * @memberof Work\n     */\n    reference?: Reference;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    containerTitle?: Array<string>;\n    /**\n     * \n     * @type {WorkReview}\n     * @memberof Work\n     */\n    review?: WorkReview;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    originalTitle?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    language?: string;\n    /**\n     * \n     * @type {Array<WorkLink>}\n     * @memberof Work\n     */\n    link?: Array<WorkLink>;\n    /**\n     * \n     * @type {ModelDate}\n     * @memberof Work\n     */\n    deposited: ModelDate;\n    /**\n     * \n     * @type {number}\n     * @memberof Work\n     */\n    score: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    degree?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    subtitle?: Array<string>;\n    /**\n     * \n     * @type {Array<Author>}\n     * @memberof Work\n     */\n    translator?: Array<Author>;\n    /**\n     * \n     * @type {WorkFreeToRead}\n     * @memberof Work\n     */\n    freeToRead?: WorkFreeToRead;\n    /**\n     * \n     * @type {Array<Author>}\n     * @memberof Work\n     */\n    editor?: Array<Author>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    componentNumber?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    shortTitle?: Array<string>;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    issued: DateParts;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    iSBN?: Array<string>;\n    /**\n     * \n     * @type {number}\n     * @memberof Work\n     */\n    referencesCount: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    partNumber?: string;\n    /**\n     * \n     * @type {WorkJournalIssue}\n     * @memberof Work\n     */\n    journalIssue?: WorkJournalIssue;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    alternativeId?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    uRL: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    archive?: Array<string>;\n    /**\n     * \n     * @type {{ [key: string]: WorksMessageMessageItemsRelationJavaLangString34985; }}\n     * @memberof Work\n     */\n    relation?: { [key: string]: WorksMessageMessageItemsRelationJavaLangString34985; };\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    iSSN?: Array<string>;\n    /**\n     * \n     * @type {Array<WorkISSNType>}\n     * @memberof Work\n     */\n    issnType?: Array<WorkISSNType>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Work\n     */\n    subject?: Array<string>;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    publishedOther?: DateParts;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof Work\n     */\n    published?: DateParts;\n    /**\n     * \n     * @type {Array<WorkAssertion>}\n     * @memberof Work\n     */\n    assertion?: Array<WorkAssertion>;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    subtype?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Work\n     */\n    articleNumber?: string;\n}\n\nexport function WorkFromJSON(json: any): Work {\n    return WorkFromJSONTyped(json, false);\n}\n\nexport function WorkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Work {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'institution': !exists(json, 'institution') ? undefined : WorkInstitutionFromJSON(json['institution']),\n        'indexed': ModelDateFromJSON(json['indexed']),\n        'posted': !exists(json, 'posted') ? undefined : DatePartsFromJSON(json['posted']),\n        'publisherLocation': !exists(json, 'publisher-location') ? undefined : json['publisher-location'],\n        'updateTo': !exists(json, 'update-to') ? undefined : ((json['update-to'] as Array<any>).map(WorkUpdateFromJSON)),\n        'standardsBody': !exists(json, 'standards-body') ? undefined : ((json['standards-body'] as Array<any>).map(WorkStandardsBodyFromJSON)),\n        'editionNumber': !exists(json, 'edition-number') ? undefined : json['edition-number'],\n        'groupTitle': !exists(json, 'group-title') ? undefined : json['group-title'],\n        'referenceCount': json['reference-count'],\n        'publisher': json['publisher'],\n        'issue': !exists(json, 'issue') ? undefined : json['issue'],\n        'isbnType': !exists(json, 'isbn-type') ? undefined : ((json['isbn-type'] as Array<any>).map(WorkISSNTypeFromJSON)),\n        'license': !exists(json, 'license') ? undefined : ((json['license'] as Array<any>).map(WorkLicenseFromJSON)),\n        'funder': !exists(json, 'funder') ? undefined : ((json['funder'] as Array<any>).map(WorkFunderFromJSON)),\n        'contentDomain': WorkDomainFromJSON(json['content-domain']),\n        'chair': !exists(json, 'chair') ? undefined : ((json['chair'] as Array<any>).map(AuthorFromJSON)),\n        'shortContainerTitle': !exists(json, 'short-container-title') ? undefined : json['short-container-title'],\n        'accepted': !exists(json, 'accepted') ? undefined : DatePartsFromJSON(json['accepted']),\n        'contentUpdated': !exists(json, 'content-updated') ? undefined : DatePartsFromJSON(json['content-updated']),\n        'publishedPrint': !exists(json, 'published-print') ? undefined : DatePartsFromJSON(json['published-print']),\n        '_abstract': !exists(json, 'abstract') ? undefined : json['abstract'],\n        'dOI': json['DOI'],\n        'type': json['type'],\n        'created': ModelDateFromJSON(json['created']),\n        'approved': !exists(json, 'approved') ? undefined : DatePartsFromJSON(json['approved']),\n        'page': !exists(json, 'page') ? undefined : json['page'],\n        'updatePolicy': !exists(json, 'update-policy') ? undefined : json['update-policy'],\n        'source': json['source'],\n        'isReferencedByCount': json['is-referenced-by-count'],\n        'title': json['title'],\n        'prefix': json['prefix'],\n        'volume': !exists(json, 'volume') ? undefined : json['volume'],\n        'clinicalTrialNumber': !exists(json, 'clinical-trial-number') ? undefined : ((json['clinical-trial-number'] as Array<any>).map(WorkClinicalTrialFromJSON)),\n        'author': ((json['author'] as Array<any>).map(AuthorFromJSON)),\n        'member': json['member'],\n        'contentCreated': !exists(json, 'content-created') ? undefined : DatePartsFromJSON(json['content-created']),\n        'publishedOnline': !exists(json, 'published-online') ? undefined : DatePartsFromJSON(json['published-online']),\n        'reference': !exists(json, 'reference') ? undefined : ReferenceFromJSON(json['reference']),\n        'containerTitle': !exists(json, 'container-title') ? undefined : json['container-title'],\n        'review': !exists(json, 'review') ? undefined : WorkReviewFromJSON(json['review']),\n        'originalTitle': !exists(json, 'original-title') ? undefined : json['original-title'],\n        'language': !exists(json, 'language') ? undefined : json['language'],\n        'link': !exists(json, 'link') ? undefined : ((json['link'] as Array<any>).map(WorkLinkFromJSON)),\n        'deposited': ModelDateFromJSON(json['deposited']),\n        'score': json['score'],\n        'degree': !exists(json, 'degree') ? undefined : json['degree'],\n        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],\n        'translator': !exists(json, 'translator') ? undefined : ((json['translator'] as Array<any>).map(AuthorFromJSON)),\n        'freeToRead': !exists(json, 'free-to-read') ? undefined : WorkFreeToReadFromJSON(json['free-to-read']),\n        'editor': !exists(json, 'editor') ? undefined : ((json['editor'] as Array<any>).map(AuthorFromJSON)),\n        'componentNumber': !exists(json, 'component-number') ? undefined : json['component-number'],\n        'shortTitle': !exists(json, 'short-title') ? undefined : json['short-title'],\n        'issued': DatePartsFromJSON(json['issued']),\n        'iSBN': !exists(json, 'ISBN') ? undefined : json['ISBN'],\n        'referencesCount': json['references-count'],\n        'partNumber': !exists(json, 'part-number') ? undefined : json['part-number'],\n        'journalIssue': !exists(json, 'journal-issue') ? undefined : WorkJournalIssueFromJSON(json['journal-issue']),\n        'alternativeId': !exists(json, 'alternative-id') ? undefined : json['alternative-id'],\n        'uRL': json['URL'],\n        'archive': !exists(json, 'archive') ? undefined : json['archive'],\n        'relation': !exists(json, 'relation') ? undefined : (mapValues(json['relation'], WorksMessageMessageItemsRelationJavaLangString34985FromJSON)),\n        'iSSN': !exists(json, 'ISSN') ? undefined : json['ISSN'],\n        'issnType': !exists(json, 'issn-type') ? undefined : ((json['issn-type'] as Array<any>).map(WorkISSNTypeFromJSON)),\n        'subject': !exists(json, 'subject') ? undefined : json['subject'],\n        'publishedOther': !exists(json, 'published-other') ? undefined : DatePartsFromJSON(json['published-other']),\n        'published': !exists(json, 'published') ? undefined : DatePartsFromJSON(json['published']),\n        'assertion': !exists(json, 'assertion') ? undefined : ((json['assertion'] as Array<any>).map(WorkAssertionFromJSON)),\n        'subtype': !exists(json, 'subtype') ? undefined : json['subtype'],\n        'articleNumber': !exists(json, 'article-number') ? undefined : json['article-number'],\n    };\n}\n\nexport function WorkToJSON(value?: Work | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'institution': WorkInstitutionToJSON(value.institution),\n        'indexed': ModelDateToJSON(value.indexed),\n        'posted': DatePartsToJSON(value.posted),\n        'publisher-location': value.publisherLocation,\n        'update-to': value.updateTo === undefined ? undefined : ((value.updateTo as Array<any>).map(WorkUpdateToJSON)),\n        'standards-body': value.standardsBody === undefined ? undefined : ((value.standardsBody as Array<any>).map(WorkStandardsBodyToJSON)),\n        'edition-number': value.editionNumber,\n        'group-title': value.groupTitle,\n        'reference-count': value.referenceCount,\n        'publisher': value.publisher,\n        'issue': value.issue,\n        'isbn-type': value.isbnType === undefined ? undefined : ((value.isbnType as Array<any>).map(WorkISSNTypeToJSON)),\n        'license': value.license === undefined ? undefined : ((value.license as Array<any>).map(WorkLicenseToJSON)),\n        'funder': value.funder === undefined ? undefined : ((value.funder as Array<any>).map(WorkFunderToJSON)),\n        'content-domain': WorkDomainToJSON(value.contentDomain),\n        'chair': value.chair === undefined ? undefined : ((value.chair as Array<any>).map(AuthorToJSON)),\n        'short-container-title': value.shortContainerTitle,\n        'accepted': DatePartsToJSON(value.accepted),\n        'content-updated': DatePartsToJSON(value.contentUpdated),\n        'published-print': DatePartsToJSON(value.publishedPrint),\n        'abstract': value._abstract,\n        'DOI': value.dOI,\n        'type': value.type,\n        'created': ModelDateToJSON(value.created),\n        'approved': DatePartsToJSON(value.approved),\n        'page': value.page,\n        'update-policy': value.updatePolicy,\n        'source': value.source,\n        'is-referenced-by-count': value.isReferencedByCount,\n        'title': value.title,\n        'prefix': value.prefix,\n        'volume': value.volume,\n        'clinical-trial-number': value.clinicalTrialNumber === undefined ? undefined : ((value.clinicalTrialNumber as Array<any>).map(WorkClinicalTrialToJSON)),\n        'author': ((value.author as Array<any>).map(AuthorToJSON)),\n        'member': value.member,\n        'content-created': DatePartsToJSON(value.contentCreated),\n        'published-online': DatePartsToJSON(value.publishedOnline),\n        'reference': ReferenceToJSON(value.reference),\n        'container-title': value.containerTitle,\n        'review': WorkReviewToJSON(value.review),\n        'original-title': value.originalTitle,\n        'language': value.language,\n        'link': value.link === undefined ? undefined : ((value.link as Array<any>).map(WorkLinkToJSON)),\n        'deposited': ModelDateToJSON(value.deposited),\n        'score': value.score,\n        'degree': value.degree,\n        'subtitle': value.subtitle,\n        'translator': value.translator === undefined ? undefined : ((value.translator as Array<any>).map(AuthorToJSON)),\n        'free-to-read': WorkFreeToReadToJSON(value.freeToRead),\n        'editor': value.editor === undefined ? undefined : ((value.editor as Array<any>).map(AuthorToJSON)),\n        'component-number': value.componentNumber,\n        'short-title': value.shortTitle,\n        'issued': DatePartsToJSON(value.issued),\n        'ISBN': value.iSBN,\n        'references-count': value.referencesCount,\n        'part-number': value.partNumber,\n        'journal-issue': WorkJournalIssueToJSON(value.journalIssue),\n        'alternative-id': value.alternativeId,\n        'URL': value.uRL,\n        'archive': value.archive,\n        'relation': value.relation === undefined ? undefined : (mapValues(value.relation, WorksMessageMessageItemsRelationJavaLangString34985ToJSON)),\n        'ISSN': value.iSSN,\n        'issn-type': value.issnType === undefined ? undefined : ((value.issnType as Array<any>).map(WorkISSNTypeToJSON)),\n        'subject': value.subject,\n        'published-other': DatePartsToJSON(value.publishedOther),\n        'published': DatePartsToJSON(value.published),\n        'assertion': value.assertion === undefined ? undefined : ((value.assertion as Array<any>).map(WorkAssertionToJSON)),\n        'subtype': value.subtype,\n        'article-number': value.articleNumber,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    WorksMessageMessageItemsAssertionExplanation,\n    WorksMessageMessageItemsAssertionExplanationFromJSON,\n    WorksMessageMessageItemsAssertionExplanationFromJSONTyped,\n    WorksMessageMessageItemsAssertionExplanationToJSON,\n    WorksMessageMessageItemsAssertionGroup,\n    WorksMessageMessageItemsAssertionGroupFromJSON,\n    WorksMessageMessageItemsAssertionGroupFromJSONTyped,\n    WorksMessageMessageItemsAssertionGroupToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkAssertion\n */\nexport interface WorkAssertion {\n    /**\n     * \n     * @type {WorksMessageMessageItemsAssertionGroup}\n     * @memberof WorkAssertion\n     */\n    group: WorksMessageMessageItemsAssertionGroup;\n    /**\n     * \n     * @type {WorksMessageMessageItemsAssertionExplanation}\n     * @memberof WorkAssertion\n     */\n    explanation: WorksMessageMessageItemsAssertionExplanation;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkAssertion\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkAssertion\n     */\n    value: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkAssertion\n     */\n    uRL: string;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkAssertion\n     */\n    order: number;\n}\n\nexport function WorkAssertionFromJSON(json: any): WorkAssertion {\n    return WorkAssertionFromJSONTyped(json, false);\n}\n\nexport function WorkAssertionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkAssertion {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'group': WorksMessageMessageItemsAssertionGroupFromJSON(json['group']),\n        'explanation': WorksMessageMessageItemsAssertionExplanationFromJSON(json['explanation']),\n        'name': json['name'],\n        'value': json['value'],\n        'uRL': json['URL'],\n        'order': json['order'],\n    };\n}\n\nexport function WorkAssertionToJSON(value?: WorkAssertion | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'group': WorksMessageMessageItemsAssertionGroupToJSON(value.group),\n        'explanation': WorksMessageMessageItemsAssertionExplanationToJSON(value.explanation),\n        'name': value.name,\n        'value': value.value,\n        'URL': value.uRL,\n        'order': value.order,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkClinicalTrial\n */\nexport interface WorkClinicalTrial {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkClinicalTrial\n     */\n    clinicalTrialNumber: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkClinicalTrial\n     */\n    registry: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkClinicalTrial\n     */\n    type: string;\n}\n\nexport function WorkClinicalTrialFromJSON(json: any): WorkClinicalTrial {\n    return WorkClinicalTrialFromJSONTyped(json, false);\n}\n\nexport function WorkClinicalTrialFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkClinicalTrial {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'clinicalTrialNumber': json['clinical-trial-number'],\n        'registry': json['registry'],\n        'type': json['type'],\n    };\n}\n\nexport function WorkClinicalTrialToJSON(value?: WorkClinicalTrial | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'clinical-trial-number': value.clinicalTrialNumber,\n        'registry': value.registry,\n        'type': value.type,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkDomain\n */\nexport interface WorkDomain {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkDomain\n     */\n    domain: Array<string>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof WorkDomain\n     */\n    crossmarkRestriction: boolean;\n}\n\nexport function WorkDomainFromJSON(json: any): WorkDomain {\n    return WorkDomainFromJSONTyped(json, false);\n}\n\nexport function WorkDomainFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkDomain {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'domain': json['domain'],\n        'crossmarkRestriction': json['crossmark-restriction'],\n    };\n}\n\nexport function WorkDomainToJSON(value?: WorkDomain | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'domain': value.domain,\n        'crossmark-restriction': value.crossmarkRestriction,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DateParts,\n    DatePartsFromJSON,\n    DatePartsFromJSONTyped,\n    DatePartsToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkFreeToRead\n */\nexport interface WorkFreeToRead {\n    /**\n     * \n     * @type {DateParts}\n     * @memberof WorkFreeToRead\n     */\n    startDate?: DateParts;\n    /**\n     * \n     * @type {DateParts}\n     * @memberof WorkFreeToRead\n     */\n    endDate?: DateParts;\n}\n\nexport function WorkFreeToReadFromJSON(json: any): WorkFreeToRead {\n    return WorkFreeToReadFromJSONTyped(json, false);\n}\n\nexport function WorkFreeToReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkFreeToRead {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'startDate': !exists(json, 'start-date') ? undefined : DatePartsFromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : DatePartsFromJSON(json['end-date']),\n    };\n}\n\nexport function WorkFreeToReadToJSON(value?: WorkFreeToRead | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'start-date': DatePartsToJSON(value.startDate),\n        'end-date': DatePartsToJSON(value.endDate),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkFunder\n */\nexport interface WorkFunder {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkFunder\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkFunder\n     */\n    dOI?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkFunder\n     */\n    doiAssertedBy?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkFunder\n     */\n    award: Array<string>;\n}\n\nexport function WorkFunderFromJSON(json: any): WorkFunder {\n    return WorkFunderFromJSONTyped(json, false);\n}\n\nexport function WorkFunderFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkFunder {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n        'dOI': !exists(json, 'DOI') ? undefined : json['DOI'],\n        'doiAssertedBy': !exists(json, 'doi-asserted-by') ? undefined : json['doi-asserted-by'],\n        'award': json['award'],\n    };\n}\n\nexport function WorkFunderToJSON(value?: WorkFunder | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'DOI': value.dOI,\n        'doi-asserted-by': value.doiAssertedBy,\n        'award': value.award,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkISSNType\n */\nexport interface WorkISSNType {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkISSNType\n     */\n    type: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkISSNType\n     */\n    value: Array<string>;\n}\n\nexport function WorkISSNTypeFromJSON(json: any): WorkISSNType {\n    return WorkISSNTypeFromJSONTyped(json, false);\n}\n\nexport function WorkISSNTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkISSNType {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'type': json['type'],\n        'value': json['value'],\n    };\n}\n\nexport function WorkISSNTypeToJSON(value?: WorkISSNType | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'type': value.type,\n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkInstitution\n */\nexport interface WorkInstitution {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkInstitution\n     */\n    name: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkInstitution\n     */\n    place: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkInstitution\n     */\n    department: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkInstitution\n     */\n    acronym: Array<string>;\n}\n\nexport function WorkInstitutionFromJSON(json: any): WorkInstitution {\n    return WorkInstitutionFromJSONTyped(json, false);\n}\n\nexport function WorkInstitutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkInstitution {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n        'place': json['place'],\n        'department': json['department'],\n        'acronym': json['acronym'],\n    };\n}\n\nexport function WorkInstitutionToJSON(value?: WorkInstitution | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'place': value.place,\n        'department': value.department,\n        'acronym': value.acronym,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkJournalIssue\n */\nexport interface WorkJournalIssue {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkJournalIssue\n     */\n    issue: string;\n}\n\nexport function WorkJournalIssueFromJSON(json: any): WorkJournalIssue {\n    return WorkJournalIssueFromJSONTyped(json, false);\n}\n\nexport function WorkJournalIssueFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkJournalIssue {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'issue': json['issue'],\n    };\n}\n\nexport function WorkJournalIssueToJSON(value?: WorkJournalIssue | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'issue': value.issue,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ModelDate,\n    ModelDateFromJSON,\n    ModelDateFromJSONTyped,\n    ModelDateToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkLicense\n */\nexport interface WorkLicense {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkLicense\n     */\n    uRL: string;\n    /**\n     * \n     * @type {ModelDate}\n     * @memberof WorkLicense\n     */\n    start: ModelDate;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkLicense\n     */\n    delayInDays: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkLicense\n     */\n    contentVersion: string;\n}\n\nexport function WorkLicenseFromJSON(json: any): WorkLicense {\n    return WorkLicenseFromJSONTyped(json, false);\n}\n\nexport function WorkLicenseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkLicense {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uRL': json['URL'],\n        'start': ModelDateFromJSON(json['start']),\n        'delayInDays': json['delay-in-days'],\n        'contentVersion': json['content-version'],\n    };\n}\n\nexport function WorkLicenseToJSON(value?: WorkLicense | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'URL': value.uRL,\n        'start': ModelDateToJSON(value.start),\n        'delay-in-days': value.delayInDays,\n        'content-version': value.contentVersion,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkLink\n */\nexport interface WorkLink {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkLink\n     */\n    uRL: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkLink\n     */\n    contentType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkLink\n     */\n    contentVersion: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkLink\n     */\n    intendedApplication: string;\n}\n\nexport function WorkLinkFromJSON(json: any): WorkLink {\n    return WorkLinkFromJSONTyped(json, false);\n}\n\nexport function WorkLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkLink {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uRL': json['URL'],\n        'contentType': json['content-type'],\n        'contentVersion': json['content-version'],\n        'intendedApplication': json['intended-application'],\n    };\n}\n\nexport function WorkLinkToJSON(value?: WorkLink | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'URL': value.uRL,\n        'content-type': value.contentType,\n        'content-version': value.contentVersion,\n        'intended-application': value.intendedApplication,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Work,\n    WorkFromJSON,\n    WorkFromJSONTyped,\n    WorkToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkMessage\n */\nexport interface WorkMessage {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkMessage\n     */\n    status: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkMessage\n     */\n    messageType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkMessage\n     */\n    messageVersion: string;\n    /**\n     * \n     * @type {Work}\n     * @memberof WorkMessage\n     */\n    message: Work;\n}\n\nexport function WorkMessageFromJSON(json: any): WorkMessage {\n    return WorkMessageFromJSONTyped(json, false);\n}\n\nexport function WorkMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkMessage {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'status': json['status'],\n        'messageType': json['message-type'],\n        'messageVersion': json['message-version'],\n        'message': WorkFromJSON(json['message']),\n    };\n}\n\nexport function WorkMessageToJSON(value?: WorkMessage | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'message-type': value.messageType,\n        'message-version': value.messageVersion,\n        'message': WorkToJSON(value.message),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkReview\n */\nexport interface WorkReview {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    type: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    runningNumber: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    revisionRound: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    stage: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    competingInterestStatement: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    recommendation: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReview\n     */\n    language: string;\n}\n\nexport function WorkReviewFromJSON(json: any): WorkReview {\n    return WorkReviewFromJSONTyped(json, false);\n}\n\nexport function WorkReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkReview {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'type': json['type'],\n        'runningNumber': json['running-number'],\n        'revisionRound': json['revision-round'],\n        'stage': json['stage'],\n        'competingInterestStatement': json['competing-interest-statement'],\n        'recommendation': json['recommendation'],\n        'language': json['language'],\n    };\n}\n\nexport function WorkReviewToJSON(value?: WorkReview | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'type': value.type,\n        'running-number': value.runningNumber,\n        'revision-round': value.revisionRound,\n        'stage': value.stage,\n        'competing-interest-statement': value.competingInterestStatement,\n        'recommendation': value.recommendation,\n        'language': value.language,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkStandardsBody\n */\nexport interface WorkStandardsBody {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkStandardsBody\n     */\n    name: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof WorkStandardsBody\n     */\n    acronym: Array<string>;\n}\n\nexport function WorkStandardsBodyFromJSON(json: any): WorkStandardsBody {\n    return WorkStandardsBodyFromJSONTyped(json, false);\n}\n\nexport function WorkStandardsBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkStandardsBody {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n        'acronym': json['acronym'],\n    };\n}\n\nexport function WorkStandardsBodyToJSON(value?: WorkStandardsBody | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'acronym': value.acronym,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ModelDate,\n    ModelDateFromJSON,\n    ModelDateFromJSONTyped,\n    ModelDateToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkUpdate\n */\nexport interface WorkUpdate {\n    /**\n     * \n     * @type {string}\n     * @memberof WorkUpdate\n     */\n    label: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkUpdate\n     */\n    dOI: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkUpdate\n     */\n    type: string;\n    /**\n     * \n     * @type {ModelDate}\n     * @memberof WorkUpdate\n     */\n    updated: ModelDate;\n}\n\nexport function WorkUpdateFromJSON(json: any): WorkUpdate {\n    return WorkUpdateFromJSONTyped(json, false);\n}\n\nexport function WorkUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkUpdate {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'label': json['label'],\n        'dOI': json['DOI'],\n        'type': json['type'],\n        'updated': ModelDateFromJSON(json['updated']),\n    };\n}\n\nexport function WorkUpdateToJSON(value?: WorkUpdate | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'label': value.label,\n        'DOI': value.dOI,\n        'type': value.type,\n        'updated': ModelDateToJSON(value.updated),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Query,\n    QueryFromJSON,\n    QueryFromJSONTyped,\n    QueryToJSON,\n    Work,\n    WorkFromJSON,\n    WorkFromJSONTyped,\n    WorkToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Works\n */\nexport interface Works {\n    /**\n     * \n     * @type {number}\n     * @memberof Works\n     */\n    itemsPerPage: number;\n    /**\n     * \n     * @type {Query}\n     * @memberof Works\n     */\n    query: Query;\n    /**\n     * \n     * @type {number}\n     * @memberof Works\n     */\n    totalResults: number;\n    /**\n     * Used to navigate to the next page of results when using cursor deep paging\n     * @type {string}\n     * @memberof Works\n     */\n    nextCursor?: string;\n    /**\n     * \n     * @type {Array<Work>}\n     * @memberof Works\n     */\n    items: Array<Work>;\n}\n\nexport function WorksFromJSON(json: any): Works {\n    return WorksFromJSONTyped(json, false);\n}\n\nexport function WorksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Works {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'itemsPerPage': json['items-per-page'],\n        'query': QueryFromJSON(json['query']),\n        'totalResults': json['total-results'],\n        'nextCursor': !exists(json, 'next-cursor') ? undefined : json['next-cursor'],\n        'items': ((json['items'] as Array<any>).map(WorkFromJSON)),\n    };\n}\n\nexport function WorksToJSON(value?: Works | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'items-per-page': value.itemsPerPage,\n        'query': QueryToJSON(value.query),\n        'total-results': value.totalResults,\n        'next-cursor': value.nextCursor,\n        'items': ((value.items as Array<any>).map(WorkToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Works,\n    WorksFromJSON,\n    WorksFromJSONTyped,\n    WorksToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorksMessage\n */\nexport interface WorksMessage {\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessage\n     */\n    status: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessage\n     */\n    messageType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessage\n     */\n    messageVersion: string;\n    /**\n     * \n     * @type {Works}\n     * @memberof WorksMessage\n     */\n    message: Works;\n}\n\nexport function WorksMessageFromJSON(json: any): WorksMessage {\n    return WorksMessageFromJSONTyped(json, false);\n}\n\nexport function WorksMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorksMessage {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'status': json['status'],\n        'messageType': json['message-type'],\n        'messageVersion': json['message-version'],\n        'message': WorksFromJSON(json['message']),\n    };\n}\n\nexport function WorksMessageToJSON(value?: WorksMessage | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'message-type': value.messageType,\n        'message-version': value.messageVersion,\n        'message': WorksToJSON(value.message),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorksMessageMessageItemsAssertionExplanation\n */\nexport interface WorksMessageMessageItemsAssertionExplanation {\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessageMessageItemsAssertionExplanation\n     */\n    uRL: string;\n}\n\nexport function WorksMessageMessageItemsAssertionExplanationFromJSON(json: any): WorksMessageMessageItemsAssertionExplanation {\n    return WorksMessageMessageItemsAssertionExplanationFromJSONTyped(json, false);\n}\n\nexport function WorksMessageMessageItemsAssertionExplanationFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorksMessageMessageItemsAssertionExplanation {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uRL': json['URL'],\n    };\n}\n\nexport function WorksMessageMessageItemsAssertionExplanationToJSON(value?: WorksMessageMessageItemsAssertionExplanation | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'URL': value.uRL,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorksMessageMessageItemsAssertionGroup\n */\nexport interface WorksMessageMessageItemsAssertionGroup {\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessageMessageItemsAssertionGroup\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessageMessageItemsAssertionGroup\n     */\n    label: string;\n}\n\nexport function WorksMessageMessageItemsAssertionGroupFromJSON(json: any): WorksMessageMessageItemsAssertionGroup {\n    return WorksMessageMessageItemsAssertionGroupFromJSONTyped(json, false);\n}\n\nexport function WorksMessageMessageItemsAssertionGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorksMessageMessageItemsAssertionGroup {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n        'label': json['label'],\n    };\n}\n\nexport function WorksMessageMessageItemsAssertionGroupToJSON(value?: WorksMessageMessageItemsAssertionGroup | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'label': value.label,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorksMessageMessageItemsRelationJavaLangString34985\n */\nexport interface WorksMessageMessageItemsRelationJavaLangString34985 {\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessageMessageItemsRelationJavaLangString34985\n     */\n    idType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessageMessageItemsRelationJavaLangString34985\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorksMessageMessageItemsRelationJavaLangString34985\n     */\n    assertedBy: string;\n}\n\nexport function WorksMessageMessageItemsRelationJavaLangString34985FromJSON(json: any): WorksMessageMessageItemsRelationJavaLangString34985 {\n    return WorksMessageMessageItemsRelationJavaLangString34985FromJSONTyped(json, false);\n}\n\nexport function WorksMessageMessageItemsRelationJavaLangString34985FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorksMessageMessageItemsRelationJavaLangString34985 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'idType': json['id-type'],\n        'id': json['id'],\n        'assertedBy': json['asserted-by'],\n    };\n}\n\nexport function WorksMessageMessageItemsRelationJavaLangString34985ToJSON(value?: WorksMessageMessageItemsRelationJavaLangString34985 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id-type': value.idType,\n        'id': value.id,\n        'asserted-by': value.assertedBy,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    DepositMessage,\n    DepositMessageFromJSON,\n    DepositMessageToJSON,\n    DepositsMessage,\n    DepositsMessageFromJSON,\n    DepositsMessageToJSON,\n} from '../models';\n\nexport interface DepositsGetRequest {\n    filter?: string;\n    query?: string;\n    rows?: number;\n    mailto?: string;\n    offset?: number;\n}\n\nexport interface DepositsIdGetRequest {\n    id: string;\n}\n\nexport interface DepositsPostRequest {\n    body: string;\n    test?: boolean;\n}\n\n/**\n * \n */\nexport class DepositsApi extends runtime.BaseAPI {\n\n    /**\n     * Returns a list of deposits. ## Filters  Filters allow you to select deposits based on specific criteria. All filter results are lists.  ##  Examples:  ## ``` /deposits?filter=from-submission-time:2020-06-01 ``` ##  This endpoint supports the following filters:  ##  + `doi` + `from-submission-time` + `owner` + `status` + `test` + `type` + `until-submission-time` ## Pagination with offsets  Offsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.  ##  The number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:  ##  ``` /works?query=allen+renear&rows=5 ```  ##  `offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:  ##  ``` /works?query=allen+renear&rows=5&offset=5 ```  ## \n     */\n    async depositsGetRaw(requestParameters: DepositsGetRequest): Promise<runtime.ApiResponse<DepositsMessage>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.filter !== undefined) {\n            queryParameters['filter'] = requestParameters.filter;\n        }\n\n        if (requestParameters.query !== undefined) {\n            queryParameters['query'] = requestParameters.query;\n        }\n\n        if (requestParameters.rows !== undefined) {\n            queryParameters['rows'] = requestParameters.rows;\n        }\n\n        if (requestParameters.mailto !== undefined) {\n            queryParameters['mailto'] = requestParameters.mailto;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/deposits`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DepositsMessageFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a list of deposits. ## Filters  Filters allow you to select deposits based on specific criteria. All filter results are lists.  ##  Examples:  ## ``` /deposits?filter=from-submission-time:2020-06-01 ``` ##  This endpoint supports the following filters:  ##  + `doi` + `from-submission-time` + `owner` + `status` + `test` + `type` + `until-submission-time` ## Pagination with offsets  Offsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.  ##  The number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:  ##  ``` /works?query=allen+renear&rows=5 ```  ##  `offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:  ##  ``` /works?query=allen+renear&rows=5&offset=5 ```  ## \n     */\n    async depositsGet(requestParameters: DepositsGetRequest): Promise<DepositsMessage> {\n        const response = await this.depositsGetRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns information about a deposit.\n     */\n    async depositsIdGetRaw(requestParameters: DepositsIdGetRequest): Promise<runtime.ApiResponse<DepositMessage>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling depositsIdGet.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/deposits/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DepositMessageFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns information about a deposit.\n     */\n    async depositsIdGet(requestParameters: DepositsIdGetRequest): Promise<DepositMessage> {\n        const response = await this.depositsIdGetRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Deposit new content.\n     */\n    async depositsPostRaw(requestParameters: DepositsPostRequest): Promise<runtime.ApiResponse<DepositMessage>> {\n        if (requestParameters.body === null || requestParameters.body === undefined) {\n            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling depositsPost.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.test !== undefined) {\n            queryParameters['test'] = requestParameters.test;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/vnd.crossref.deposit+xml';\n\n        const response = await this.request({\n            path: `/deposits`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters.body as any,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DepositMessageFromJSON(jsonValue));\n    }\n\n    /**\n     * Deposit new content.\n     */\n    async depositsPost(requestParameters: DepositsPostRequest): Promise<DepositMessage> {\n        const response = await this.depositsPostRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Crossref Unified Resource API\n * ## Preamble  The Crossref REST API is one of [a variety of tools and APIs](https://www.crossref.org/services/metadata-retrieval/) that allow anybody to search and reuse our members\\' metadata in sophisticated ways.  ## Meta  ### Frequency of indexing  Records typically appear in the REST API within 20 minutes of their having been successfully deposited with Crossref.  Summary information (e.g. counts, etc.) are processed in batch every 24 hours.  ### Learning about performance or availability problems  We record and report service issues on our [status page](http://status.crossref.org).  You might want to check this to see if we are already aware of a problem before you report it.  We also post notice of any ongoing performance problems with our services on our twitter feeds at [CrossrefOrg](https://twitter.com/CrossrefOrg) and [CrossrefSupport](https://twitter.com/@CrossrefSupport).  ### Reporting performance or availability problems  Report performance/availability at our [support site](https://www.crossref.org/contact/).  ### Reporting bugs, requesting features  Please report bugs with the API or the documentation on our [issue tracker](https://gitlab.com/crossref/issues).  ### Documentation License  <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\"><img alt=\\\"Creative Commons License\\\" style=\\\"border-width:0\\\" src=\\\"https://i.creativecommons.org/l/by/4.0/88x31.png\\\" /></a><br />This work is licensed under a <a rel=\\\"license\\\" href=\\\"http://creativecommons.org/licenses/by/4.0/\\\">Creative Commons Attribution 4.0 International License</a>.  ### Metadata License  Crossref asserts no claims of ownership to individual items of bibliographic metadata and associated Digital Object Identifiers (DOIs) acquired through the use of the Crossref Free Services. Individual items of bibliographic metadata and associated DOIs may be cached and incorporated into the user\\'s content and systems.  ### Privacy  We also have a [privacy policy](https://www.crossref.org/privacy/).  ### Libraries  You might be able to avoid reading all this documentation if you instead use one of the several excellent libraries that have been written for the Crossref REST API. For example:  - [crossref-commons](https://gitlab.com/crossref/crossref_commons_py) (Python, developed by Crossref) - [habanero](https://github.com/sckott/habanero) (Python) - [serrano](https://github.com/sckott/serrano) (Ruby) - [rcrossref](https://github.com/ropensci/rcrossref) (R) - [crossrefapi](https://github.com/fabiobatalha/crossrefapi) (Python) - [crossref-rs](https://github.com/MattsSe/crossref-rs) (rust)  If you know of another library you would like to see listed here, please let us know about it via the [issue tracker](https://gitlab.com/crossref/issues).  ### Etiquette  We want to provide a public, open, and free API for all. And we don\\'t want to unnecessarily burden developers (or ourselves) with cumbersome API tokens or registration processes in order to use the public REST API. For that to work, we ask that you be polite and try not to do anything that will take the public REST API down or otherwise make it unusable for others. Specifically, we encourage the following polite behaviour:  - Cache data so you don\\'t request the same data over and over again. - Actively monitor API response times. If they start to go up, back-off for a while. For example, add pauses between requests and/or reduce the number of parallel requests. - Specify a `User-Agent` header that properly identifies your script or tool and that provides a means of contacting you via email using \\\"mailto:\\\". For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`. This way we can contact you if we see a problem. - report problems and/or ask questions on our [issue tracker](https://gitlab.com/crossref/issues).  Alas, not all people are polite. And for this reason we reserve the right to impose rate limits and/or to block clients that are disrupting the public service.  ### Good manners = more reliable service  But we prefer carrots to sticks. As of September 18th 2017 any API queries that **use HTTPS and have appropriate contact information** will be directed to a special pool of API machines that are reserved for polite users.  Why are are we doing this? Well- we don\\'t want to force users to have to register with us. But this means that if some user of the public server writes a buggy script or ignores timeouts and errors- they can really bring the API service to its knees. What\\'s more, it is very hard for us to identify these problem users because they tend to work off multiple parallel machines and use generic User-Agent headers. They are effectively anonymous. We\\'re starting to have to spend a lot of time dealing with these problems and the degraded performance of the public API is affecting all the polite users as well.  So... we are keeping the public service as is. It will probably continue to fluctuate widely in performance. But now, if a client connects to the API using HTTPS and provides contact information either in their User-Agent header or as a parameter on their queries, then we will send them to a separate pool of machines. We expect to be able to better control the performance of these machines because, if a script starts causing problems, we can contact the people responsible for the script to ask them to fix it. Or, in extremis, we can block it.  How does it work? Simple. You can do one of two things to get directed to the \\\"polite pool\\\":  1) Include a \\\"mailto\\\" parameter in your query. For example: `https://api.crossref.org/works?filter=has-full-text:true&mailto=GroovyBib@example.org` 2) Include a \\\"mailto:\\\" in your User-Agent header. For example: `GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4`.  Note that this only works if you query the API using HTTPS. You really should be doing that anyway (wags finger).  #### Frequently anticipated questions  **Q:** Will you spam me with marketing [bumf](https://en.oxforddictionaries.com/definition/bumf) once you have our contact info?  **A:** No. We will only use it to contact you about problems with your scripts.   **Q:** Is this a secret plot to kill public access to your API?  **A:** No. It is an attempt to keep the public API reliable.   **Q:** What if I provide fake or incorrect contact info?  **A:** That is not very polite. If there is a problem and you don\\'t respond, we\\'ll block you.   **Q:** Does the contact info have to be a real name?  **A:** No. As long as somebody actually receives and pays attention to email at the address, it can be pseudo-anonymous, or whatever.  #### Rate limits  From time to time Crossref needs to impose rate limits to ensure that the free API is usable by all. Any rate limits that are in effect will be advertised in the `X-Rate-Limit-Limit` and `X-Rate-Limit-Interval` HTTP headers.  For ease-of-parsing, the `X-Rate-Limit-Interval` will always be expressed in seconds. So, for example the following tells you that you should expect to be able to perform 50 requests a second:  ``` X-Rate-Limit-Limit: 50 X-Rate-Limit-Interval: 1s ```  Note that if we wanted to adjust the measurement window, we could specify:  ``` X-Rate-Limit-Limit: 3000 X-Rate-Limit-Interval: 60s ```  #### Blocking  This is always our last resort, and you can generally avoid it if you include contact information in the `User-Agent` header or `mailto` parameter as described above.  But seriously... this is a bummer. We really want you to use the API. If you are polite about it, you shouldn\\'t have any problems.  ### Use for production services  What if you want to use our API for a production service that cannot depend on the performance uncertainties of the free and open public API? What if you don\\'t want to be affected by impolite people who do not follow the API Etiquette guidelines? Well, if you’re interested in using these tools or APIs for production services, we [have a service-level offering](https://www.crossref.org/services/metadata-retrieval/metadata-plus/) called \\\"Plus\\\". This service provides you with access to all supported APIs and metadata, but with extra service and support guarantees.  #### Authorization token for Plus service  When you sign up for the Plus service, you will be issued an API token that you should put in the `Authorization` header of all your rest API requests. This token will ensure that said requests get directed to a pool of machines that are reserved for \\\"Plus\\\" SLA users. For example, with [curl](https://curl.haxx.se/):  ``` curl -X GET \\\\   https://api.crossref.org/works \\\\   -H \\'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq\\' \\\\   -H \\'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4\\' ```  Note that you can still be \\\"polite\\\" and identify yourself as well. And, of course, replace the fake token above with the real token.  ## API overview  The API is generally RESTFUL and returns results in JSON.  The API supports HTTP and HTTPS. Examples here are provided using HTTPS.  You should always url-encode DOIs and parameter values when using the API. DOIs are notorious for including characters that break URLs (e.g. semicolons, hashes, slashes, ampersands, question marks, etc.).  Note url-encoding applies to cursors as well since they too are likely to include characters that will break URLs (e.g. `+` symbol)  Note that, for the sake of clarity, the examples in this document do *not* url-encode DOIs or parameter values.  The API will only work for Crossref DOIs. You can test the registration agency for a DOI using the following route:  `https://api.crossref.org/works/{doi}/agency`  Testing the following Crossref DOI:  `10.1037/0003-066X.59.1.29`  Using the URL:  `https://api.crossref.org/works/10.1037/0003-066X.59.1.29/agency`  Will return the following result:      {       status: \\\"ok\\\",       message-type: \\\"work-agency\\\",       message-version: \\\"1.0.0\\\",       message: {         DOI: \\\"10.1037/0003-066x.59.1.29\\\",         agency: {           id: \\\"crossref\\\",           label: \\\"Crossref\\\"         }       }     }  If you use any of the API calls listed below with a non-Crossref DOI, you will get a `404` HTTP status response. Typical agency IDs include `crossref`, `datacite`, `medra` and also `public` for test DOIs.  ## Result types  All results are returned in JSON. There are three general types of results:  - Singletons - Headers-only - Lists  The mime-type for API results is `application/vnd.crossref-api-message+json`  ### Singletons  Singletons are single results. Retrieving metadata for a specific identifier (e.g. DOI, ISSN, funder identifier) typically returns a singleton result.  ### Headers only  You can use HTTP HEAD requests to quickly determine \\\"existence\\\" of a singleton. The advantage of this technique is that it is very fast because it does not return any metadata- it only returns headers and an HTTP status code (200=exists, 404=does not exist).  To determine if member ID `98` exists:  `curl --head \\\"http://api.crossref.org/members/98\\\"`  To determine if a journal with ISSN `1549-7712` exists:  `curl --head \\\"http://api.crossref.org/journals/1549-7712\\\"`  ### Lists  Lists results can contain multiple entries. Searching or filtering typically returns a list result. A list has two parts:  - Summary, which include the following information:      - status (e.g. \\\"ok\\\", error)     - message-type (e.g. \\\"work-list\\\" )     - message-version (e.g. 1.0.0 )  - Items, which will contain the items matching the query or filter.  Note that the \\\"message-type\\\" returned will differ from the mime-type:  - funder (singleton) - prefix (singleton) - member (singleton) - work (singleton) - work-list (list) - funder-list (list) - prefix-list (list) - member-list (list)  Normally, an API list result will return both the summary and the items. If you want to just retrieve the summary, you can do so by specifying that the number of rows returned should be zero.  #### Sort order  If the API call includes a query, then the sort order will be by the relevance score. If no query is included, then the sort order will be by DOI update date.  The API allows also for custom sorting. See the documentation for each endpoint to find the list of elements that you can sort by.  #### Pagination  Large result sets can be traversed one of two ways: offsets or deep paging with cursor. Offsets are available on all `list` endpoints. Offsets are easier to use, but can be slow for larger sets, and the total number of results available through offsets is limited. Deep paging is available on selected endpoints, has better performance for large data sets, and there is no limit on total number of available results.  See the documentation for each endpoint for available paging options. \n *\n * The version of the OpenAPI document: 0.1\n * Contact: support@crossref.org\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    AgencyMessage,\n    AgencyMessageFromJSON,\n    AgencyMessageToJSON,\n    WorkMessage,\n    WorkMessageFromJSON,\n    WorkMessageToJSON,\n    WorksMessage,\n    WorksMessageFromJSON,\n    WorksMessageToJSON,\n} from '../models';\n\nexport interface WorksDoiAgencyGetRequest {\n    doi: string;\n}\n\nexport interface WorksDoiGetRequest {\n    doi: string;\n}\n\nexport interface WorksGetRequest {\n    rows?: number;\n    order?: string;\n    facet?: string;\n    sample?: number;\n    sort?: string;\n    offset?: number;\n    mailto?: string;\n    select?: string;\n    query?: string;\n    filter?: string;\n    cursor?: string;\n}\n\n/**\n * \n */\nexport class WorksApi extends runtime.BaseAPI {\n\n    /**\n     * Gets the agency associated with a specific work by its DOI, as an example use DOI 10.5555/12345678\n     */\n    async worksDoiAgencyGetRaw(requestParameters: WorksDoiAgencyGetRequest): Promise<runtime.ApiResponse<AgencyMessage>> {\n        if (requestParameters.doi === null || requestParameters.doi === undefined) {\n            throw new runtime.RequiredError('doi','Required parameter requestParameters.doi was null or undefined when calling worksDoiAgencyGet.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/works/{doi}/agency`.replace(`{${\"doi\"}}`, encodeURIComponent(String(requestParameters.doi))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AgencyMessageFromJSON(jsonValue));\n    }\n\n    /**\n     * Gets the agency associated with a specific work by its DOI, as an example use DOI 10.5555/12345678\n     */\n    async worksDoiAgencyGet(requestParameters: WorksDoiAgencyGetRequest): Promise<AgencyMessage> {\n        const response = await this.worksDoiAgencyGetRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns metadata for the specified Crossref DOI, as an example use DOI 10.5555/12345678\n     */\n    async worksDoiGetRaw(requestParameters: WorksDoiGetRequest): Promise<runtime.ApiResponse<WorkMessage>> {\n        if (requestParameters.doi === null || requestParameters.doi === undefined) {\n            throw new runtime.RequiredError('doi','Required parameter requestParameters.doi was null or undefined when calling worksDoiGet.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/works/{doi}`.replace(`{${\"doi\"}}`, encodeURIComponent(String(requestParameters.doi))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkMessageFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns metadata for the specified Crossref DOI, as an example use DOI 10.5555/12345678\n     */\n    async worksDoiGet(requestParameters: WorksDoiGetRequest): Promise<WorkMessage> {\n        const response = await this.worksDoiGetRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of all works (journal articles, conference proceedings, books, components, etc), 20 per page. ## Queries  Free form search queries can be made, for example, works that include `renear` or `ontologies` (or both):  ##  ``` /works?query=renear+ontologies ```   ## Field Queries Field queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:  ##  ``` /works?query.author=richard+feynman ```  ##  Field queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:  ## ``` /works?query.title=room+at+the+bottom&query.author=richard+feynman ```  ##  This endpoint supports the following field queries:  ##  + `query.affiliation` - query contributor affiliations + `query.author` - query author given and family names + `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years + `query.chair` - query chair given and family names + `query.container-title` - query container title aka. publication name + `query.contributor` - query author, editor, chair and translator given and family names + `query.degree` - query degree + `query.editor` - query editor given and family names + `query.event-acronym` - query acronym of the event + `query.event-location` - query location of the event + `query.event-name` - query name of the event + `query.event-sponsor` - query sponsor of the event + `query.event-theme` - query theme of the event + `query.funder-name` - query name of the funder + `query.publisher-location` - query location of the publisher + `query.publisher-name` - query publisher name + `query.standards-body-acronym` - query acronym of the standards body + `query.standards-body-name` - query standards body name + `query.title` - query title + `query.translator` - query translator given and family names ## Sort  Results can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).  An example that sorts results in order of publication, beginning with the least recent:  ##  ``` /works?query=josiah+carberry&sort=published&order=asc ```  ##  This endpoint supports sorting by the following elements:  ##  + `created` - sort by created date + `deposited` - sort by time of most recent deposit + `indexed` - sort by time of most recent index + `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs + `issued` - sort by issued date (earliest known publication date) + `published` - sort by publication date + `published-online` - sort by online publication date + `published-print` - sort by print publication date + `references-count` - sort by number of references included in the references section of the document identified by this DOI + `relevance` - sort by relevance score + `score` - sort by relevance score + `updated` - sort by date of most recent change to metadata, currently the same as deposited ## Facets  Facet counts can be retrieved by enabling faceting. Facets are enabled by providing facet field names along with a maximum number of returned term values. The larger the number of returned values, the longer the query will take. Some facet fields can accept a `*` as their maximum, which indicates that all values should be returned.  ##  For example, to get facet counts for all work types:  ## ``` /works?facet=type-name:* ```  ##  This endpoint supports the following facets:  ##  + `affiliation` - author affiliation + `archive` - archive location + `assertion` - custom Crossmark assertion name + `assertion-group` - custom Crossmark assertion group name + `category-name` - category name of work + `container-title` - [max value 100], work container title, such as journal title, or book title + `funder-doi` - funder DOI + `funder-name` - funder literal name as deposited alongside DOI + `issn` - [max value 100], journal ISSN (any - print, electronic, link) + `journal-issue` - journal issue number + `journal-volume` - journal volume + `license` - license URI of work + `link-application` - intended application of the full text link + `orcid` - [max value 100], contributor ORCID + `published` - earliest year of publication + `publisher-name` - publisher name of work + `relation-type` - relation type described by work or described by another work with work as object + `source` - source of the DOI + `type-name` - work type name, such as journal-article or book-chapter + `update-type` - significant update type ## Filters  Filters allow you to select items based on specific criteria. All filter results are lists.  ##  For example:  ## ``` /works?filter=type:dataset ```  ### Multiple filters  Multiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:  - `is-update:true` - `from-pub-date:2014-03-03` - `funder:10.13039/100000001` - `funder:10.13039/100000050`  would locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039/100000050`). These filters would be specified by joining each filter together with a comma:  ## ``` /works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039/100000001,funder:10.13039/100000050 ```  ### Dot filters  A filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:  ## ``` /works?filter=award.number:CBET-0756451,award.funder:10.13039/100000001 ``` ##  Here we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.  ### Note on dates  The dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:  * `from-pub-date:2018-09-18` filters works published on or after 18th September 2018 * `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016 * `until-created-date:2010-06` filters works first deposited in or before June 2010 * `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017  Also note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.  ### Note on owner prefixes  The prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.  ##  Crossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.  ### Notes on incremental metadata updates  When using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.  ##  This endpoint supports the following filters:  ##  + `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided + `archive` - metadata where value of archive partner equals given archive name + `article-number` - metadata for records with a given article number + `assertion` - metadata for records with a given named assertion + `assertion-group` - metadata for records with an assertion in a given group + `award`   + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with `award.number`   + `award.number` - metadata for records with award number equal to given number, optionally combine with `award.funder` + `category-name` - metadata for records with category label equal to given name, category labels come from the list published by Scopus + `clinical-trial-number` - metadata for records with given clinical trial number + `container-title` - metadata with a publication title that exactly equals given title + `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear + `doi` - metadata describing given DOI + `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive) + `from-approved-date` - [date], metadata where approved date is since given date (inclusive) + `from-created-date` - [date], metadata first deposited since given date (inclusive) + `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive) + `from-event-end-date` - [date], metadata where event end date is since given date (inclusive) + `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive) + `from-index-date` - [date], metadata indexed since given date (inclusive) + `from-issued-date` - [date], metadata where issued date is since given date  (inclusive) + `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive) + `from-posted-date` - [date], metadata where posted date is since given date (inclusive) + `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive) + `from-pub-date` - [date], metadata where published date is since given date (inclusive) + `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as `from-deposit-date` + `full-text`   + `full-text.type` - metadata where `resource` element\\'s `content_type` attribute equals given version mime type (e.g. application/pdf)   + `full-text.application` - [text-mining, similarity-checking or unspecified], metadata where `resource` link has given application   + `full-text.version` - metadata where `resource` element\\'s `content_version` attribute equals given version + `funder` - metadata which include given funder id in FundRef data + `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body + `group-title` - metadata with given group title + `has-abstract` - [0 or 1], metadata for records with/without an abstract + `has-affiliation` - [0 or 1], metadata for records with/without affiliation information + `has-archive` - [0 or 1], metadata which includes/does not include name of archive partner + `has-assertion` - [0 or 1], metadata for records with/without assertions + `has-authenticated-orcid` - [0 or 1], metadata which includes/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID + `has-award` - [0 or 1], metadata for records with/without award + `has-clinical-trial-number` - [0 or 1], metadata for records with/without a clinical trial number + `has-content-domain` - [0 or 1], metadata where the publisher records/does not record a domain name location for Crossmark content + `has-domain-restriction` - [0 or 1], metadata where the publisher restricts/does not restrict Crossmark usage to content domains + `has-event` - [0 or 1], metadata for records with/without event + `has-full-text` - [0 or 1], metadata that includes/does not include any full text `resource` elements + `has-funder` - [0 or 1], metadata which includes/does not include one or more funder entry + `has-funder-doi` - [0 or 1], metadata for records with/without funder DOI + `has-license` - [0 or 1], metadata that includes/does not include any `license_ref` elements + `has-orcid` - [0 or 1], metadata which includes/does not include one or more ORCIDs + `has-references` - [0 or 1], metadata for works that have/don\\'t have a list of references + `has-relation` - [0 or 1], metadata for records that either assert/do not assert or are/are not the object of a relation + `has-update` - [0 or 1], metadata for records with/without update information + `has-update-policy` - [0 or 1], metadata for records that include/do not include a link to an editorial update policy + `is-update` - [0 or 1], metadata for records that represent/do not represent editorial updates + `isbn` - metadata with given ISBN + `issn` - metadata with given ISSN, format is xxxx-xxxx + `license`   + `license.url` - metadata where `license_ref` value equals given url   + `license.version` - metadata where the `license_ref`\\'s `applies_to` attribute equals given version   + `license.delay` - metadata where difference between publication date and the `license_ref`\\'s `start_date` attribute is <= than given delay (in days) + `member` - metadata belonging to a given Crossref member + `orcid` - metadata where there is a contributor with given ORCID + `prefix` - metadata belonging to a given DOI owner prefix (e.g. 10.1016) + `reference-visibility` - [open, limited or closed], metadata for works where references are either open, limited (to [Metadata Plus subscribers](https://www.crossref.org/services/metadata-retrieval/metadata-plus/)) or closed + `relation`   + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g. is-referenced-by, is-parent-of, is-preprint-of)   + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g. doi, issn)   + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier + `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the /types resource + `type-name` - metadata for records with type name equal to given name + `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive) + `until-approved-date` - [date], metadata where approved date is before given date (inclusive) + `until-created-date` - [date], metadata first deposited before given date (inclusive) + `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive) + `until-event-end-date` - [date], metadata where event end date is before given date (inclusive) + `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive) + `until-index-date` - [date], metadata indexed before given date (inclusive) + `until-issued-date` - [date], metadata where issued date is before given date  (inclusive) + `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive) + `until-posted-date` - [date], metadata where posted date is before given date (inclusive) + `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive) + `until-pub-date` - [date], metadata where published date is before given date (inclusive) + `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as `until-deposit-date` + `update-type` - metadata with given update type + `updates` - metadata for records that represent editorial updates to given DOI ## Elements  Crossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\\\\\"select\\\\\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:  ## ``` /works?select=DOI,prefix,title ```  ##  This endpoint supports selecting the following elements.  ##  + `DOI` + `ISBN` + `ISSN` + `URL` + `abstract` + `accepted` + `alternative-id` + `approved` + `archive` + `article-number` + `assertion` + `author` + `chair` + `clinical-trial-number` + `container-title` + `content-created` + `content-domain` + `created` + `degree` + `deposited` + `editor` + `event` + `funder` + `group-title` + `indexed` + `is-referenced-by-count` + `issn-type` + `issue` + `issued` + `license` + `link` + `member` + `original-title` + `page` + `posted` + `prefix` + `published` + `published-online` + `published-print` + `publisher` + `publisher-location` + `reference` + `references-count` + `relation` + `score` + `short-container-title` + `short-title` + `standards-body` + `subject` + `subtitle` + `title` + `translator` + `type` + `update-policy` + `update-to` + `updated-by` + `volume` ## Pagination with offsets  Offsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.  ##  The number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:  ##  ``` /works?query=allen+renear&rows=5 ```  ##  `offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:  ##  ``` /works?query=allen+renear&rows=5&offset=5 ```  ##  ## Deep paging  Deep paging using cursors can be used to iterate over large result sets, without any limits on their size.  ##  To use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:  ##  ``` /members/311/works?filter=type:journal-article&cursor=* ```  ##  A `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:  ##  ``` /members/311/works?filter=type:journal-article&cursor=<value of next-cursor parameter> ```  ##  Clients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list.  ##  ## Sample  Being able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:  ## ``` /works?sample=10 ``` ##  Note that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.   ## Parameter combinations  Any combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.  ##  Any combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.  ##  `offset` and `sample` cannot be used in combination with cursors.  ## \n     */\n    async worksGetRaw(requestParameters: WorksGetRequest): Promise<runtime.ApiResponse<WorksMessage>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.rows !== undefined) {\n            queryParameters['rows'] = requestParameters.rows;\n        }\n\n        if (requestParameters.order !== undefined) {\n            queryParameters['order'] = requestParameters.order;\n        }\n\n        if (requestParameters.facet !== undefined) {\n            queryParameters['facet'] = requestParameters.facet;\n        }\n\n        if (requestParameters.sample !== undefined) {\n            queryParameters['sample'] = requestParameters.sample;\n        }\n\n        if (requestParameters.sort !== undefined) {\n            queryParameters['sort'] = requestParameters.sort;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        if (requestParameters.mailto !== undefined) {\n            queryParameters['mailto'] = requestParameters.mailto;\n        }\n\n        if (requestParameters.select !== undefined) {\n            queryParameters['select'] = requestParameters.select;\n        }\n\n        if (requestParameters.query !== undefined) {\n            queryParameters['query'] = requestParameters.query;\n        }\n\n        if (requestParameters.filter !== undefined) {\n            queryParameters['filter'] = requestParameters.filter;\n        }\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/works`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorksMessageFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a list of all works (journal articles, conference proceedings, books, components, etc), 20 per page. ## Queries  Free form search queries can be made, for example, works that include `renear` or `ontologies` (or both):  ##  ``` /works?query=renear+ontologies ```   ## Field Queries Field queries allow for queries that match only particular fields of metadata. For example, this query matches records that contain the tokens `richard` or `feynman` (or both) in any author field:  ##  ``` /works?query.author=richard+feynman ```  ##  Field queries can be combined with the general `query` parameter and each other. Each query parameter is ANDed with the others:  ## ``` /works?query.title=room+at+the+bottom&query.author=richard+feynman ```  ##  This endpoint supports the following field queries:  ##  + `query.affiliation` - query contributor affiliations + `query.author` - query author given and family names + `query.bibliographic` - query bibliographic information, useful for citation look up, includes titles, authors, ISSNs and publication years + `query.chair` - query chair given and family names + `query.container-title` - query container title aka. publication name + `query.contributor` - query author, editor, chair and translator given and family names + `query.degree` - query degree + `query.editor` - query editor given and family names + `query.event-acronym` - query acronym of the event + `query.event-location` - query location of the event + `query.event-name` - query name of the event + `query.event-sponsor` - query sponsor of the event + `query.event-theme` - query theme of the event + `query.funder-name` - query name of the funder + `query.publisher-location` - query location of the publisher + `query.publisher-name` - query publisher name + `query.standards-body-acronym` - query acronym of the standards body + `query.standards-body-name` - query standards body name + `query.title` - query title + `query.translator` - query translator given and family names ## Sort  Results can be sorted by applying the `sort` and `order` parameters. `sort` sets the field by which results will be sorted. `order` sets the result ordering, either `asc` or `desc` (default is `desc`).  An example that sorts results in order of publication, beginning with the least recent:  ##  ``` /works?query=josiah+carberry&sort=published&order=asc ```  ##  This endpoint supports sorting by the following elements:  ##  + `created` - sort by created date + `deposited` - sort by time of most recent deposit + `indexed` - sort by time of most recent index + `is-referenced-by-count` - sort by number of times this DOI is referenced by other Crossref DOIs + `issued` - sort by issued date (earliest known publication date) + `published` - sort by publication date + `published-online` - sort by online publication date + `published-print` - sort by print publication date + `references-count` - sort by number of references included in the references section of the document identified by this DOI + `relevance` - sort by relevance score + `score` - sort by relevance score + `updated` - sort by date of most recent change to metadata, currently the same as deposited ## Facets  Facet counts can be retrieved by enabling faceting. Facets are enabled by providing facet field names along with a maximum number of returned term values. The larger the number of returned values, the longer the query will take. Some facet fields can accept a `*` as their maximum, which indicates that all values should be returned.  ##  For example, to get facet counts for all work types:  ## ``` /works?facet=type-name:* ```  ##  This endpoint supports the following facets:  ##  + `affiliation` - author affiliation + `archive` - archive location + `assertion` - custom Crossmark assertion name + `assertion-group` - custom Crossmark assertion group name + `category-name` - category name of work + `container-title` - [max value 100], work container title, such as journal title, or book title + `funder-doi` - funder DOI + `funder-name` - funder literal name as deposited alongside DOI + `issn` - [max value 100], journal ISSN (any - print, electronic, link) + `journal-issue` - journal issue number + `journal-volume` - journal volume + `license` - license URI of work + `link-application` - intended application of the full text link + `orcid` - [max value 100], contributor ORCID + `published` - earliest year of publication + `publisher-name` - publisher name of work + `relation-type` - relation type described by work or described by another work with work as object + `source` - source of the DOI + `type-name` - work type name, such as journal-article or book-chapter + `update-type` - significant update type ## Filters  Filters allow you to select items based on specific criteria. All filter results are lists.  ##  For example:  ## ``` /works?filter=type:dataset ```  ### Multiple filters  Multiple filters can be specified in a single query. In such a case, different filters will be applied with AND semantics, while specifying the same filter multiple times will result in OR semantics - that is, specifying the filters:  - `is-update:true` - `from-pub-date:2014-03-03` - `funder:10.13039/100000001` - `funder:10.13039/100000050`  would locate documents that are updates, were published on or after 3rd March 2014 and were funded by either the National Science Foundation (`10.13039/100000001`) or the National Heart, Lung, and Blood Institute (`10.13039/100000050`). These filters would be specified by joining each filter together with a comma:  ## ``` /works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039/100000001,funder:10.13039/100000050 ```  ### Dot filters  A filter with a dot in its name is special. The dot signifies that the filter will be applied to some other record type that is related to primary resource record type. For example, with work queries, one can filter on works that have an award, where the same award has a particular award number and award-giving funding agency:  ## ``` /works?filter=award.number:CBET-0756451,award.funder:10.13039/100000001 ``` ##  Here we filter on works that have an award by the National Science Foundation that also has the award number `CBET-0756451`.  ### Note on dates  The dates in filters should always be of the form YYYY-MM-DD, YYYY-MM or YYYY. The date filters are inclusive. For example:  * `from-pub-date:2018-09-18` filters works published on or after 18th September 2018 * `from-created-date:2016-02-29,until-created-date:2016-02-29` filters works first deposited on 29th February 2016 * `until-created-date:2010-06` filters works first deposited in or before June 2010 * `from-update-date:2017,until-update-date:2017` filters works with metadata updated in 2017  Also note that date information in Crossref metadata can often be incomplete. So, for example, a publisher may only include the year and month of publication for a journal article. For a monograph they might just include the year. In these cases the API selects the earliest possible date given the information provided. So, for instance, if the publisher only provided 2013-02 as the published date, then the date would be treated as 2013-02-01. Similarly, if the publisher only provided the year 2013 as the date, it would be treated at 2013-01-01.  ### Note on owner prefixes  The prefix of a Crossref DOI does **NOT** indicate who currently owns the DOI. It only reflects who originally registered the DOI. Crossref metadata has an **prefix** element that records the current owner of the Crossref DOI in question.  ##  Crossref also has member IDs for depositing organisations. A single member may control multiple owner prefixes, which in turn may control a number of DOIs. When looking at works published by a certain organisaton, member IDs and the member routes should be used.  ### Notes on incremental metadata updates  When using time filters to retrieve periodic, incremental metadata updates, the `from-index-date` filter should be used over `from-update-date`, `from-deposit-date`, `from-created-date` and `from-pub-date`. The timestamp that `from-index-date` filters on is guaranteed to be updated every time there is a change to metadata requiring a reindex.  ##  This endpoint supports the following filters:  ##  + `alternative-id` - metadata for records with the given alternative ID, which may be a publisher-specific ID, or any other identifier a publisher may have provided + `archive` - metadata where value of archive partner equals given archive name + `article-number` - metadata for records with a given article number + `assertion` - metadata for records with a given named assertion + `assertion-group` - metadata for records with an assertion in a given group + `award`   + `award.funder` - metadata for records with award funder equal to given funder, optionally combine with `award.number`   + `award.number` - metadata for records with award number equal to given number, optionally combine with `award.funder` + `category-name` - metadata for records with category label equal to given name, category labels come from the list published by Scopus + `clinical-trial-number` - metadata for records with given clinical trial number + `container-title` - metadata with a publication title that exactly equals given title + `content-domain` - metadata where the publisher records a given domain name as the location Crossmark content will appear + `doi` - metadata describing given DOI + `from-accepted-date` - [date], metadata where accepted date is since given date (inclusive) + `from-approved-date` - [date], metadata where approved date is since given date (inclusive) + `from-created-date` - [date], metadata first deposited since given date (inclusive) + `from-deposit-date` - [date], metadata last (re)deposited since given date (inclusive) + `from-event-end-date` - [date], metadata where event end date is since given date (inclusive) + `from-event-start-date` - [date], metadata where event start date is since given date  (inclusive) + `from-index-date` - [date], metadata indexed since given date (inclusive) + `from-issued-date` - [date], metadata where issued date is since given date  (inclusive) + `from-online-pub-date` - [date], metadata where online published date is since given date (inclusive) + `from-posted-date` - [date], metadata where posted date is since given date (inclusive) + `from-print-pub-date` - [date], metadata where print published date is since given date (inclusive) + `from-pub-date` - [date], metadata where published date is since given date (inclusive) + `from-update-date` - [date], metadata updated since given date (inclusive), currently the same as `from-deposit-date` + `full-text`   + `full-text.type` - metadata where `resource` element\\'s `content_type` attribute equals given version mime type (e.g. application/pdf)   + `full-text.application` - [text-mining, similarity-checking or unspecified], metadata where `resource` link has given application   + `full-text.version` - metadata where `resource` element\\'s `content_version` attribute equals given version + `funder` - metadata which include given funder id in FundRef data + `funder-doi-asserted-by` - metadata where funder DOI was asserted by given body + `group-title` - metadata with given group title + `has-abstract` - [0 or 1], metadata for records with/without an abstract + `has-affiliation` - [0 or 1], metadata for records with/without affiliation information + `has-archive` - [0 or 1], metadata which includes/does not include name of archive partner + `has-assertion` - [0 or 1], metadata for records with/without assertions + `has-authenticated-orcid` - [0 or 1], metadata which includes/does not include one or more ORCIDs where the depositing publisher claims to have witness the ORCID owner authenticate with ORCID + `has-award` - [0 or 1], metadata for records with/without award + `has-clinical-trial-number` - [0 or 1], metadata for records with/without a clinical trial number + `has-content-domain` - [0 or 1], metadata where the publisher records/does not record a domain name location for Crossmark content + `has-domain-restriction` - [0 or 1], metadata where the publisher restricts/does not restrict Crossmark usage to content domains + `has-event` - [0 or 1], metadata for records with/without event + `has-full-text` - [0 or 1], metadata that includes/does not include any full text `resource` elements + `has-funder` - [0 or 1], metadata which includes/does not include one or more funder entry + `has-funder-doi` - [0 or 1], metadata for records with/without funder DOI + `has-license` - [0 or 1], metadata that includes/does not include any `license_ref` elements + `has-orcid` - [0 or 1], metadata which includes/does not include one or more ORCIDs + `has-references` - [0 or 1], metadata for works that have/don\\'t have a list of references + `has-relation` - [0 or 1], metadata for records that either assert/do not assert or are/are not the object of a relation + `has-update` - [0 or 1], metadata for records with/without update information + `has-update-policy` - [0 or 1], metadata for records that include/do not include a link to an editorial update policy + `is-update` - [0 or 1], metadata for records that represent/do not represent editorial updates + `isbn` - metadata with given ISBN + `issn` - metadata with given ISSN, format is xxxx-xxxx + `license`   + `license.url` - metadata where `license_ref` value equals given url   + `license.version` - metadata where the `license_ref`\\'s `applies_to` attribute equals given version   + `license.delay` - metadata where difference between publication date and the `license_ref`\\'s `start_date` attribute is <= than given delay (in days) + `member` - metadata belonging to a given Crossref member + `orcid` - metadata where there is a contributor with given ORCID + `prefix` - metadata belonging to a given DOI owner prefix (e.g. 10.1016) + `reference-visibility` - [open, limited or closed], metadata for works where references are either open, limited (to [Metadata Plus subscribers](https://www.crossref.org/services/metadata-retrieval/metadata-plus/)) or closed + `relation`   + `relation.type` - metadata for records with a relation with the given type from the Crossref relations schema (e.g. is-referenced-by, is-parent-of, is-preprint-of)   + `relation.object-type` - metadata for records with a relation, where the object type matches given type from the Crossref relations schema (e.g. doi, issn)   + `relation.object` - metadata for records with a relation, where the object identifier matches given identifier + `type` - metadata records whose type equals given type, type must be an ID value from the list of types returned by the /types resource + `type-name` - metadata for records with type name equal to given name + `until-accepted-date` - [date], metadata where accepted date is before given date (inclusive) + `until-approved-date` - [date], metadata where approved date is before given date (inclusive) + `until-created-date` - [date], metadata first deposited before given date (inclusive) + `until-deposit-date` - [date], metadata last (re)deposited before given date (inclusive) + `until-event-end-date` - [date], metadata where event end date is before given date (inclusive) + `until-event-start-date` - [date], metadata where event start date is before given date  (inclusive) + `until-index-date` - [date], metadata indexed before given date (inclusive) + `until-issued-date` - [date], metadata where issued date is before given date  (inclusive) + `until-online-pub-date` - [date], metadata where online published date is before given date (inclusive) + `until-posted-date` - [date], metadata where posted date is before given date (inclusive) + `until-print-pub-date` - [date], metadata where print published date is before given date (inclusive) + `until-pub-date` - [date], metadata where published date is before given date (inclusive) + `until-update-date` - [date], metadata updated before given date (inclusive), currently the same as `until-deposit-date` + `update-type` - metadata with given update type + `updates` - metadata for records that represent editorial updates to given DOI ## Elements  Crossref metadata records can be quite large. Sometimes you just want a few elements from the schema. You can \\\\\\\"select\\\\\\\" a subset of elements to return using the `select` parameter. This can make your API calls much more efficient. For example:  ## ``` /works?select=DOI,prefix,title ```  ##  This endpoint supports selecting the following elements.  ##  + `DOI` + `ISBN` + `ISSN` + `URL` + `abstract` + `accepted` + `alternative-id` + `approved` + `archive` + `article-number` + `assertion` + `author` + `chair` + `clinical-trial-number` + `container-title` + `content-created` + `content-domain` + `created` + `degree` + `deposited` + `editor` + `event` + `funder` + `group-title` + `indexed` + `is-referenced-by-count` + `issn-type` + `issue` + `issued` + `license` + `link` + `member` + `original-title` + `page` + `posted` + `prefix` + `published` + `published-online` + `published-print` + `publisher` + `publisher-location` + `reference` + `references-count` + `relation` + `score` + `short-container-title` + `short-title` + `standards-body` + `subject` + `subtitle` + `title` + `translator` + `type` + `update-policy` + `update-to` + `updated-by` + `volume` ## Pagination with offsets  Offsets are an easy way to iterate over results sets up to 10,000 items. This limit applies to the sum of values of parameters `offset` + `rows`.  ##  The number of items returned in a single response is controlled by `rows` parameter (default is 20, and maximum is 1,000). To limit results to 5, for example, you could do the following:  ##  ``` /works?query=allen+renear&rows=5 ```  ##  `offset` parameter can be used to retrieve items starting from a specific index of the result list. For example, to select the second set of 5 results (i.e. results 6 through 10), you would do the following:  ##  ``` /works?query=allen+renear&rows=5&offset=5 ```  ##  ## Deep paging  Deep paging using cursors can be used to iterate over large result sets, without any limits on their size.  ##  To use deep paging make a query as normal, but include the `cursor` parameter with a value of `*`, for example:  ##  ``` /members/311/works?filter=type:journal-article&cursor=* ```  ##  A `next-cursor` field will be provided in the JSON response. To get the next page of results, pass the value of `next-cursor` as the cursor parameter (remember to URL-encode). For example:  ##  ``` /members/311/works?filter=type:journal-article&cursor=<value of next-cursor parameter> ```  ##  Clients should check the number of returned items. If the number of returned items is equal to the number of expected rows then the end of the result set has been reached. Using next-cursor beyond this point will result in responses with an empty items list.  ##  ## Sample  Being able to select random results is useful for both testing and sampling. You can use the `sample` parameter to retrieve random results. So, for example, the following selects 10 random works:  ## ``` /works?sample=10 ``` ##  Note that when you use the `sample` parameter, the `rows` and `offset` parameters are ignored.   ## Parameter combinations  Any combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` can be used with offsets. Sampling cannot be combined with offsets.  ##  Any combination of `query`, `query.*`, `filter`, `facet`, `select` and `sort` may also be used with deep paging cursors. `rows` may also be specified.  ##  `offset` and `sample` cannot be used in combination with cursors.  ## \n     */\n    async worksGet(requestParameters: WorksGetRequest): Promise<WorksMessage> {\n        const response = await this.worksGetRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","import { Work, WorkFromJSON} from '@/clients/crossref';\nimport prefillData from '../assets/data/works-cache.json';\n\ntype CacheResult = Work;\n\nexport class WorksCache {\n    private static instance: WorksCache;\n    private cache: { doi: string, result: Work }[] = [];\n\n    constructor() {\n        if (WorksCache.instance != null) {\n            return WorksCache.instance;\n        }\n\n        this.prefill();\n        WorksCache.instance = this;\n\n        return this;\n    }\n\n    private prefill() {\n        const prefillWorks = ((prefillData as Array<any>).map(WorkFromJSON));\n        prefillWorks.forEach( currentWork => this.set(currentWork.dOI, currentWork));\n    }\n\n    public set = (doi: string, result: CacheResult): void => {\n        if (!this.recordExists(doi)) {\n            this.cache.push({\n                doi,\n                result\n            });\n        }\n    }\n\n    public get = (doi: string): CacheResult | null => {\n        const cacheRecord = this.cache.find(x => {\n            return x.doi == doi;\n        });\n\n        if (cacheRecord) {\n            return cacheRecord.result;\n        }\n\n        return null;\n    }\n\n    public recordExists = (doi: string): boolean => {\n        return this.get(doi) != null;\n    }\n}","import { WorksCache } from './WorksCache';\nimport { WorksApi, WorksDoiGetRequest,WorkMessage } from '@/clients/crossref';\n\nexport class CachedWorksApi extends WorksApi {\n    private apiCache = new WorksCache();\n\n    async worksDoiGet(requestParameters: WorksDoiGetRequest): Promise<WorkMessage> {\n        if (this.apiCache.recordExists(requestParameters.doi)) {\n            //console.debug(\"Cache hit\")\n            return new Promise(resolve => \n                resolve({\n                    \"status\" : \"\",\n                    \"messageType\" : \"\",\n                    \"messageVersion\" : \"\",\n                    \"message\" : this.apiCache.get(requestParameters.doi)!\n                }\n                )\n            );\n        }\n        //console.debug(\"Cache miss\")\n        const response = await super.worksDoiGet(requestParameters);\n        this.apiCache.set(requestParameters.doi, response.message);\n        return response;\n    }\n}","\nimport cytoscape, { Core, CytoscapeOptions, ElementsDefinition, NodeDefinition, EdgeDefinition } from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\n\nimport { ref, onMounted, PropType } from \"vue\";\n\nimport Reuse from \"../backend/models/Reuse\";\nimport { CachedWorksApi } from \"../tools/CachedWorksApi\";\nimport { Author, WorkMessage } from \"@/clients/crossref\";\n\nexport default {\n  props: {\n    reuseData: Array as PropType<Array<Reuse>>,\n  },\n  setup(props: any) {\n    const cyroot = ref(null);\n    const cyInstance = ref<Core | null>(null);\n    const worksApi = new CachedWorksApi();\n\n    async function transformToGraph(data: Array<Reuse>) : Promise<ElementsDefinition> {\n      const transformedNodes = await getNodes(data);\n     \n      return {\n        nodes: transformedNodes,\n        edges: getLinks(data),\n      };\n    }\n    async function getNodes(data: Array<Reuse>) : Promise<Array<NodeDefinition>> {\n      const reusedNodes = async() => {\n        return Promise.all(\n          data.map(getReusedNode)\n        )\n      };\n\n      const sourceNodes = async() => {\n        return Promise.all(\n          data.map(getSourceNode)\n        )\n      };\n      \n      const result = \n        (await reusedNodes())\n        .concat(await sourceNodes())\n        .sort()\n        .filter(function (item: any, pos: any, ary: any) {\n           return !pos || item.data.id != ary[pos - 1].data.id;\n        });\n\n      return result;\n    }\n\n    async function getReusedNode(item : Reuse) : Promise<NodeDefinition> {\n      const title = await getItemTitle(item.reusedDOI);\n      return {\n            data: { id: item.reusedDOI, name: title },\n          };\n    }\n\n    async function getSourceNode(item : Reuse) : Promise<NodeDefinition> {\n      return {\n            data: { id: item.sourceDOI, name: (await getItemTitle(item.sourceDOI)) },\n          };\n    }\n    \n    function getLinks(data: Array<Reuse>) : Array<EdgeDefinition> {\n      return data.map((item: Reuse) => {\n        return { data: { source: item.sourceDOI, target: item.reusedDOI } };\n      });\n    }\n    async function getItemTitle(doi: string) {\n      const work = await worksApi.worksDoiGet({ doi: doi })\n        .catch((err) => {\n          console.warn(err);\n        });\n\n      if (work as WorkMessage) {\n        const workMessage = (work as WorkMessage).message\n        return getAuthors(workMessage.author) + \" (\" + workMessage.issued.dateParts[0][0] + \")\"; \n      } else {\n        return doi;\n      }\n \n    }\n    function getAuthors(authors: Array<Author>): string {\n      if (!authors) return \"\";\n      if (!authors[0]) return \"\";\n      if (authors.length == 1) return authors[0].family;\n      return authors[0].family + \" et al.\";\n    }\n\n    const elementsPromise = transformToGraph(props.reuseData);\n\n    onMounted(() => {\n      var cytoConfig = {\n        container: cyroot.value,\n        elements: elementsPromise,\n        layout: {\n          name: \"fcose\",\n        },\n        style: [\n          {\n            selector: \"node\",\n            style: {\n              content: \"data(name)\",\n              \"font-family\": \"Roboto Condensed, Helvetica, Arial, sans-serif\",\n              width: 10,\n              height: 10,\n              \"font-size\": \"8pt\",\n              \"text-opacity\": 1,\n              \"text-valign\": \"center\",\n              \"text-halign\": \"right\",\n              color: \"#2c3e50\",\n              \"background-color\": \"#77aaff\",\n            },\n          },\n          {\n            selector: \"edge\",\n            style: {\n              \"curve-style\": \"bezier\",\n              \"target-arrow-shape\": \"triangle\",\n              \"line-color\": \"#9dbaea\",\n              \"target-arrow-color\": \"#9dbaea\",\n            },\n          },\n        ],\n        // initial viewport state:\n        zoom: 1,\n        pan: { x: 0, y: 0 },\n        // interaction options:\n        minZoom: 1e-50,\n        maxZoom: 1e50,\n        zoomingEnabled: true,\n        userZoomingEnabled: true,\n        panningEnabled: true,\n        userPanningEnabled: true,\n        boxSelectionEnabled: true,\n        selectionType: \"single\",\n        touchTapThreshold: 8,\n        desktopTapThreshold: 4,\n        autolock: false,\n        autoungrabify: false,\n        autounselectify: false,\n        // rendering options:\n        headless: false,\n        styleEnabled: true,\n        hideEdgesOnViewport: false,\n        textureOnViewport: false,\n        motionBlur: true,\n        motionBlurOpacity: 0.1,\n        animate: true,\n        pixelRatio: \"auto\",\n      } as CytoscapeOptions;\n      cytoscape.use(fcose);\n      var cy = cytoscape(cytoConfig);\n      cy.layout({ name: \"fcose\" }).run();\n      cyInstance.value = cy;\n\n      var throttle: any;\n      function handleWindowResize() {\n        clearTimeout(throttle);\n        throttle = setTimeout(function () {\n          cyInstance.value!.layout({ name: \"fcose\" }).run();\n        }, 100);\n      }\n\n      window.addEventListener(\"resize\", handleWindowResize);\n    });\n\n    return {\n      cyroot,\n      cyInstance,\n    };\n  },\n};\n","import { render } from \"./GraphView.vue?vue&type=template&id=2f98285d\"\nimport script from \"./GraphView.vue?vue&type=script&lang=ts\"\nexport * from \"./GraphView.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n  <h2 class=\"text-xl bg-opacity-80 bg-blue-200\">Researchers</h2>\n\n  <h3 class=\"text-l bg-opacity-40 bg-blue-200\">Most reused</h3>\n  <!--\n  <table class=\"m-1 table-auto text-xs w-full\">\n    <tr v-for=\"(r, index) in researchers.reused\" :key=\"r.ORCID\" :class=\"index % 2 ? 'bg-opacity-20 bg-white' : ''\">\n      <td><a :href=\"r.ORCID\" target=\"_blank\">{{r.given}} {{r.family}}</a></td>\n    </tr>\n  </table>\n-->\n\n  <h3 class=\"text-l bg-opacity-40 bg-blue-200\">Most reusing</h3>\n  <!--\n  <table class=\"m-1 table-auto text-xs w-full\">\n    <tr v-for=\"(r, index) in researchers.reusing\" :key=\"r.ORCID\" :class=\"index % 2 ? 'bg-opacity-20 bg-white' : ''\">\n      <td><a :href=\"r.ORCID\" target=\"_blank\">{{r.given}} {{r.family}}</a></td>\n    </tr>\n  </table>\n-->\n\n  <h2 class=\"text-xl bg-opacity-80 bg-blue-200\">Artifacts</h2>\n\n  <h3 class=\"text-l bg-opacity-40 bg-blue-200\">Most reused</h3>\n  <!--\n  <table class=\"m-1 table-auto text-xs w-full\">\n    <tr v-for=\"(p, index) in publications.reused\" :key=\"p.title\" :class=\"index % 2 ? 'bg-opacity-20 bg-white' : ''\">\n      <td><a :href=\"p.url\" target=\"_blank\">{{p.title}}</a></td>\n    </tr>\n  </table>\n-->\n\n  <h3 class=\"text-l bg-opacity-40 bg-blue-200\">Most reusing</h3>\n  <!--\n  <table class=\"m-1 table-auto text-xs w-full\">\n    <tr v-for=\"(p, index) in publications.reusing\" :key=\"p.title\" :class=\"index % 2 ? 'bg-opacity-20 bg-white' : ''\">\n      <td><a :href=\"p.url\" target=\"_blank\">{{p.title}}</a></td>\n    </tr>\n  </table>\n-->\n  </div>\n</template>\n<script lang=\"ts\">\nimport { ref, onBeforeMount } from \"vue\";\nimport { Configuration, PublicAPIV20Api } from '@/clients/orcid';\n//import { WorksApi } from '@/clients/crossref';\nimport { CachedWorksApi } from '@/tools/CachedWorksApi';\nimport { QueryApi } from '@/clients/arxiv';\n//import OrcidRequester from \"@/backend/people/OrcidRequester\";\n//import { OrcidPerson } from \"@/backend/models/OrcidResponse\";\nconst orcid : string = \"0000-0001-9848-2017\";\n//const doi = \"10.1145/3368089.3409767\"\n\n\nexport default {\n  setup() {\n    const person = ref(null);\n\n    onBeforeMount(() => {\n\n      const orcidApi = new PublicAPIV20Api(new Configuration({ headers: {'Accept': 'application/json'}}));\n\n      orcidApi.viewPersonalDetails({\"orcid\": orcid})\n      .then(result => {\n        console.debug(result.name);\n      });\n\n      const crWorksApi = new CachedWorksApi();\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1109/TPDS.2020.3014173\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1145/3243176.3243199\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1145/3368089.3409697\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1145/3394451.3397204\"})\n        .then(result => {\n          console.debug(result);\n        });\n      \n      const arxivApi = new QueryApi();\n      arxivApi.queryById({\"id\" : \"2103.12221\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      /*const oReq = new OrcidRequester();\n      oReq\n        .getPersonalDetails(orcid)\n        .then(result => {\n          person.value = result.returnValue;\n          console.debug(result.returnValue.lastModifiedDate);\n        });\n\n      */\n\n        /*\n      const paperReq = new CrossrefRequester();\n      paperReq.getPaper(doi)\n        .then(result => {\n          let crPaper = result.returnValue.message;\n          paper.value =  { doi: crPaper.DOI, title: crPaper.title[0]} as Paper;\n        });\n\n      isLoading.value = false;\n      */\n    });\n\n    return { person };\n  }\n}\n</script>\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"https://pub.orcid.org\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n        ? context.body\n        : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Date) {\n                return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CountryV20,\n    CountryV20FromJSON,\n    CountryV20FromJSONTyped,\n    CountryV20ToJSON,\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressV20\n */\nexport interface AddressV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof AddressV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof AddressV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof AddressV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {CountryV20}\n     * @memberof AddressV20\n     */\n    country: CountryV20;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV20\n     */\n    visibility?: AddressV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV20\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AddressV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function AddressV20FromJSON(json: any): AddressV20 {\n    return AddressV20FromJSONTyped(json, false);\n}\n\nexport function AddressV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'country': CountryV20FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function AddressV20ToJSON(value?: AddressV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'country': CountryV20ToJSON(value.country),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CountryV30,\n    CountryV30FromJSON,\n    CountryV30FromJSONTyped,\n    CountryV30ToJSON,\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressV30\n */\nexport interface AddressV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof AddressV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof AddressV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof AddressV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {CountryV30}\n     * @memberof AddressV30\n     */\n    country: CountryV30;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV30\n     */\n    visibility?: AddressV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV30\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AddressV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function AddressV30FromJSON(json: any): AddressV30 {\n    return AddressV30FromJSONTyped(json, false);\n}\n\nexport function AddressV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'country': CountryV30FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function AddressV30ToJSON(value?: AddressV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'country': CountryV30ToJSON(value.country),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CountryV30Rc1,\n    CountryV30Rc1FromJSON,\n    CountryV30Rc1FromJSONTyped,\n    CountryV30Rc1ToJSON,\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressV30Rc1\n */\nexport interface AddressV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof AddressV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof AddressV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof AddressV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {CountryV30Rc1}\n     * @memberof AddressV30Rc1\n     */\n    country: CountryV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV30Rc1\n     */\n    visibility?: AddressV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV30Rc1\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AddressV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function AddressV30Rc1FromJSON(json: any): AddressV30Rc1 {\n    return AddressV30Rc1FromJSONTyped(json, false);\n}\n\nexport function AddressV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'country': CountryV30Rc1FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function AddressV30Rc1ToJSON(value?: AddressV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'country': CountryV30Rc1ToJSON(value.country),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CountryV30Rc2,\n    CountryV30Rc2FromJSON,\n    CountryV30Rc2FromJSONTyped,\n    CountryV30Rc2ToJSON,\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressV30Rc2\n */\nexport interface AddressV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof AddressV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof AddressV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof AddressV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {CountryV30Rc2}\n     * @memberof AddressV30Rc2\n     */\n    country: CountryV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV30Rc2\n     */\n    visibility?: AddressV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AddressV30Rc2\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AddressV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function AddressV30Rc2FromJSON(json: any): AddressV30Rc2 {\n    return AddressV30Rc2FromJSONTyped(json, false);\n}\n\nexport function AddressV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'country': CountryV30Rc2FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function AddressV30Rc2ToJSON(value?: AddressV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'country': CountryV30Rc2ToJSON(value.country),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AffiliationSummaryV30\n */\nexport interface AffiliationSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof AffiliationSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof AffiliationSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof AffiliationSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof AffiliationSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof AffiliationSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof AffiliationSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof AffiliationSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof AffiliationSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof AffiliationSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30\n     */\n    visibility?: AffiliationSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AffiliationSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function AffiliationSummaryV30FromJSON(json: any): AffiliationSummaryV30 {\n    return AffiliationSummaryV30FromJSONTyped(json, false);\n}\n\nexport function AffiliationSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): AffiliationSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function AffiliationSummaryV30ToJSON(value?: AffiliationSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AffiliationSummaryV30Rc1\n */\nexport interface AffiliationSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    visibility?: AffiliationSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AffiliationSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function AffiliationSummaryV30Rc1FromJSON(json: any): AffiliationSummaryV30Rc1 {\n    return AffiliationSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function AffiliationSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): AffiliationSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function AffiliationSummaryV30Rc1ToJSON(value?: AffiliationSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AffiliationSummaryV30Rc2\n */\nexport interface AffiliationSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    visibility?: AffiliationSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof AffiliationSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum AffiliationSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function AffiliationSummaryV30Rc2FromJSON(json: any): AffiliationSummaryV30Rc2 {\n    return AffiliationSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function AffiliationSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): AffiliationSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function AffiliationSummaryV30Rc2ToJSON(value?: AffiliationSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface BiographyV20\n */\nexport interface BiographyV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof BiographyV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof BiographyV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV20\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV20\n     */\n    visibility?: BiographyV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV20\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum BiographyV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function BiographyV20FromJSON(json: any): BiographyV20 {\n    return BiographyV20FromJSONTyped(json, false);\n}\n\nexport function BiographyV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): BiographyV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function BiographyV20ToJSON(value?: BiographyV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface BiographyV30\n */\nexport interface BiographyV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof BiographyV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof BiographyV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30\n     */\n    visibility?: BiographyV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum BiographyV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function BiographyV30FromJSON(json: any): BiographyV30 {\n    return BiographyV30FromJSONTyped(json, false);\n}\n\nexport function BiographyV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): BiographyV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function BiographyV30ToJSON(value?: BiographyV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface BiographyV30Rc1\n */\nexport interface BiographyV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof BiographyV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof BiographyV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30Rc1\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30Rc1\n     */\n    visibility?: BiographyV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum BiographyV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function BiographyV30Rc1FromJSON(json: any): BiographyV30Rc1 {\n    return BiographyV30Rc1FromJSONTyped(json, false);\n}\n\nexport function BiographyV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): BiographyV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function BiographyV30Rc1ToJSON(value?: BiographyV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface BiographyV30Rc2\n */\nexport interface BiographyV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof BiographyV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof BiographyV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30Rc2\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30Rc2\n     */\n    visibility?: BiographyV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof BiographyV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum BiographyV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function BiographyV30Rc2FromJSON(json: any): BiographyV30Rc2 {\n    return BiographyV30Rc2FromJSONTyped(json, false);\n}\n\nexport function BiographyV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): BiographyV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function BiographyV30Rc2ToJSON(value?: BiographyV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Citation\n */\nexport interface Citation {\n    /**\n     * \n     * @type {string}\n     * @memberof Citation\n     */\n    citationType: CitationCitationTypeEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof Citation\n     */\n    citationValue: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum CitationCitationTypeEnum {\n    FormattedUnspecified = 'formatted-unspecified',\n    Bibtex = 'bibtex',\n    FormattedApa = 'formatted-apa',\n    FormattedHarvard = 'formatted-harvard',\n    FormattedIeee = 'formatted-ieee',\n    FormattedMla = 'formatted-mla',\n    FormattedVancouver = 'formatted-vancouver',\n    FormattedChicago = 'formatted-chicago',\n    Ris = 'ris'\n}\n\nexport function CitationFromJSON(json: any): Citation {\n    return CitationFromJSONTyped(json, false);\n}\n\nexport function CitationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Citation {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'citationType': json['citation-type'],\n        'citationValue': json['citation-value'],\n    };\n}\n\nexport function CitationToJSON(value?: Citation | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'citation-type': value.citationType,\n        'citation-value': value.citationValue,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    EducationsSummaryV20,\n    EducationsSummaryV20FromJSON,\n    EducationsSummaryV20FromJSONTyped,\n    EducationsSummaryV20ToJSON,\n    EmploymentsSummaryV20,\n    EmploymentsSummaryV20FromJSON,\n    EmploymentsSummaryV20FromJSONTyped,\n    EmploymentsSummaryV20ToJSON,\n    FundingsV20,\n    FundingsV20FromJSON,\n    FundingsV20FromJSONTyped,\n    FundingsV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    PeerReviewsV20,\n    PeerReviewsV20FromJSON,\n    PeerReviewsV20FromJSONTyped,\n    PeerReviewsV20ToJSON,\n    WorksSummaryV20,\n    WorksSummaryV20FromJSON,\n    WorksSummaryV20FromJSONTyped,\n    WorksSummaryV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ActivitiesSummaryV20\n */\nexport interface ActivitiesSummaryV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof ActivitiesSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {EducationsSummaryV20}\n     * @memberof ActivitiesSummaryV20\n     */\n    educations?: EducationsSummaryV20;\n    /**\n     * \n     * @type {EmploymentsSummaryV20}\n     * @memberof ActivitiesSummaryV20\n     */\n    employments?: EmploymentsSummaryV20;\n    /**\n     * \n     * @type {FundingsV20}\n     * @memberof ActivitiesSummaryV20\n     */\n    fundings?: FundingsV20;\n    /**\n     * \n     * @type {PeerReviewsV20}\n     * @memberof ActivitiesSummaryV20\n     */\n    peerReviews?: PeerReviewsV20;\n    /**\n     * \n     * @type {WorksSummaryV20}\n     * @memberof ActivitiesSummaryV20\n     */\n    works?: WorksSummaryV20;\n    /**\n     * \n     * @type {string}\n     * @memberof ActivitiesSummaryV20\n     */\n    path?: string;\n}\n\nexport function ActivitiesSummaryV20FromJSON(json: any): ActivitiesSummaryV20 {\n    return ActivitiesSummaryV20FromJSONTyped(json, false);\n}\n\nexport function ActivitiesSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivitiesSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'educations': !exists(json, 'educations') ? undefined : EducationsSummaryV20FromJSON(json['educations']),\n        'employments': !exists(json, 'employments') ? undefined : EmploymentsSummaryV20FromJSON(json['employments']),\n        'fundings': !exists(json, 'fundings') ? undefined : FundingsV20FromJSON(json['fundings']),\n        'peerReviews': !exists(json, 'peer-reviews') ? undefined : PeerReviewsV20FromJSON(json['peer-reviews']),\n        'works': !exists(json, 'works') ? undefined : WorksSummaryV20FromJSON(json['works']),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ActivitiesSummaryV20ToJSON(value?: ActivitiesSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'educations': EducationsSummaryV20ToJSON(value.educations),\n        'employments': EmploymentsSummaryV20ToJSON(value.employments),\n        'fundings': FundingsV20ToJSON(value.fundings),\n        'peer-reviews': PeerReviewsV20ToJSON(value.peerReviews),\n        'works': WorksSummaryV20ToJSON(value.works),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressV20,\n    AddressV20FromJSON,\n    AddressV20FromJSONTyped,\n    AddressV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface AddressesV20\n */\nexport interface AddressesV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof AddressesV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<AddressV20>}\n     * @memberof AddressesV20\n     */\n    address?: Array<AddressV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof AddressesV20\n     */\n    path?: string;\n}\n\nexport function AddressesV20FromJSON(json: any): AddressesV20 {\n    return AddressesV20FromJSONTyped(json, false);\n}\n\nexport function AddressesV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressesV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'address': !exists(json, 'address') ? undefined : ((json['address'] as Array<any>).map(AddressV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function AddressesV20ToJSON(value?: AddressesV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'address': value.address === undefined ? undefined : ((value.address as Array<any>).map(AddressV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AmountV20\n */\nexport interface AmountV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof AmountV20\n     */\n    value?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AmountV20\n     */\n    currencyCode: string;\n}\n\nexport function AmountV20FromJSON(json: any): AmountV20 {\n    return AmountV20FromJSONTyped(json, false);\n}\n\nexport function AmountV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): AmountV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n        'currencyCode': json['currency-code'],\n    };\n}\n\nexport function AmountV20ToJSON(value?: AmountV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'currency-code': value.currencyCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ContributorAttributesV30\n */\nexport interface ContributorAttributesV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorAttributesV30\n     */\n    contributorSequence: ContributorAttributesV30ContributorSequenceEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorAttributesV30\n     */\n    contributorRole: ContributorAttributesV30ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ContributorAttributesV30ContributorSequenceEnum {\n    First = 'first',\n    Additional = 'additional'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum ContributorAttributesV30ContributorRoleEnum {\n    Author = 'author',\n    Assignee = 'assignee',\n    Editor = 'editor',\n    ChairOrTranslator = 'chair-or-translator',\n    CoInvestigator = 'co-investigator',\n    CoInventor = 'co-inventor',\n    GraduateStudent = 'graduate-student',\n    OtherInventor = 'other-inventor',\n    PrincipalInvestigator = 'principal-investigator',\n    PostdoctoralResearcher = 'postdoctoral-researcher',\n    SupportStaff = 'support-staff'\n}\n\nexport function ContributorAttributesV30FromJSON(json: any): ContributorAttributesV30 {\n    return ContributorAttributesV30FromJSONTyped(json, false);\n}\n\nexport function ContributorAttributesV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorAttributesV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorSequence': json['contributor-sequence'],\n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function ContributorAttributesV30ToJSON(value?: ContributorAttributesV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-sequence': value.contributorSequence,\n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ContributorAttributesV30Rc1\n */\nexport interface ContributorAttributesV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorAttributesV30Rc1\n     */\n    contributorSequence: ContributorAttributesV30Rc1ContributorSequenceEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorAttributesV30Rc1\n     */\n    contributorRole: ContributorAttributesV30Rc1ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ContributorAttributesV30Rc1ContributorSequenceEnum {\n    First = 'FIRST',\n    Additional = 'ADDITIONAL'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum ContributorAttributesV30Rc1ContributorRoleEnum {\n    Author = 'AUTHOR',\n    Assignee = 'ASSIGNEE',\n    Editor = 'EDITOR',\n    ChairOrTranslator = 'CHAIR_OR_TRANSLATOR',\n    CoInvestigator = 'CO_INVESTIGATOR',\n    CoInventor = 'CO_INVENTOR',\n    GraduateStudent = 'GRADUATE_STUDENT',\n    OtherInventor = 'OTHER_INVENTOR',\n    PrincipalInvestigator = 'PRINCIPAL_INVESTIGATOR',\n    PostdoctoralResearcher = 'POSTDOCTORAL_RESEARCHER',\n    SupportStaff = 'SUPPORT_STAFF'\n}\n\nexport function ContributorAttributesV30Rc1FromJSON(json: any): ContributorAttributesV30Rc1 {\n    return ContributorAttributesV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ContributorAttributesV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorAttributesV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorSequence': json['contributor-sequence'],\n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function ContributorAttributesV30Rc1ToJSON(value?: ContributorAttributesV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-sequence': value.contributorSequence,\n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ContributorAttributesV30Rc2\n */\nexport interface ContributorAttributesV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorAttributesV30Rc2\n     */\n    contributorSequence: ContributorAttributesV30Rc2ContributorSequenceEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorAttributesV30Rc2\n     */\n    contributorRole: ContributorAttributesV30Rc2ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ContributorAttributesV30Rc2ContributorSequenceEnum {\n    First = 'FIRST',\n    Additional = 'ADDITIONAL'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum ContributorAttributesV30Rc2ContributorRoleEnum {\n    Author = 'AUTHOR',\n    Assignee = 'ASSIGNEE',\n    Editor = 'EDITOR',\n    ChairOrTranslator = 'CHAIR_OR_TRANSLATOR',\n    CoInvestigator = 'CO_INVESTIGATOR',\n    CoInventor = 'CO_INVENTOR',\n    GraduateStudent = 'GRADUATE_STUDENT',\n    OtherInventor = 'OTHER_INVENTOR',\n    PrincipalInvestigator = 'PRINCIPAL_INVESTIGATOR',\n    PostdoctoralResearcher = 'POSTDOCTORAL_RESEARCHER',\n    SupportStaff = 'SUPPORT_STAFF'\n}\n\nexport function ContributorAttributesV30Rc2FromJSON(json: any): ContributorAttributesV30Rc2 {\n    return ContributorAttributesV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ContributorAttributesV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorAttributesV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorSequence': json['contributor-sequence'],\n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function ContributorAttributesV30Rc2ToJSON(value?: ContributorAttributesV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-sequence': value.contributorSequence,\n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CountryV20\n */\nexport interface CountryV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof CountryV20\n     */\n    value?: CountryV20ValueEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum CountryV20ValueEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function CountryV20FromJSON(json: any): CountryV20 {\n    return CountryV20FromJSONTyped(json, false);\n}\n\nexport function CountryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): CountryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function CountryV20ToJSON(value?: CountryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CountryV30\n */\nexport interface CountryV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof CountryV30\n     */\n    value?: CountryV30ValueEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum CountryV30ValueEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function CountryV30FromJSON(json: any): CountryV30 {\n    return CountryV30FromJSONTyped(json, false);\n}\n\nexport function CountryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): CountryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function CountryV30ToJSON(value?: CountryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CountryV30Rc1\n */\nexport interface CountryV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof CountryV30Rc1\n     */\n    value?: CountryV30Rc1ValueEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum CountryV30Rc1ValueEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function CountryV30Rc1FromJSON(json: any): CountryV30Rc1 {\n    return CountryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function CountryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): CountryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function CountryV30Rc1ToJSON(value?: CountryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CountryV30Rc2\n */\nexport interface CountryV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof CountryV30Rc2\n     */\n    value?: CountryV30Rc2ValueEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum CountryV30Rc2ValueEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function CountryV30Rc2FromJSON(json: any): CountryV30Rc2 {\n    return CountryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function CountryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): CountryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function CountryV30Rc2ToJSON(value?: CountryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DistinctionSummaryV30\n */\nexport interface DistinctionSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof DistinctionSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof DistinctionSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof DistinctionSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof DistinctionSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof DistinctionSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof DistinctionSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof DistinctionSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof DistinctionSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof DistinctionSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30\n     */\n    visibility?: DistinctionSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DistinctionSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function DistinctionSummaryV30FromJSON(json: any): DistinctionSummaryV30 {\n    return DistinctionSummaryV30FromJSONTyped(json, false);\n}\n\nexport function DistinctionSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): DistinctionSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function DistinctionSummaryV30ToJSON(value?: DistinctionSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DistinctionSummaryV30Rc1\n */\nexport interface DistinctionSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    visibility?: DistinctionSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DistinctionSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function DistinctionSummaryV30Rc1FromJSON(json: any): DistinctionSummaryV30Rc1 {\n    return DistinctionSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function DistinctionSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): DistinctionSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function DistinctionSummaryV30Rc1ToJSON(value?: DistinctionSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DistinctionSummaryV30Rc2\n */\nexport interface DistinctionSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    visibility?: DistinctionSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DistinctionSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function DistinctionSummaryV30Rc2FromJSON(json: any): DistinctionSummaryV30Rc2 {\n    return DistinctionSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function DistinctionSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): DistinctionSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function DistinctionSummaryV30Rc2ToJSON(value?: DistinctionSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DistinctionV30\n */\nexport interface DistinctionV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof DistinctionV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof DistinctionV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof DistinctionV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof DistinctionV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof DistinctionV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof DistinctionV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof DistinctionV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof DistinctionV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof DistinctionV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30\n     */\n    visibility?: DistinctionV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DistinctionV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function DistinctionV30FromJSON(json: any): DistinctionV30 {\n    return DistinctionV30FromJSONTyped(json, false);\n}\n\nexport function DistinctionV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): DistinctionV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function DistinctionV30ToJSON(value?: DistinctionV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DistinctionV30Rc1\n */\nexport interface DistinctionV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof DistinctionV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof DistinctionV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc1\n     */\n    visibility?: DistinctionV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DistinctionV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function DistinctionV30Rc1FromJSON(json: any): DistinctionV30Rc1 {\n    return DistinctionV30Rc1FromJSONTyped(json, false);\n}\n\nexport function DistinctionV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): DistinctionV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function DistinctionV30Rc1ToJSON(value?: DistinctionV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DistinctionV30Rc2\n */\nexport interface DistinctionV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof DistinctionV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof DistinctionV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DistinctionV30Rc2\n     */\n    visibility?: DistinctionV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum DistinctionV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function DistinctionV30Rc2FromJSON(json: any): DistinctionV30Rc2 {\n    return DistinctionV30Rc2FromJSONTyped(json, false);\n}\n\nexport function DistinctionV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): DistinctionV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function DistinctionV30Rc2ToJSON(value?: DistinctionV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationSummaryV20\n */\nexport interface EducationSummaryV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof EducationSummaryV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EducationSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof EducationSummaryV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV20\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV20\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EducationSummaryV20\n     */\n    startDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EducationSummaryV20\n     */\n    endDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof EducationSummaryV20\n     */\n    organization?: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV20\n     */\n    visibility?: EducationSummaryV20VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationSummaryV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV20\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationSummaryV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationSummaryV20FromJSON(json: any): EducationSummaryV20 {\n    return EducationSummaryV20FromJSONTyped(json, false);\n}\n\nexport function EducationSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV20FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV20FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV20FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EducationSummaryV20ToJSON(value?: EducationSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV20ToJSON(value.startDate),\n        'end-date': FuzzyDateV20ToJSON(value.endDate),\n        'organization': OrganizationV20ToJSON(value.organization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationSummaryV30\n */\nexport interface EducationSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof EducationSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof EducationSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof EducationSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EducationSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EducationSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof EducationSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof EducationSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof EducationSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30\n     */\n    visibility?: EducationSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationSummaryV30FromJSON(json: any): EducationSummaryV30 {\n    return EducationSummaryV30FromJSONTyped(json, false);\n}\n\nexport function EducationSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EducationSummaryV30ToJSON(value?: EducationSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationSummaryV30Rc1\n */\nexport interface EducationSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof EducationSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc1\n     */\n    visibility?: EducationSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationSummaryV30Rc1FromJSON(json: any): EducationSummaryV30Rc1 {\n    return EducationSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function EducationSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EducationSummaryV30Rc1ToJSON(value?: EducationSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationSummaryV30Rc2\n */\nexport interface EducationSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof EducationSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc2\n     */\n    visibility?: EducationSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationSummaryV30Rc2FromJSON(json: any): EducationSummaryV30Rc2 {\n    return EducationSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function EducationSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EducationSummaryV30Rc2ToJSON(value?: EducationSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationV20\n */\nexport interface EducationV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof EducationV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EducationV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof EducationV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV20\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV20\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EducationV20\n     */\n    startDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EducationV20\n     */\n    endDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof EducationV20\n     */\n    organization: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV20\n     */\n    visibility?: EducationV20VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationV20FromJSON(json: any): EducationV20 {\n    return EducationV20FromJSONTyped(json, false);\n}\n\nexport function EducationV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV20FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV20FromJSON(json['end-date']),\n        'organization': OrganizationV20FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EducationV20ToJSON(value?: EducationV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV20ToJSON(value.startDate),\n        'end-date': FuzzyDateV20ToJSON(value.endDate),\n        'organization': OrganizationV20ToJSON(value.organization),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationV30\n */\nexport interface EducationV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof EducationV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof EducationV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof EducationV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EducationV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EducationV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof EducationV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof EducationV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof EducationV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30\n     */\n    visibility?: EducationV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function EducationV30FromJSON(json: any): EducationV30 {\n    return EducationV30FromJSONTyped(json, false);\n}\n\nexport function EducationV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EducationV30ToJSON(value?: EducationV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationV30Rc1\n */\nexport interface EducationV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof EducationV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc1\n     */\n    visibility?: EducationV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationV30Rc1FromJSON(json: any): EducationV30Rc1 {\n    return EducationV30Rc1FromJSONTyped(json, false);\n}\n\nexport function EducationV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EducationV30Rc1ToJSON(value?: EducationV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationV30Rc2\n */\nexport interface EducationV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof EducationV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof EducationV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationV30Rc2\n     */\n    visibility?: EducationV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EducationV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EducationV30Rc2FromJSON(json: any): EducationV30Rc2 {\n    return EducationV30Rc2FromJSONTyped(json, false);\n}\n\nexport function EducationV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EducationV30Rc2ToJSON(value?: EducationV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmailV20\n */\nexport interface EmailV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof EmailV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EmailV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof EmailV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV20\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV20\n     */\n    visibility?: EmailV20VisibilityEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV20\n     */\n    verified?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV20\n     */\n    primary?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof EmailV20\n     */\n    putCode?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmailV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmailV20FromJSON(json: any): EmailV20 {\n    return EmailV20FromJSONTyped(json, false);\n}\n\nexport function EmailV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'verified': !exists(json, 'verified') ? undefined : json['verified'],\n        'primary': !exists(json, 'primary') ? undefined : json['primary'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n    };\n}\n\nexport function EmailV20ToJSON(value?: EmailV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'email': value.email,\n        'path': value.path,\n        'visibility': value.visibility,\n        'verified': value.verified,\n        'primary': value.primary,\n        'put-code': value.putCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmailV30\n */\nexport interface EmailV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof EmailV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof EmailV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof EmailV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30\n     */\n    visibility?: EmailV30VisibilityEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV30\n     */\n    verified?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV30\n     */\n    primary?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof EmailV30\n     */\n    putCode?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmailV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmailV30FromJSON(json: any): EmailV30 {\n    return EmailV30FromJSONTyped(json, false);\n}\n\nexport function EmailV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'verified': !exists(json, 'verified') ? undefined : json['verified'],\n        'primary': !exists(json, 'primary') ? undefined : json['primary'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n    };\n}\n\nexport function EmailV30ToJSON(value?: EmailV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'email': value.email,\n        'path': value.path,\n        'visibility': value.visibility,\n        'verified': value.verified,\n        'primary': value.primary,\n        'put-code': value.putCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmailV30Rc1\n */\nexport interface EmailV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof EmailV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof EmailV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof EmailV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30Rc1\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30Rc1\n     */\n    visibility?: EmailV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV30Rc1\n     */\n    verified?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV30Rc1\n     */\n    primary?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof EmailV30Rc1\n     */\n    putCode?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmailV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmailV30Rc1FromJSON(json: any): EmailV30Rc1 {\n    return EmailV30Rc1FromJSONTyped(json, false);\n}\n\nexport function EmailV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'verified': !exists(json, 'verified') ? undefined : json['verified'],\n        'primary': !exists(json, 'primary') ? undefined : json['primary'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n    };\n}\n\nexport function EmailV30Rc1ToJSON(value?: EmailV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'email': value.email,\n        'path': value.path,\n        'visibility': value.visibility,\n        'verified': value.verified,\n        'primary': value.primary,\n        'put-code': value.putCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmailV30Rc2\n */\nexport interface EmailV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof EmailV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof EmailV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof EmailV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30Rc2\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailV30Rc2\n     */\n    visibility?: EmailV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV30Rc2\n     */\n    verified?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailV30Rc2\n     */\n    primary?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof EmailV30Rc2\n     */\n    putCode?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmailV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmailV30Rc2FromJSON(json: any): EmailV30Rc2 {\n    return EmailV30Rc2FromJSONTyped(json, false);\n}\n\nexport function EmailV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'verified': !exists(json, 'verified') ? undefined : json['verified'],\n        'primary': !exists(json, 'primary') ? undefined : json['primary'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n    };\n}\n\nexport function EmailV30Rc2ToJSON(value?: EmailV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'email': value.email,\n        'path': value.path,\n        'visibility': value.visibility,\n        'verified': value.verified,\n        'primary': value.primary,\n        'put-code': value.putCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentSummaryV20\n */\nexport interface EmploymentSummaryV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof EmploymentSummaryV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EmploymentSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof EmploymentSummaryV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV20\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV20\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EmploymentSummaryV20\n     */\n    startDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EmploymentSummaryV20\n     */\n    endDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof EmploymentSummaryV20\n     */\n    organization?: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV20\n     */\n    visibility?: EmploymentSummaryV20VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentSummaryV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV20\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentSummaryV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentSummaryV20FromJSON(json: any): EmploymentSummaryV20 {\n    return EmploymentSummaryV20FromJSONTyped(json, false);\n}\n\nexport function EmploymentSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV20FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV20FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV20FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EmploymentSummaryV20ToJSON(value?: EmploymentSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV20ToJSON(value.startDate),\n        'end-date': FuzzyDateV20ToJSON(value.endDate),\n        'organization': OrganizationV20ToJSON(value.organization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentSummaryV30\n */\nexport interface EmploymentSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof EmploymentSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof EmploymentSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof EmploymentSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EmploymentSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EmploymentSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof EmploymentSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof EmploymentSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof EmploymentSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30\n     */\n    visibility?: EmploymentSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentSummaryV30FromJSON(json: any): EmploymentSummaryV30 {\n    return EmploymentSummaryV30FromJSONTyped(json, false);\n}\n\nexport function EmploymentSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EmploymentSummaryV30ToJSON(value?: EmploymentSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentSummaryV30Rc1\n */\nexport interface EmploymentSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    visibility?: EmploymentSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentSummaryV30Rc1FromJSON(json: any): EmploymentSummaryV30Rc1 {\n    return EmploymentSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function EmploymentSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EmploymentSummaryV30Rc1ToJSON(value?: EmploymentSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentSummaryV30Rc2\n */\nexport interface EmploymentSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    visibility?: EmploymentSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentSummaryV30Rc2FromJSON(json: any): EmploymentSummaryV30Rc2 {\n    return EmploymentSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function EmploymentSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EmploymentSummaryV30Rc2ToJSON(value?: EmploymentSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentV20\n */\nexport interface EmploymentV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof EmploymentV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EmploymentV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof EmploymentV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV20\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV20\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EmploymentV20\n     */\n    startDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof EmploymentV20\n     */\n    endDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof EmploymentV20\n     */\n    organization: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV20\n     */\n    visibility?: EmploymentV20VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentV20FromJSON(json: any): EmploymentV20 {\n    return EmploymentV20FromJSONTyped(json, false);\n}\n\nexport function EmploymentV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV20FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV20FromJSON(json['end-date']),\n        'organization': OrganizationV20FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EmploymentV20ToJSON(value?: EmploymentV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV20ToJSON(value.startDate),\n        'end-date': FuzzyDateV20ToJSON(value.endDate),\n        'organization': OrganizationV20ToJSON(value.organization),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentV30\n */\nexport interface EmploymentV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof EmploymentV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof EmploymentV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof EmploymentV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EmploymentV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof EmploymentV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof EmploymentV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof EmploymentV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof EmploymentV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30\n     */\n    visibility?: EmploymentV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function EmploymentV30FromJSON(json: any): EmploymentV30 {\n    return EmploymentV30FromJSONTyped(json, false);\n}\n\nexport function EmploymentV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EmploymentV30ToJSON(value?: EmploymentV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentV30Rc1\n */\nexport interface EmploymentV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof EmploymentV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc1\n     */\n    visibility?: EmploymentV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentV30Rc1FromJSON(json: any): EmploymentV30Rc1 {\n    return EmploymentV30Rc1FromJSONTyped(json, false);\n}\n\nexport function EmploymentV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EmploymentV30Rc1ToJSON(value?: EmploymentV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentV30Rc2\n */\nexport interface EmploymentV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof EmploymentV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof EmploymentV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentV30Rc2\n     */\n    visibility?: EmploymentV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum EmploymentV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function EmploymentV30Rc2FromJSON(json: any): EmploymentV30Rc2 {\n    return EmploymentV30Rc2FromJSONTyped(json, false);\n}\n\nexport function EmploymentV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function EmploymentV30Rc2ToJSON(value?: EmploymentV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    UrlV20,\n    UrlV20FromJSON,\n    UrlV20FromJSONTyped,\n    UrlV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ExternalIDV20\n */\nexport interface ExternalIDV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV20\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV20\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof ExternalIDV20\n     */\n    externalIdUrl?: UrlV20;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV20\n     */\n    externalIdRelationship?: ExternalIDV20ExternalIdRelationshipEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ExternalIDV20ExternalIdRelationshipEnum {\n    PartOf = 'PART_OF',\n    Self = 'SELF'\n}\n\nexport function ExternalIDV20FromJSON(json: any): ExternalIDV20 {\n    return ExternalIDV20FromJSONTyped(json, false);\n}\n\nexport function ExternalIDV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalIDV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV20FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n    };\n}\n\nexport function ExternalIDV20ToJSON(value?: ExternalIDV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-url': UrlV20ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransientError,\n    TransientErrorFromJSON,\n    TransientErrorFromJSONTyped,\n    TransientErrorToJSON,\n    TransientNonEmptyString,\n    TransientNonEmptyStringFromJSON,\n    TransientNonEmptyStringFromJSONTyped,\n    TransientNonEmptyStringToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ExternalIDV30\n */\nexport interface ExternalIDV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {TransientNonEmptyString}\n     * @memberof ExternalIDV30\n     */\n    externalIdNormalized?: TransientNonEmptyString;\n    /**\n     * \n     * @type {TransientError}\n     * @memberof ExternalIDV30\n     */\n    externalIdNormalizedError?: TransientError;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof ExternalIDV30\n     */\n    externalIdUrl?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30\n     */\n    externalIdRelationship?: ExternalIDV30ExternalIdRelationshipEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ExternalIDV30ExternalIdRelationshipEnum {\n    PartOf = 'part-of',\n    Self = 'self',\n    VersionOf = 'version-of'\n}\n\nexport function ExternalIDV30FromJSON(json: any): ExternalIDV30 {\n    return ExternalIDV30FromJSONTyped(json, false);\n}\n\nexport function ExternalIDV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalIDV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdNormalized': !exists(json, 'external-id-normalized') ? undefined : TransientNonEmptyStringFromJSON(json['external-id-normalized']),\n        'externalIdNormalizedError': !exists(json, 'external-id-normalized-error') ? undefined : TransientErrorFromJSON(json['external-id-normalized-error']),\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV30FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n    };\n}\n\nexport function ExternalIDV30ToJSON(value?: ExternalIDV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-normalized': TransientNonEmptyStringToJSON(value.externalIdNormalized),\n        'external-id-normalized-error': TransientErrorToJSON(value.externalIdNormalizedError),\n        'external-id-url': UrlV30ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransientError,\n    TransientErrorFromJSON,\n    TransientErrorFromJSONTyped,\n    TransientErrorToJSON,\n    TransientNonEmptyString,\n    TransientNonEmptyStringFromJSON,\n    TransientNonEmptyStringFromJSONTyped,\n    TransientNonEmptyStringToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ExternalIDV30Rc1\n */\nexport interface ExternalIDV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30Rc1\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30Rc1\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {TransientNonEmptyString}\n     * @memberof ExternalIDV30Rc1\n     */\n    externalIdNormalized?: TransientNonEmptyString;\n    /**\n     * \n     * @type {TransientError}\n     * @memberof ExternalIDV30Rc1\n     */\n    externalIdNormalizedError?: TransientError;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof ExternalIDV30Rc1\n     */\n    externalIdUrl?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30Rc1\n     */\n    externalIdRelationship?: ExternalIDV30Rc1ExternalIdRelationshipEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ExternalIDV30Rc1ExternalIdRelationshipEnum {\n    PartOf = 'PART_OF',\n    Self = 'SELF'\n}\n\nexport function ExternalIDV30Rc1FromJSON(json: any): ExternalIDV30Rc1 {\n    return ExternalIDV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ExternalIDV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalIDV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdNormalized': !exists(json, 'external-id-normalized') ? undefined : TransientNonEmptyStringFromJSON(json['external-id-normalized']),\n        'externalIdNormalizedError': !exists(json, 'external-id-normalized-error') ? undefined : TransientErrorFromJSON(json['external-id-normalized-error']),\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV30Rc1FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n    };\n}\n\nexport function ExternalIDV30Rc1ToJSON(value?: ExternalIDV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-normalized': TransientNonEmptyStringToJSON(value.externalIdNormalized),\n        'external-id-normalized-error': TransientErrorToJSON(value.externalIdNormalizedError),\n        'external-id-url': UrlV30Rc1ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TransientError,\n    TransientErrorFromJSON,\n    TransientErrorFromJSONTyped,\n    TransientErrorToJSON,\n    TransientNonEmptyString,\n    TransientNonEmptyStringFromJSON,\n    TransientNonEmptyStringFromJSONTyped,\n    TransientNonEmptyStringToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ExternalIDV30Rc2\n */\nexport interface ExternalIDV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30Rc2\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30Rc2\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {TransientNonEmptyString}\n     * @memberof ExternalIDV30Rc2\n     */\n    externalIdNormalized?: TransientNonEmptyString;\n    /**\n     * \n     * @type {TransientError}\n     * @memberof ExternalIDV30Rc2\n     */\n    externalIdNormalizedError?: TransientError;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof ExternalIDV30Rc2\n     */\n    externalIdUrl?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof ExternalIDV30Rc2\n     */\n    externalIdRelationship?: ExternalIDV30Rc2ExternalIdRelationshipEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ExternalIDV30Rc2ExternalIdRelationshipEnum {\n    PartOf = 'PART_OF',\n    Self = 'SELF',\n    VersionOf = 'VERSION_OF'\n}\n\nexport function ExternalIDV30Rc2FromJSON(json: any): ExternalIDV30Rc2 {\n    return ExternalIDV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ExternalIDV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalIDV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdNormalized': !exists(json, 'external-id-normalized') ? undefined : TransientNonEmptyStringFromJSON(json['external-id-normalized']),\n        'externalIdNormalizedError': !exists(json, 'external-id-normalized-error') ? undefined : TransientErrorFromJSON(json['external-id-normalized-error']),\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV30Rc2FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n    };\n}\n\nexport function ExternalIDV30Rc2ToJSON(value?: ExternalIDV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-normalized': TransientNonEmptyStringToJSON(value.externalIdNormalized),\n        'external-id-normalized-error': TransientErrorToJSON(value.externalIdNormalizedError),\n        'external-id-url': UrlV30Rc2ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FundingContributorAttributesV20\n */\nexport interface FundingContributorAttributesV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof FundingContributorAttributesV20\n     */\n    contributorRole: FundingContributorAttributesV20ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingContributorAttributesV20ContributorRoleEnum {\n    Lead = 'LEAD',\n    CoLead = 'CO_LEAD',\n    SupportedBy = 'SUPPORTED_BY',\n    OtherContribution = 'OTHER_CONTRIBUTION'\n}\n\nexport function FundingContributorAttributesV20FromJSON(json: any): FundingContributorAttributesV20 {\n    return FundingContributorAttributesV20FromJSONTyped(json, false);\n}\n\nexport function FundingContributorAttributesV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingContributorAttributesV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function FundingContributorAttributesV20ToJSON(value?: FundingContributorAttributesV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FundingContributorAttributesV30\n */\nexport interface FundingContributorAttributesV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof FundingContributorAttributesV30\n     */\n    contributorRole: FundingContributorAttributesV30ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingContributorAttributesV30ContributorRoleEnum {\n    Author = 'author',\n    Assignee = 'assignee',\n    Editor = 'editor',\n    ChairOrTranslator = 'chair-or-translator',\n    CoInvestigator = 'co-investigator',\n    CoInventor = 'co-inventor',\n    GraduateStudent = 'graduate-student',\n    OtherInventor = 'other-inventor',\n    PrincipalInvestigator = 'principal-investigator',\n    PostdoctoralResearcher = 'postdoctoral-researcher',\n    SupportStaff = 'support-staff'\n}\n\nexport function FundingContributorAttributesV30FromJSON(json: any): FundingContributorAttributesV30 {\n    return FundingContributorAttributesV30FromJSONTyped(json, false);\n}\n\nexport function FundingContributorAttributesV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingContributorAttributesV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function FundingContributorAttributesV30ToJSON(value?: FundingContributorAttributesV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FundingContributorAttributesV30Rc1\n */\nexport interface FundingContributorAttributesV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof FundingContributorAttributesV30Rc1\n     */\n    contributorRole: FundingContributorAttributesV30Rc1ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingContributorAttributesV30Rc1ContributorRoleEnum {\n    Lead = 'LEAD',\n    CoLead = 'CO_LEAD',\n    SupportedBy = 'SUPPORTED_BY',\n    OtherContribution = 'OTHER_CONTRIBUTION'\n}\n\nexport function FundingContributorAttributesV30Rc1FromJSON(json: any): FundingContributorAttributesV30Rc1 {\n    return FundingContributorAttributesV30Rc1FromJSONTyped(json, false);\n}\n\nexport function FundingContributorAttributesV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingContributorAttributesV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function FundingContributorAttributesV30Rc1ToJSON(value?: FundingContributorAttributesV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FundingContributorAttributesV30Rc2\n */\nexport interface FundingContributorAttributesV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof FundingContributorAttributesV30Rc2\n     */\n    contributorRole: FundingContributorAttributesV30Rc2ContributorRoleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingContributorAttributesV30Rc2ContributorRoleEnum {\n    Lead = 'LEAD',\n    CoLead = 'CO_LEAD',\n    SupportedBy = 'SUPPORTED_BY',\n    OtherContribution = 'OTHER_CONTRIBUTION'\n}\n\nexport function FundingContributorAttributesV30Rc2FromJSON(json: any): FundingContributorAttributesV30Rc2 {\n    return FundingContributorAttributesV30Rc2FromJSONTyped(json, false);\n}\n\nexport function FundingContributorAttributesV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingContributorAttributesV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorRole': json['contributor-role'],\n    };\n}\n\nexport function FundingContributorAttributesV30Rc2ToJSON(value?: FundingContributorAttributesV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-role': value.contributorRole,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    FundingTitleV20,\n    FundingTitleV20FromJSON,\n    FundingTitleV20FromJSONTyped,\n    FundingTitleV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingSummaryV20\n */\nexport interface FundingSummaryV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof FundingSummaryV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof FundingSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof FundingSummaryV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {FundingTitleV20}\n     * @memberof FundingSummaryV20\n     */\n    title: FundingTitleV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof FundingSummaryV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV20\n     */\n    type: FundingSummaryV20TypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof FundingSummaryV20\n     */\n    startDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof FundingSummaryV20\n     */\n    endDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof FundingSummaryV20\n     */\n    organization: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV20\n     */\n    visibility?: FundingSummaryV20VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingSummaryV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV20\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV20TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingSummaryV20FromJSON(json: any): FundingSummaryV20 {\n    return FundingSummaryV20FromJSONTyped(json, false);\n}\n\nexport function FundingSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'title': FundingTitleV20FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'type': json['type'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV20FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV20FromJSON(json['end-date']),\n        'organization': OrganizationV20FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function FundingSummaryV20ToJSON(value?: FundingSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'title': FundingTitleV20ToJSON(value.title),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'type': value.type,\n        'start-date': FuzzyDateV20ToJSON(value.startDate),\n        'end-date': FuzzyDateV20ToJSON(value.endDate),\n        'organization': OrganizationV20ToJSON(value.organization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FundingTitleV30,\n    FundingTitleV30FromJSON,\n    FundingTitleV30FromJSONTyped,\n    FundingTitleV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingSummaryV30\n */\nexport interface FundingSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof FundingSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof FundingSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof FundingSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {FundingTitleV30}\n     * @memberof FundingSummaryV30\n     */\n    title: FundingTitleV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof FundingSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof FundingSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30\n     */\n    type: FundingSummaryV30TypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof FundingSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof FundingSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof FundingSummaryV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30\n     */\n    visibility?: FundingSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV30TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingSummaryV30FromJSON(json: any): FundingSummaryV30 {\n    return FundingSummaryV30FromJSONTyped(json, false);\n}\n\nexport function FundingSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'title': FundingTitleV30FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'type': json['type'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function FundingSummaryV30ToJSON(value?: FundingSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'title': FundingTitleV30ToJSON(value.title),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'url': UrlV30ToJSON(value.url),\n        'type': value.type,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FundingTitleV30Rc1,\n    FundingTitleV30Rc1FromJSON,\n    FundingTitleV30Rc1FromJSONTyped,\n    FundingTitleV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingSummaryV30Rc1\n */\nexport interface FundingSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {FundingTitleV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    title: FundingTitleV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc1\n     */\n    type: FundingSummaryV30Rc1TypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof FundingSummaryV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc1\n     */\n    visibility?: FundingSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc1\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV30Rc1TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingSummaryV30Rc1FromJSON(json: any): FundingSummaryV30Rc1 {\n    return FundingSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function FundingSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'title': FundingTitleV30Rc1FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'type': json['type'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function FundingSummaryV30Rc1ToJSON(value?: FundingSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'title': FundingTitleV30Rc1ToJSON(value.title),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'type': value.type,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FundingTitleV30Rc2,\n    FundingTitleV30Rc2FromJSON,\n    FundingTitleV30Rc2FromJSONTyped,\n    FundingTitleV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingSummaryV30Rc2\n */\nexport interface FundingSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {FundingTitleV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    title: FundingTitleV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc2\n     */\n    type: FundingSummaryV30Rc2TypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof FundingSummaryV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc2\n     */\n    visibility?: FundingSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingSummaryV30Rc2\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV30Rc2TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingSummaryV30Rc2FromJSON(json: any): FundingSummaryV30Rc2 {\n    return FundingSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function FundingSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'title': FundingTitleV30Rc2FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'type': json['type'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function FundingSummaryV30Rc2ToJSON(value?: FundingSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'title': FundingTitleV30Rc2ToJSON(value.title),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'type': value.type,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AmountV20,\n    AmountV20FromJSON,\n    AmountV20FromJSONTyped,\n    AmountV20ToJSON,\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    FundingContributorsV20,\n    FundingContributorsV20FromJSON,\n    FundingContributorsV20FromJSONTyped,\n    FundingContributorsV20ToJSON,\n    FundingTitleV20,\n    FundingTitleV20FromJSON,\n    FundingTitleV20FromJSONTyped,\n    FundingTitleV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationDefinedFundingSubTypeV20,\n    OrganizationDefinedFundingSubTypeV20FromJSON,\n    OrganizationDefinedFundingSubTypeV20FromJSONTyped,\n    OrganizationDefinedFundingSubTypeV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    UrlV20,\n    UrlV20FromJSON,\n    UrlV20FromJSONTyped,\n    UrlV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingV20\n */\nexport interface FundingV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof FundingV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof FundingV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof FundingV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV20\n     */\n    type: FundingV20TypeEnum;\n    /**\n     * \n     * @type {OrganizationDefinedFundingSubTypeV20}\n     * @memberof FundingV20\n     */\n    organizationDefinedType?: OrganizationDefinedFundingSubTypeV20;\n    /**\n     * \n     * @type {FundingTitleV20}\n     * @memberof FundingV20\n     */\n    title: FundingTitleV20;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV20\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {AmountV20}\n     * @memberof FundingV20\n     */\n    amount?: AmountV20;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof FundingV20\n     */\n    url?: UrlV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof FundingV20\n     */\n    startDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof FundingV20\n     */\n    endDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof FundingV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {FundingContributorsV20}\n     * @memberof FundingV20\n     */\n    contributors?: FundingContributorsV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof FundingV20\n     */\n    organization: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV20\n     */\n    visibility?: FundingV20VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV20TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingV20FromJSON(json: any): FundingV20 {\n    return FundingV20FromJSONTyped(json, false);\n}\n\nexport function FundingV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'type': json['type'],\n        'organizationDefinedType': !exists(json, 'organization-defined-type') ? undefined : OrganizationDefinedFundingSubTypeV20FromJSON(json['organization-defined-type']),\n        'title': FundingTitleV20FromJSON(json['title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'amount': !exists(json, 'amount') ? undefined : AmountV20FromJSON(json['amount']),\n        'url': !exists(json, 'url') ? undefined : UrlV20FromJSON(json['url']),\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV20FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV20FromJSON(json['end-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'contributors': !exists(json, 'contributors') ? undefined : FundingContributorsV20FromJSON(json['contributors']),\n        'organization': OrganizationV20FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function FundingV20ToJSON(value?: FundingV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'type': value.type,\n        'organization-defined-type': OrganizationDefinedFundingSubTypeV20ToJSON(value.organizationDefinedType),\n        'title': FundingTitleV20ToJSON(value.title),\n        'short-description': value.shortDescription,\n        'amount': AmountV20ToJSON(value.amount),\n        'url': UrlV20ToJSON(value.url),\n        'start-date': FuzzyDateV20ToJSON(value.startDate),\n        'end-date': FuzzyDateV20ToJSON(value.endDate),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'contributors': FundingContributorsV20ToJSON(value.contributors),\n        'organization': OrganizationV20ToJSON(value.organization),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AmountV30,\n    AmountV30FromJSON,\n    AmountV30FromJSONTyped,\n    AmountV30ToJSON,\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FundingContributorsV30,\n    FundingContributorsV30FromJSON,\n    FundingContributorsV30FromJSONTyped,\n    FundingContributorsV30ToJSON,\n    FundingTitleV30,\n    FundingTitleV30FromJSON,\n    FundingTitleV30FromJSONTyped,\n    FundingTitleV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationDefinedFundingSubTypeV30,\n    OrganizationDefinedFundingSubTypeV30FromJSON,\n    OrganizationDefinedFundingSubTypeV30FromJSONTyped,\n    OrganizationDefinedFundingSubTypeV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingV30\n */\nexport interface FundingV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof FundingV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof FundingV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof FundingV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30\n     */\n    type: FundingV30TypeEnum;\n    /**\n     * \n     * @type {OrganizationDefinedFundingSubTypeV30}\n     * @memberof FundingV30\n     */\n    organizationDefinedType?: OrganizationDefinedFundingSubTypeV30;\n    /**\n     * \n     * @type {FundingTitleV30}\n     * @memberof FundingV30\n     */\n    title: FundingTitleV30;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {AmountV30}\n     * @memberof FundingV30\n     */\n    amount?: AmountV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof FundingV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof FundingV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof FundingV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof FundingV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {FundingContributorsV30}\n     * @memberof FundingV30\n     */\n    contributors?: FundingContributorsV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof FundingV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30\n     */\n    visibility?: FundingV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV30TypeEnum {\n    Grant = 'grant',\n    Contract = 'contract',\n    Award = 'award',\n    SalaryAward = 'salary-award'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function FundingV30FromJSON(json: any): FundingV30 {\n    return FundingV30FromJSONTyped(json, false);\n}\n\nexport function FundingV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'type': json['type'],\n        'organizationDefinedType': !exists(json, 'organization-defined-type') ? undefined : OrganizationDefinedFundingSubTypeV30FromJSON(json['organization-defined-type']),\n        'title': FundingTitleV30FromJSON(json['title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'amount': !exists(json, 'amount') ? undefined : AmountV30FromJSON(json['amount']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'contributors': !exists(json, 'contributors') ? undefined : FundingContributorsV30FromJSON(json['contributors']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function FundingV30ToJSON(value?: FundingV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'type': value.type,\n        'organization-defined-type': OrganizationDefinedFundingSubTypeV30ToJSON(value.organizationDefinedType),\n        'title': FundingTitleV30ToJSON(value.title),\n        'short-description': value.shortDescription,\n        'amount': AmountV30ToJSON(value.amount),\n        'url': UrlV30ToJSON(value.url),\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'contributors': FundingContributorsV30ToJSON(value.contributors),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AmountV30Rc1,\n    AmountV30Rc1FromJSON,\n    AmountV30Rc1FromJSONTyped,\n    AmountV30Rc1ToJSON,\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FundingContributorsV30Rc1,\n    FundingContributorsV30Rc1FromJSON,\n    FundingContributorsV30Rc1FromJSONTyped,\n    FundingContributorsV30Rc1ToJSON,\n    FundingTitleV30Rc1,\n    FundingTitleV30Rc1FromJSON,\n    FundingTitleV30Rc1FromJSONTyped,\n    FundingTitleV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationDefinedFundingSubTypeV30Rc1,\n    OrganizationDefinedFundingSubTypeV30Rc1FromJSON,\n    OrganizationDefinedFundingSubTypeV30Rc1FromJSONTyped,\n    OrganizationDefinedFundingSubTypeV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingV30Rc1\n */\nexport interface FundingV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc1\n     */\n    type: FundingV30Rc1TypeEnum;\n    /**\n     * \n     * @type {OrganizationDefinedFundingSubTypeV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    organizationDefinedType?: OrganizationDefinedFundingSubTypeV30Rc1;\n    /**\n     * \n     * @type {FundingTitleV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    title: FundingTitleV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc1\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {AmountV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    amount?: AmountV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {FundingContributorsV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    contributors?: FundingContributorsV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof FundingV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc1\n     */\n    visibility?: FundingV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV30Rc1TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingV30Rc1FromJSON(json: any): FundingV30Rc1 {\n    return FundingV30Rc1FromJSONTyped(json, false);\n}\n\nexport function FundingV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'type': json['type'],\n        'organizationDefinedType': !exists(json, 'organization-defined-type') ? undefined : OrganizationDefinedFundingSubTypeV30Rc1FromJSON(json['organization-defined-type']),\n        'title': FundingTitleV30Rc1FromJSON(json['title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'amount': !exists(json, 'amount') ? undefined : AmountV30Rc1FromJSON(json['amount']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'contributors': !exists(json, 'contributors') ? undefined : FundingContributorsV30Rc1FromJSON(json['contributors']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function FundingV30Rc1ToJSON(value?: FundingV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'type': value.type,\n        'organization-defined-type': OrganizationDefinedFundingSubTypeV30Rc1ToJSON(value.organizationDefinedType),\n        'title': FundingTitleV30Rc1ToJSON(value.title),\n        'short-description': value.shortDescription,\n        'amount': AmountV30Rc1ToJSON(value.amount),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'contributors': FundingContributorsV30Rc1ToJSON(value.contributors),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AmountV30Rc2,\n    AmountV30Rc2FromJSON,\n    AmountV30Rc2FromJSONTyped,\n    AmountV30Rc2ToJSON,\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FundingContributorsV30Rc2,\n    FundingContributorsV30Rc2FromJSON,\n    FundingContributorsV30Rc2FromJSONTyped,\n    FundingContributorsV30Rc2ToJSON,\n    FundingTitleV30Rc2,\n    FundingTitleV30Rc2FromJSON,\n    FundingTitleV30Rc2FromJSONTyped,\n    FundingTitleV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationDefinedFundingSubTypeV30Rc2,\n    OrganizationDefinedFundingSubTypeV30Rc2FromJSON,\n    OrganizationDefinedFundingSubTypeV30Rc2FromJSONTyped,\n    OrganizationDefinedFundingSubTypeV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingV30Rc2\n */\nexport interface FundingV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof FundingV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc2\n     */\n    type: FundingV30Rc2TypeEnum;\n    /**\n     * \n     * @type {OrganizationDefinedFundingSubTypeV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    organizationDefinedType?: OrganizationDefinedFundingSubTypeV30Rc2;\n    /**\n     * \n     * @type {FundingTitleV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    title: FundingTitleV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc2\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {AmountV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    amount?: AmountV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {FundingContributorsV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    contributors?: FundingContributorsV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof FundingV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingV30Rc2\n     */\n    visibility?: FundingV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV30Rc2TypeEnum {\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum FundingV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function FundingV30Rc2FromJSON(json: any): FundingV30Rc2 {\n    return FundingV30Rc2FromJSONTyped(json, false);\n}\n\nexport function FundingV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'type': json['type'],\n        'organizationDefinedType': !exists(json, 'organization-defined-type') ? undefined : OrganizationDefinedFundingSubTypeV30Rc2FromJSON(json['organization-defined-type']),\n        'title': FundingTitleV30Rc2FromJSON(json['title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'amount': !exists(json, 'amount') ? undefined : AmountV30Rc2FromJSON(json['amount']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'contributors': !exists(json, 'contributors') ? undefined : FundingContributorsV30Rc2FromJSON(json['contributors']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function FundingV30Rc2ToJSON(value?: FundingV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'type': value.type,\n        'organization-defined-type': OrganizationDefinedFundingSubTypeV30Rc2ToJSON(value.organizationDefinedType),\n        'title': FundingTitleV30Rc2ToJSON(value.title),\n        'short-description': value.shortDescription,\n        'amount': AmountV30Rc2ToJSON(value.amount),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'contributors': FundingContributorsV30Rc2ToJSON(value.contributors),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CompletionDateV20,\n    CompletionDateV20FromJSON,\n    CompletionDateV20FromJSONTyped,\n    CompletionDateV20ToJSON,\n    DeactivationDateV20,\n    DeactivationDateV20FromJSON,\n    DeactivationDateV20FromJSONTyped,\n    DeactivationDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    SubmissionDateV20,\n    SubmissionDateV20FromJSON,\n    SubmissionDateV20FromJSONTyped,\n    SubmissionDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface HistoryV20\n */\nexport interface HistoryV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof HistoryV20\n     */\n    creationMethod?: HistoryV20CreationMethodEnum;\n    /**\n     * \n     * @type {CompletionDateV20}\n     * @memberof HistoryV20\n     */\n    completionDate?: CompletionDateV20;\n    /**\n     * \n     * @type {SubmissionDateV20}\n     * @memberof HistoryV20\n     */\n    submissionDate?: SubmissionDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof HistoryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV20\n     */\n    claimed?: boolean;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof HistoryV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {DeactivationDateV20}\n     * @memberof HistoryV20\n     */\n    deactivationDate?: DeactivationDateV20;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV20\n     */\n    verifiedEmail?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV20\n     */\n    verifiedPrimaryEmail?: boolean;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum HistoryV20CreationMethodEnum {\n    Api = 'API',\n    Direct = 'DIRECT',\n    MemberReferred = 'MEMBER_REFERRED',\n    Website = 'WEBSITE',\n    IntegrationTest = 'INTEGRATION_TEST'\n}\n\nexport function HistoryV20FromJSON(json: any): HistoryV20 {\n    return HistoryV20FromJSONTyped(json, false);\n}\n\nexport function HistoryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'creationMethod': !exists(json, 'creation-method') ? undefined : json['creation-method'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : CompletionDateV20FromJSON(json['completion-date']),\n        'submissionDate': !exists(json, 'submission-date') ? undefined : SubmissionDateV20FromJSON(json['submission-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'claimed': !exists(json, 'claimed') ? undefined : json['claimed'],\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'deactivationDate': !exists(json, 'deactivation-date') ? undefined : DeactivationDateV20FromJSON(json['deactivation-date']),\n        'verifiedEmail': !exists(json, 'verified-email') ? undefined : json['verified-email'],\n        'verifiedPrimaryEmail': !exists(json, 'verified-primary-email') ? undefined : json['verified-primary-email'],\n    };\n}\n\nexport function HistoryV20ToJSON(value?: HistoryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'creation-method': value.creationMethod,\n        'completion-date': CompletionDateV20ToJSON(value.completionDate),\n        'submission-date': SubmissionDateV20ToJSON(value.submissionDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'claimed': value.claimed,\n        'source': SourceV20ToJSON(value.source),\n        'deactivation-date': DeactivationDateV20ToJSON(value.deactivationDate),\n        'verified-email': value.verifiedEmail,\n        'verified-primary-email': value.verifiedPrimaryEmail,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CompletionDateV30,\n    CompletionDateV30FromJSON,\n    CompletionDateV30FromJSONTyped,\n    CompletionDateV30ToJSON,\n    DeactivationDateV30,\n    DeactivationDateV30FromJSON,\n    DeactivationDateV30FromJSONTyped,\n    DeactivationDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    SubmissionDateV30,\n    SubmissionDateV30FromJSON,\n    SubmissionDateV30FromJSONTyped,\n    SubmissionDateV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface HistoryV30\n */\nexport interface HistoryV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof HistoryV30\n     */\n    creationMethod?: HistoryV30CreationMethodEnum;\n    /**\n     * \n     * @type {CompletionDateV30}\n     * @memberof HistoryV30\n     */\n    completionDate?: CompletionDateV30;\n    /**\n     * \n     * @type {SubmissionDateV30}\n     * @memberof HistoryV30\n     */\n    submissionDate?: SubmissionDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof HistoryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30\n     */\n    claimed?: boolean;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof HistoryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {DeactivationDateV30}\n     * @memberof HistoryV30\n     */\n    deactivationDate?: DeactivationDateV30;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30\n     */\n    verifiedEmail?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30\n     */\n    verifiedPrimaryEmail?: boolean;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum HistoryV30CreationMethodEnum {\n    Api = 'API',\n    Direct = 'DIRECT',\n    MemberReferred = 'MEMBER_REFERRED',\n    Website = 'WEBSITE',\n    IntegrationTest = 'INTEGRATION_TEST'\n}\n\nexport function HistoryV30FromJSON(json: any): HistoryV30 {\n    return HistoryV30FromJSONTyped(json, false);\n}\n\nexport function HistoryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'creationMethod': !exists(json, 'creation-method') ? undefined : json['creation-method'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : CompletionDateV30FromJSON(json['completion-date']),\n        'submissionDate': !exists(json, 'submission-date') ? undefined : SubmissionDateV30FromJSON(json['submission-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'claimed': !exists(json, 'claimed') ? undefined : json['claimed'],\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'deactivationDate': !exists(json, 'deactivation-date') ? undefined : DeactivationDateV30FromJSON(json['deactivation-date']),\n        'verifiedEmail': !exists(json, 'verified-email') ? undefined : json['verified-email'],\n        'verifiedPrimaryEmail': !exists(json, 'verified-primary-email') ? undefined : json['verified-primary-email'],\n    };\n}\n\nexport function HistoryV30ToJSON(value?: HistoryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'creation-method': value.creationMethod,\n        'completion-date': CompletionDateV30ToJSON(value.completionDate),\n        'submission-date': SubmissionDateV30ToJSON(value.submissionDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'claimed': value.claimed,\n        'source': SourceV30ToJSON(value.source),\n        'deactivation-date': DeactivationDateV30ToJSON(value.deactivationDate),\n        'verified-email': value.verifiedEmail,\n        'verified-primary-email': value.verifiedPrimaryEmail,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CompletionDateV30Rc1,\n    CompletionDateV30Rc1FromJSON,\n    CompletionDateV30Rc1FromJSONTyped,\n    CompletionDateV30Rc1ToJSON,\n    DeactivationDateV30Rc1,\n    DeactivationDateV30Rc1FromJSON,\n    DeactivationDateV30Rc1FromJSONTyped,\n    DeactivationDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    SubmissionDateV30Rc1,\n    SubmissionDateV30Rc1FromJSON,\n    SubmissionDateV30Rc1FromJSONTyped,\n    SubmissionDateV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface HistoryV30Rc1\n */\nexport interface HistoryV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof HistoryV30Rc1\n     */\n    creationMethod?: HistoryV30Rc1CreationMethodEnum;\n    /**\n     * \n     * @type {CompletionDateV30Rc1}\n     * @memberof HistoryV30Rc1\n     */\n    completionDate?: CompletionDateV30Rc1;\n    /**\n     * \n     * @type {SubmissionDateV30Rc1}\n     * @memberof HistoryV30Rc1\n     */\n    submissionDate?: SubmissionDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof HistoryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30Rc1\n     */\n    claimed?: boolean;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof HistoryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {DeactivationDateV30Rc1}\n     * @memberof HistoryV30Rc1\n     */\n    deactivationDate?: DeactivationDateV30Rc1;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30Rc1\n     */\n    verifiedEmail?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30Rc1\n     */\n    verifiedPrimaryEmail?: boolean;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum HistoryV30Rc1CreationMethodEnum {\n    Api = 'API',\n    Direct = 'DIRECT',\n    MemberReferred = 'MEMBER_REFERRED',\n    Website = 'WEBSITE',\n    IntegrationTest = 'INTEGRATION_TEST'\n}\n\nexport function HistoryV30Rc1FromJSON(json: any): HistoryV30Rc1 {\n    return HistoryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function HistoryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'creationMethod': !exists(json, 'creation-method') ? undefined : json['creation-method'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : CompletionDateV30Rc1FromJSON(json['completion-date']),\n        'submissionDate': !exists(json, 'submission-date') ? undefined : SubmissionDateV30Rc1FromJSON(json['submission-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'claimed': !exists(json, 'claimed') ? undefined : json['claimed'],\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'deactivationDate': !exists(json, 'deactivation-date') ? undefined : DeactivationDateV30Rc1FromJSON(json['deactivation-date']),\n        'verifiedEmail': !exists(json, 'verified-email') ? undefined : json['verified-email'],\n        'verifiedPrimaryEmail': !exists(json, 'verified-primary-email') ? undefined : json['verified-primary-email'],\n    };\n}\n\nexport function HistoryV30Rc1ToJSON(value?: HistoryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'creation-method': value.creationMethod,\n        'completion-date': CompletionDateV30Rc1ToJSON(value.completionDate),\n        'submission-date': SubmissionDateV30Rc1ToJSON(value.submissionDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'claimed': value.claimed,\n        'source': SourceV30Rc1ToJSON(value.source),\n        'deactivation-date': DeactivationDateV30Rc1ToJSON(value.deactivationDate),\n        'verified-email': value.verifiedEmail,\n        'verified-primary-email': value.verifiedPrimaryEmail,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CompletionDateV30Rc2,\n    CompletionDateV30Rc2FromJSON,\n    CompletionDateV30Rc2FromJSONTyped,\n    CompletionDateV30Rc2ToJSON,\n    DeactivationDateV30Rc2,\n    DeactivationDateV30Rc2FromJSON,\n    DeactivationDateV30Rc2FromJSONTyped,\n    DeactivationDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    SubmissionDateV30Rc2,\n    SubmissionDateV30Rc2FromJSON,\n    SubmissionDateV30Rc2FromJSONTyped,\n    SubmissionDateV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface HistoryV30Rc2\n */\nexport interface HistoryV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof HistoryV30Rc2\n     */\n    creationMethod?: HistoryV30Rc2CreationMethodEnum;\n    /**\n     * \n     * @type {CompletionDateV30Rc2}\n     * @memberof HistoryV30Rc2\n     */\n    completionDate?: CompletionDateV30Rc2;\n    /**\n     * \n     * @type {SubmissionDateV30Rc2}\n     * @memberof HistoryV30Rc2\n     */\n    submissionDate?: SubmissionDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof HistoryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30Rc2\n     */\n    claimed?: boolean;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof HistoryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {DeactivationDateV30Rc2}\n     * @memberof HistoryV30Rc2\n     */\n    deactivationDate?: DeactivationDateV30Rc2;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30Rc2\n     */\n    verifiedEmail?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof HistoryV30Rc2\n     */\n    verifiedPrimaryEmail?: boolean;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum HistoryV30Rc2CreationMethodEnum {\n    Api = 'API',\n    Direct = 'DIRECT',\n    MemberReferred = 'MEMBER_REFERRED',\n    Website = 'WEBSITE',\n    IntegrationTest = 'INTEGRATION_TEST'\n}\n\nexport function HistoryV30Rc2FromJSON(json: any): HistoryV30Rc2 {\n    return HistoryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function HistoryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'creationMethod': !exists(json, 'creation-method') ? undefined : json['creation-method'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : CompletionDateV30Rc2FromJSON(json['completion-date']),\n        'submissionDate': !exists(json, 'submission-date') ? undefined : SubmissionDateV30Rc2FromJSON(json['submission-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'claimed': !exists(json, 'claimed') ? undefined : json['claimed'],\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'deactivationDate': !exists(json, 'deactivation-date') ? undefined : DeactivationDateV30Rc2FromJSON(json['deactivation-date']),\n        'verifiedEmail': !exists(json, 'verified-email') ? undefined : json['verified-email'],\n        'verifiedPrimaryEmail': !exists(json, 'verified-primary-email') ? undefined : json['verified-primary-email'],\n    };\n}\n\nexport function HistoryV30Rc2ToJSON(value?: HistoryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'creation-method': value.creationMethod,\n        'completion-date': CompletionDateV30Rc2ToJSON(value.completionDate),\n        'submission-date': SubmissionDateV30Rc2ToJSON(value.submissionDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'claimed': value.claimed,\n        'source': SourceV30Rc2ToJSON(value.source),\n        'deactivation-date': DeactivationDateV30Rc2ToJSON(value.deactivationDate),\n        'verified-email': value.verifiedEmail,\n        'verified-primary-email': value.verifiedPrimaryEmail,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface InvitedPositionSummaryV30\n */\nexport interface InvitedPositionSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof InvitedPositionSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof InvitedPositionSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30\n     */\n    visibility?: InvitedPositionSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InvitedPositionSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function InvitedPositionSummaryV30FromJSON(json: any): InvitedPositionSummaryV30 {\n    return InvitedPositionSummaryV30FromJSONTyped(json, false);\n}\n\nexport function InvitedPositionSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitedPositionSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function InvitedPositionSummaryV30ToJSON(value?: InvitedPositionSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface InvitedPositionSummaryV30Rc1\n */\nexport interface InvitedPositionSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    visibility?: InvitedPositionSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InvitedPositionSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function InvitedPositionSummaryV30Rc1FromJSON(json: any): InvitedPositionSummaryV30Rc1 {\n    return InvitedPositionSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function InvitedPositionSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitedPositionSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function InvitedPositionSummaryV30Rc1ToJSON(value?: InvitedPositionSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface InvitedPositionSummaryV30Rc2\n */\nexport interface InvitedPositionSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    visibility?: InvitedPositionSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InvitedPositionSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function InvitedPositionSummaryV30Rc2FromJSON(json: any): InvitedPositionSummaryV30Rc2 {\n    return InvitedPositionSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function InvitedPositionSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitedPositionSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function InvitedPositionSummaryV30Rc2ToJSON(value?: InvitedPositionSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface InvitedPositionV30\n */\nexport interface InvitedPositionV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof InvitedPositionV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof InvitedPositionV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof InvitedPositionV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof InvitedPositionV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof InvitedPositionV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof InvitedPositionV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof InvitedPositionV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof InvitedPositionV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof InvitedPositionV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30\n     */\n    visibility?: InvitedPositionV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InvitedPositionV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function InvitedPositionV30FromJSON(json: any): InvitedPositionV30 {\n    return InvitedPositionV30FromJSONTyped(json, false);\n}\n\nexport function InvitedPositionV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitedPositionV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function InvitedPositionV30ToJSON(value?: InvitedPositionV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface InvitedPositionV30Rc1\n */\nexport interface InvitedPositionV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof InvitedPositionV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof InvitedPositionV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc1\n     */\n    visibility?: InvitedPositionV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InvitedPositionV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function InvitedPositionV30Rc1FromJSON(json: any): InvitedPositionV30Rc1 {\n    return InvitedPositionV30Rc1FromJSONTyped(json, false);\n}\n\nexport function InvitedPositionV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitedPositionV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function InvitedPositionV30Rc1ToJSON(value?: InvitedPositionV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface InvitedPositionV30Rc2\n */\nexport interface InvitedPositionV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof InvitedPositionV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof InvitedPositionV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvitedPositionV30Rc2\n     */\n    visibility?: InvitedPositionV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum InvitedPositionV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function InvitedPositionV30Rc2FromJSON(json: any): InvitedPositionV30Rc2 {\n    return InvitedPositionV30Rc2FromJSONTyped(json, false);\n}\n\nexport function InvitedPositionV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvitedPositionV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function InvitedPositionV30Rc2ToJSON(value?: InvitedPositionV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface KeywordV20\n */\nexport interface KeywordV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof KeywordV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof KeywordV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof KeywordV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV20\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV20\n     */\n    visibility?: KeywordV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV20\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum KeywordV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function KeywordV20FromJSON(json: any): KeywordV20 {\n    return KeywordV20FromJSONTyped(json, false);\n}\n\nexport function KeywordV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function KeywordV20ToJSON(value?: KeywordV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface KeywordV30\n */\nexport interface KeywordV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof KeywordV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof KeywordV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof KeywordV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30\n     */\n    visibility?: KeywordV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV30\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum KeywordV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function KeywordV30FromJSON(json: any): KeywordV30 {\n    return KeywordV30FromJSONTyped(json, false);\n}\n\nexport function KeywordV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function KeywordV30ToJSON(value?: KeywordV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface KeywordV30Rc1\n */\nexport interface KeywordV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof KeywordV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof KeywordV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof KeywordV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30Rc1\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30Rc1\n     */\n    visibility?: KeywordV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV30Rc1\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum KeywordV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function KeywordV30Rc1FromJSON(json: any): KeywordV30Rc1 {\n    return KeywordV30Rc1FromJSONTyped(json, false);\n}\n\nexport function KeywordV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function KeywordV30Rc1ToJSON(value?: KeywordV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface KeywordV30Rc2\n */\nexport interface KeywordV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof KeywordV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof KeywordV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof KeywordV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30Rc2\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30Rc2\n     */\n    visibility?: KeywordV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof KeywordV30Rc2\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum KeywordV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function KeywordV30Rc2FromJSON(json: any): KeywordV30Rc2 {\n    return KeywordV30Rc2FromJSONTyped(json, false);\n}\n\nexport function KeywordV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function KeywordV30Rc2ToJSON(value?: KeywordV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface MembershipSummaryV30\n */\nexport interface MembershipSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof MembershipSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof MembershipSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof MembershipSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof MembershipSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof MembershipSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof MembershipSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof MembershipSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof MembershipSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof MembershipSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30\n     */\n    visibility?: MembershipSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum MembershipSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function MembershipSummaryV30FromJSON(json: any): MembershipSummaryV30 {\n    return MembershipSummaryV30FromJSONTyped(json, false);\n}\n\nexport function MembershipSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function MembershipSummaryV30ToJSON(value?: MembershipSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface MembershipSummaryV30Rc1\n */\nexport interface MembershipSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    visibility?: MembershipSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum MembershipSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function MembershipSummaryV30Rc1FromJSON(json: any): MembershipSummaryV30Rc1 {\n    return MembershipSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function MembershipSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function MembershipSummaryV30Rc1ToJSON(value?: MembershipSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface MembershipSummaryV30Rc2\n */\nexport interface MembershipSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    visibility?: MembershipSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum MembershipSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function MembershipSummaryV30Rc2FromJSON(json: any): MembershipSummaryV30Rc2 {\n    return MembershipSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function MembershipSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function MembershipSummaryV30Rc2ToJSON(value?: MembershipSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface MembershipV30\n */\nexport interface MembershipV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof MembershipV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof MembershipV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof MembershipV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof MembershipV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof MembershipV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof MembershipV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof MembershipV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof MembershipV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof MembershipV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30\n     */\n    visibility?: MembershipV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum MembershipV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function MembershipV30FromJSON(json: any): MembershipV30 {\n    return MembershipV30FromJSONTyped(json, false);\n}\n\nexport function MembershipV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function MembershipV30ToJSON(value?: MembershipV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface MembershipV30Rc1\n */\nexport interface MembershipV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof MembershipV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof MembershipV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc1\n     */\n    visibility?: MembershipV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum MembershipV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function MembershipV30Rc1FromJSON(json: any): MembershipV30Rc1 {\n    return MembershipV30Rc1FromJSONTyped(json, false);\n}\n\nexport function MembershipV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function MembershipV30Rc1ToJSON(value?: MembershipV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface MembershipV30Rc2\n */\nexport interface MembershipV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof MembershipV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof MembershipV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MembershipV30Rc2\n     */\n    visibility?: MembershipV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum MembershipV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function MembershipV30Rc2FromJSON(json: any): MembershipV30Rc2 {\n    return MembershipV30Rc2FromJSONTyped(json, false);\n}\n\nexport function MembershipV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function MembershipV30Rc2ToJSON(value?: MembershipV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    CreditNameV20,\n    CreditNameV20FromJSON,\n    CreditNameV20FromJSONTyped,\n    CreditNameV20ToJSON,\n    FamilyNameV20,\n    FamilyNameV20FromJSON,\n    FamilyNameV20FromJSONTyped,\n    FamilyNameV20ToJSON,\n    GivenNamesV20,\n    GivenNamesV20FromJSON,\n    GivenNamesV20FromJSONTyped,\n    GivenNamesV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface NameV20\n */\nexport interface NameV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof NameV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof NameV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {GivenNamesV20}\n     * @memberof NameV20\n     */\n    givenNames?: GivenNamesV20;\n    /**\n     * \n     * @type {FamilyNameV20}\n     * @memberof NameV20\n     */\n    familyName?: FamilyNameV20;\n    /**\n     * \n     * @type {CreditNameV20}\n     * @memberof NameV20\n     */\n    creditName?: CreditNameV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof NameV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV20\n     */\n    visibility?: NameV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV20\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum NameV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function NameV20FromJSON(json: any): NameV20 {\n    return NameV20FromJSONTyped(json, false);\n}\n\nexport function NameV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): NameV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'givenNames': !exists(json, 'given-names') ? undefined : GivenNamesV20FromJSON(json['given-names']),\n        'familyName': !exists(json, 'family-name') ? undefined : FamilyNameV20FromJSON(json['family-name']),\n        'creditName': !exists(json, 'credit-name') ? undefined : CreditNameV20FromJSON(json['credit-name']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function NameV20ToJSON(value?: NameV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'given-names': GivenNamesV20ToJSON(value.givenNames),\n        'family-name': FamilyNameV20ToJSON(value.familyName),\n        'credit-name': CreditNameV20ToJSON(value.creditName),\n        'source': SourceV20ToJSON(value.source),\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    CreditNameV30,\n    CreditNameV30FromJSON,\n    CreditNameV30FromJSONTyped,\n    CreditNameV30ToJSON,\n    FamilyNameV30,\n    FamilyNameV30FromJSON,\n    FamilyNameV30FromJSONTyped,\n    FamilyNameV30ToJSON,\n    GivenNamesV30,\n    GivenNamesV30FromJSON,\n    GivenNamesV30FromJSONTyped,\n    GivenNamesV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface NameV30\n */\nexport interface NameV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof NameV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof NameV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {GivenNamesV30}\n     * @memberof NameV30\n     */\n    givenNames?: GivenNamesV30;\n    /**\n     * \n     * @type {FamilyNameV30}\n     * @memberof NameV30\n     */\n    familyName?: FamilyNameV30;\n    /**\n     * \n     * @type {CreditNameV30}\n     * @memberof NameV30\n     */\n    creditName?: CreditNameV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof NameV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV30\n     */\n    visibility?: NameV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum NameV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function NameV30FromJSON(json: any): NameV30 {\n    return NameV30FromJSONTyped(json, false);\n}\n\nexport function NameV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): NameV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'givenNames': !exists(json, 'given-names') ? undefined : GivenNamesV30FromJSON(json['given-names']),\n        'familyName': !exists(json, 'family-name') ? undefined : FamilyNameV30FromJSON(json['family-name']),\n        'creditName': !exists(json, 'credit-name') ? undefined : CreditNameV30FromJSON(json['credit-name']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function NameV30ToJSON(value?: NameV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'given-names': GivenNamesV30ToJSON(value.givenNames),\n        'family-name': FamilyNameV30ToJSON(value.familyName),\n        'credit-name': CreditNameV30ToJSON(value.creditName),\n        'source': SourceV30ToJSON(value.source),\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    CreditNameV30Rc1,\n    CreditNameV30Rc1FromJSON,\n    CreditNameV30Rc1FromJSONTyped,\n    CreditNameV30Rc1ToJSON,\n    FamilyNameV30Rc1,\n    FamilyNameV30Rc1FromJSON,\n    FamilyNameV30Rc1FromJSONTyped,\n    FamilyNameV30Rc1ToJSON,\n    GivenNamesV30Rc1,\n    GivenNamesV30Rc1FromJSON,\n    GivenNamesV30Rc1FromJSONTyped,\n    GivenNamesV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface NameV30Rc1\n */\nexport interface NameV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof NameV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof NameV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {GivenNamesV30Rc1}\n     * @memberof NameV30Rc1\n     */\n    givenNames?: GivenNamesV30Rc1;\n    /**\n     * \n     * @type {FamilyNameV30Rc1}\n     * @memberof NameV30Rc1\n     */\n    familyName?: FamilyNameV30Rc1;\n    /**\n     * \n     * @type {CreditNameV30Rc1}\n     * @memberof NameV30Rc1\n     */\n    creditName?: CreditNameV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof NameV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV30Rc1\n     */\n    visibility?: NameV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum NameV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function NameV30Rc1FromJSON(json: any): NameV30Rc1 {\n    return NameV30Rc1FromJSONTyped(json, false);\n}\n\nexport function NameV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): NameV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'givenNames': !exists(json, 'given-names') ? undefined : GivenNamesV30Rc1FromJSON(json['given-names']),\n        'familyName': !exists(json, 'family-name') ? undefined : FamilyNameV30Rc1FromJSON(json['family-name']),\n        'creditName': !exists(json, 'credit-name') ? undefined : CreditNameV30Rc1FromJSON(json['credit-name']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function NameV30Rc1ToJSON(value?: NameV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'given-names': GivenNamesV30Rc1ToJSON(value.givenNames),\n        'family-name': FamilyNameV30Rc1ToJSON(value.familyName),\n        'credit-name': CreditNameV30Rc1ToJSON(value.creditName),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    CreditNameV30Rc2,\n    CreditNameV30Rc2FromJSON,\n    CreditNameV30Rc2FromJSONTyped,\n    CreditNameV30Rc2ToJSON,\n    FamilyNameV30Rc2,\n    FamilyNameV30Rc2FromJSON,\n    FamilyNameV30Rc2FromJSONTyped,\n    FamilyNameV30Rc2ToJSON,\n    GivenNamesV30Rc2,\n    GivenNamesV30Rc2FromJSON,\n    GivenNamesV30Rc2FromJSONTyped,\n    GivenNamesV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface NameV30Rc2\n */\nexport interface NameV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof NameV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof NameV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {GivenNamesV30Rc2}\n     * @memberof NameV30Rc2\n     */\n    givenNames?: GivenNamesV30Rc2;\n    /**\n     * \n     * @type {FamilyNameV30Rc2}\n     * @memberof NameV30Rc2\n     */\n    familyName?: FamilyNameV30Rc2;\n    /**\n     * \n     * @type {CreditNameV30Rc2}\n     * @memberof NameV30Rc2\n     */\n    creditName?: CreditNameV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof NameV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV30Rc2\n     */\n    visibility?: NameV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof NameV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum NameV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function NameV30Rc2FromJSON(json: any): NameV30Rc2 {\n    return NameV30Rc2FromJSONTyped(json, false);\n}\n\nexport function NameV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): NameV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'givenNames': !exists(json, 'given-names') ? undefined : GivenNamesV30Rc2FromJSON(json['given-names']),\n        'familyName': !exists(json, 'family-name') ? undefined : FamilyNameV30Rc2FromJSON(json['family-name']),\n        'creditName': !exists(json, 'credit-name') ? undefined : CreditNameV30Rc2FromJSON(json['credit-name']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function NameV30Rc2ToJSON(value?: NameV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'given-names': GivenNamesV30Rc2ToJSON(value.givenNames),\n        'family-name': FamilyNameV30Rc2ToJSON(value.familyName),\n        'credit-name': CreditNameV30Rc2ToJSON(value.creditName),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrganizationAddressV20\n */\nexport interface OrganizationAddressV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV20\n     */\n    city: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV20\n     */\n    region?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV20\n     */\n    country: OrganizationAddressV20CountryEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OrganizationAddressV20CountryEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function OrganizationAddressV20FromJSON(json: any): OrganizationAddressV20 {\n    return OrganizationAddressV20FromJSONTyped(json, false);\n}\n\nexport function OrganizationAddressV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationAddressV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'city': json['city'],\n        'region': !exists(json, 'region') ? undefined : json['region'],\n        'country': json['country'],\n    };\n}\n\nexport function OrganizationAddressV20ToJSON(value?: OrganizationAddressV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'city': value.city,\n        'region': value.region,\n        'country': value.country,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrganizationAddressV30\n */\nexport interface OrganizationAddressV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30\n     */\n    city: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30\n     */\n    region?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30\n     */\n    country: OrganizationAddressV30CountryEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OrganizationAddressV30CountryEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function OrganizationAddressV30FromJSON(json: any): OrganizationAddressV30 {\n    return OrganizationAddressV30FromJSONTyped(json, false);\n}\n\nexport function OrganizationAddressV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationAddressV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'city': json['city'],\n        'region': !exists(json, 'region') ? undefined : json['region'],\n        'country': json['country'],\n    };\n}\n\nexport function OrganizationAddressV30ToJSON(value?: OrganizationAddressV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'city': value.city,\n        'region': value.region,\n        'country': value.country,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrganizationAddressV30Rc1\n */\nexport interface OrganizationAddressV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30Rc1\n     */\n    city: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30Rc1\n     */\n    region?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30Rc1\n     */\n    country: OrganizationAddressV30Rc1CountryEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OrganizationAddressV30Rc1CountryEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function OrganizationAddressV30Rc1FromJSON(json: any): OrganizationAddressV30Rc1 {\n    return OrganizationAddressV30Rc1FromJSONTyped(json, false);\n}\n\nexport function OrganizationAddressV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationAddressV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'city': json['city'],\n        'region': !exists(json, 'region') ? undefined : json['region'],\n        'country': json['country'],\n    };\n}\n\nexport function OrganizationAddressV30Rc1ToJSON(value?: OrganizationAddressV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'city': value.city,\n        'region': value.region,\n        'country': value.country,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrganizationAddressV30Rc2\n */\nexport interface OrganizationAddressV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30Rc2\n     */\n    city: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30Rc2\n     */\n    region?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationAddressV30Rc2\n     */\n    country: OrganizationAddressV30Rc2CountryEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OrganizationAddressV30Rc2CountryEnum {\n    Af = 'AF',\n    Ax = 'AX',\n    Al = 'AL',\n    Dz = 'DZ',\n    As = 'AS',\n    Ad = 'AD',\n    Ao = 'AO',\n    Ai = 'AI',\n    Aq = 'AQ',\n    Ag = 'AG',\n    Ar = 'AR',\n    Am = 'AM',\n    Aw = 'AW',\n    Au = 'AU',\n    At = 'AT',\n    Az = 'AZ',\n    Bs = 'BS',\n    Bh = 'BH',\n    Bd = 'BD',\n    Bb = 'BB',\n    By = 'BY',\n    Be = 'BE',\n    Bz = 'BZ',\n    Bj = 'BJ',\n    Bm = 'BM',\n    Bt = 'BT',\n    Bo = 'BO',\n    Bq = 'BQ',\n    Ba = 'BA',\n    Bw = 'BW',\n    Bv = 'BV',\n    Br = 'BR',\n    Io = 'IO',\n    Bn = 'BN',\n    Bg = 'BG',\n    Bf = 'BF',\n    Bi = 'BI',\n    Kh = 'KH',\n    Cm = 'CM',\n    Ca = 'CA',\n    Cv = 'CV',\n    Ky = 'KY',\n    Cf = 'CF',\n    Td = 'TD',\n    Cl = 'CL',\n    Cn = 'CN',\n    Cx = 'CX',\n    Cc = 'CC',\n    Co = 'CO',\n    Km = 'KM',\n    Cg = 'CG',\n    Cd = 'CD',\n    Ck = 'CK',\n    Cr = 'CR',\n    Ci = 'CI',\n    Hr = 'HR',\n    Cu = 'CU',\n    Cw = 'CW',\n    Cy = 'CY',\n    Cz = 'CZ',\n    Dk = 'DK',\n    Dj = 'DJ',\n    Dm = 'DM',\n    Do = 'DO',\n    Ec = 'EC',\n    Eg = 'EG',\n    Sv = 'SV',\n    Gq = 'GQ',\n    Er = 'ER',\n    Ee = 'EE',\n    Et = 'ET',\n    Fk = 'FK',\n    Fo = 'FO',\n    Fj = 'FJ',\n    Fi = 'FI',\n    Fr = 'FR',\n    Gf = 'GF',\n    Pf = 'PF',\n    Tf = 'TF',\n    Ga = 'GA',\n    Gm = 'GM',\n    Ge = 'GE',\n    De = 'DE',\n    Gh = 'GH',\n    Gi = 'GI',\n    Gr = 'GR',\n    Gl = 'GL',\n    Gd = 'GD',\n    Gp = 'GP',\n    Gu = 'GU',\n    Gt = 'GT',\n    Gg = 'GG',\n    Gn = 'GN',\n    Gw = 'GW',\n    Gy = 'GY',\n    Ht = 'HT',\n    Hm = 'HM',\n    Va = 'VA',\n    Hn = 'HN',\n    Hk = 'HK',\n    Hu = 'HU',\n    Is = 'IS',\n    In = 'IN',\n    Id = 'ID',\n    Ir = 'IR',\n    Iq = 'IQ',\n    Ie = 'IE',\n    Im = 'IM',\n    Il = 'IL',\n    It = 'IT',\n    Jm = 'JM',\n    Jp = 'JP',\n    Je = 'JE',\n    Jo = 'JO',\n    Kz = 'KZ',\n    Ke = 'KE',\n    Ki = 'KI',\n    Kp = 'KP',\n    Kr = 'KR',\n    Kw = 'KW',\n    Kg = 'KG',\n    La = 'LA',\n    Lv = 'LV',\n    Lb = 'LB',\n    Ls = 'LS',\n    Lr = 'LR',\n    Ly = 'LY',\n    Li = 'LI',\n    Lt = 'LT',\n    Lu = 'LU',\n    Mo = 'MO',\n    Mk = 'MK',\n    Mg = 'MG',\n    Mw = 'MW',\n    My = 'MY',\n    Mv = 'MV',\n    Ml = 'ML',\n    Mt = 'MT',\n    Mh = 'MH',\n    Mq = 'MQ',\n    Mr = 'MR',\n    Mu = 'MU',\n    Yt = 'YT',\n    Mx = 'MX',\n    Fm = 'FM',\n    Md = 'MD',\n    Mc = 'MC',\n    Mn = 'MN',\n    Me = 'ME',\n    Ms = 'MS',\n    Ma = 'MA',\n    Mz = 'MZ',\n    Mm = 'MM',\n    Na = 'NA',\n    Nr = 'NR',\n    Np = 'NP',\n    Nl = 'NL',\n    Nc = 'NC',\n    Nz = 'NZ',\n    Ni = 'NI',\n    Ne = 'NE',\n    Ng = 'NG',\n    Nu = 'NU',\n    Nf = 'NF',\n    Mp = 'MP',\n    No = 'NO',\n    Om = 'OM',\n    Pk = 'PK',\n    Pw = 'PW',\n    Ps = 'PS',\n    Pa = 'PA',\n    Pg = 'PG',\n    Py = 'PY',\n    Pe = 'PE',\n    Ph = 'PH',\n    Pn = 'PN',\n    Pl = 'PL',\n    Pt = 'PT',\n    Pr = 'PR',\n    Qa = 'QA',\n    Re = 'RE',\n    Ro = 'RO',\n    Ru = 'RU',\n    Rw = 'RW',\n    Bl = 'BL',\n    Sh = 'SH',\n    Kn = 'KN',\n    Lc = 'LC',\n    Mf = 'MF',\n    Pm = 'PM',\n    Vc = 'VC',\n    Ws = 'WS',\n    Sm = 'SM',\n    St = 'ST',\n    Sa = 'SA',\n    Sn = 'SN',\n    Rs = 'RS',\n    Sc = 'SC',\n    Sl = 'SL',\n    Sg = 'SG',\n    Sx = 'SX',\n    Sk = 'SK',\n    Si = 'SI',\n    Sb = 'SB',\n    So = 'SO',\n    Za = 'ZA',\n    Gs = 'GS',\n    Ss = 'SS',\n    Es = 'ES',\n    Lk = 'LK',\n    Sd = 'SD',\n    Sr = 'SR',\n    Sj = 'SJ',\n    Sz = 'SZ',\n    Se = 'SE',\n    Ch = 'CH',\n    Sy = 'SY',\n    Tj = 'TJ',\n    Tz = 'TZ',\n    Th = 'TH',\n    Tl = 'TL',\n    Tg = 'TG',\n    Tk = 'TK',\n    To = 'TO',\n    Tt = 'TT',\n    Tn = 'TN',\n    Tr = 'TR',\n    Tm = 'TM',\n    Tc = 'TC',\n    Tv = 'TV',\n    Ug = 'UG',\n    Ua = 'UA',\n    Ae = 'AE',\n    Gb = 'GB',\n    Us = 'US',\n    Um = 'UM',\n    Uy = 'UY',\n    Uz = 'UZ',\n    Vu = 'VU',\n    Ve = 'VE',\n    Vn = 'VN',\n    Vg = 'VG',\n    Vi = 'VI',\n    Wf = 'WF',\n    Eh = 'EH',\n    Ye = 'YE',\n    Zm = 'ZM',\n    Zw = 'ZW',\n    Tw = 'TW',\n    Xk = 'XK'\n}\n\nexport function OrganizationAddressV30Rc2FromJSON(json: any): OrganizationAddressV30Rc2 {\n    return OrganizationAddressV30Rc2FromJSONTyped(json, false);\n}\n\nexport function OrganizationAddressV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationAddressV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'city': json['city'],\n        'region': !exists(json, 'region') ? undefined : json['region'],\n        'country': json['country'],\n    };\n}\n\nexport function OrganizationAddressV30Rc2ToJSON(value?: OrganizationAddressV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'city': value.city,\n        'region': value.region,\n        'country': value.country,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface OtherNameV20\n */\nexport interface OtherNameV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof OtherNameV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof OtherNameV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof OtherNameV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV20\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV20\n     */\n    visibility?: OtherNameV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV20\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OtherNameV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function OtherNameV20FromJSON(json: any): OtherNameV20 {\n    return OtherNameV20FromJSONTyped(json, false);\n}\n\nexport function OtherNameV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherNameV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function OtherNameV20ToJSON(value?: OtherNameV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface OtherNameV30\n */\nexport interface OtherNameV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof OtherNameV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof OtherNameV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof OtherNameV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30\n     */\n    visibility?: OtherNameV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV30\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OtherNameV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function OtherNameV30FromJSON(json: any): OtherNameV30 {\n    return OtherNameV30FromJSONTyped(json, false);\n}\n\nexport function OtherNameV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherNameV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function OtherNameV30ToJSON(value?: OtherNameV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface OtherNameV30Rc1\n */\nexport interface OtherNameV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof OtherNameV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof OtherNameV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof OtherNameV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30Rc1\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30Rc1\n     */\n    visibility?: OtherNameV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV30Rc1\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OtherNameV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function OtherNameV30Rc1FromJSON(json: any): OtherNameV30Rc1 {\n    return OtherNameV30Rc1FromJSONTyped(json, false);\n}\n\nexport function OtherNameV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherNameV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function OtherNameV30Rc1ToJSON(value?: OtherNameV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface OtherNameV30Rc2\n */\nexport interface OtherNameV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof OtherNameV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof OtherNameV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof OtherNameV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30Rc2\n     */\n    content?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30Rc2\n     */\n    visibility?: OtherNameV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNameV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OtherNameV30Rc2\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum OtherNameV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function OtherNameV30Rc2FromJSON(json: any): OtherNameV30Rc2 {\n    return OtherNameV30Rc2FromJSONTyped(json, false);\n}\n\nexport function OtherNameV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherNameV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'content': !exists(json, 'content') ? undefined : json['content'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function OtherNameV30Rc2ToJSON(value?: OtherNameV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'content': value.content,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewSummaryV20\n */\nexport interface PeerReviewSummaryV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof PeerReviewSummaryV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PeerReviewSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof PeerReviewSummaryV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof PeerReviewSummaryV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof PeerReviewSummaryV20\n     */\n    completionDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV20\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof PeerReviewSummaryV20\n     */\n    conveningOrganization: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV20\n     */\n    visibility?: PeerReviewSummaryV20VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewSummaryV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV20\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewSummaryV20FromJSON(json: any): PeerReviewSummaryV20 {\n    return PeerReviewSummaryV20FromJSONTyped(json, false);\n}\n\nexport function PeerReviewSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'completionDate': !exists(json, 'completion-date') ? undefined : FuzzyDateV20FromJSON(json['completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'conveningOrganization': OrganizationV20FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PeerReviewSummaryV20ToJSON(value?: PeerReviewSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'completion-date': FuzzyDateV20ToJSON(value.completionDate),\n        'review-group-id': value.reviewGroupId,\n        'convening-organization': OrganizationV20ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewSummaryV30\n */\nexport interface PeerReviewSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30\n     */\n    reviewerRole?: PeerReviewSummaryV30ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    reviewUrl?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30\n     */\n    reviewType?: PeerReviewSummaryV30ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    completionDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof PeerReviewSummaryV30\n     */\n    conveningOrganization?: OrganizationV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30\n     */\n    visibility?: PeerReviewSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30ReviewerRoleEnum {\n    Reviewer = 'REVIEWER',\n    Editor = 'EDITOR',\n    Member = 'MEMBER',\n    Chair = 'CHAIR',\n    Organizer = 'ORGANIZER'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30ReviewTypeEnum {\n    Review = 'REVIEW',\n    Evaluation = 'EVALUATION'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewSummaryV30FromJSON(json: any): PeerReviewSummaryV30 {\n    return PeerReviewSummaryV30FromJSONTyped(json, false);\n}\n\nexport function PeerReviewSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV30FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : FuzzyDateV30FromJSON(json['completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'conveningOrganization': !exists(json, 'convening-organization') ? undefined : OrganizationV30FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PeerReviewSummaryV30ToJSON(value?: PeerReviewSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'review-url': UrlV30ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'completion-date': FuzzyDateV30ToJSON(value.completionDate),\n        'review-group-id': value.reviewGroupId,\n        'convening-organization': OrganizationV30ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewSummaryV30Rc1\n */\nexport interface PeerReviewSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    reviewerRole?: PeerReviewSummaryV30Rc1ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    reviewUrl?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    reviewType?: PeerReviewSummaryV30Rc1ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    completionDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    conveningOrganization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    visibility?: PeerReviewSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc1\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30Rc1ReviewerRoleEnum {\n    Reviewer = 'REVIEWER',\n    Editor = 'EDITOR',\n    Member = 'MEMBER',\n    Chair = 'CHAIR',\n    Organizer = 'ORGANIZER'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30Rc1ReviewTypeEnum {\n    Review = 'REVIEW',\n    Evaluation = 'EVALUATION'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewSummaryV30Rc1FromJSON(json: any): PeerReviewSummaryV30Rc1 {\n    return PeerReviewSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function PeerReviewSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV30Rc1FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'conveningOrganization': OrganizationV30Rc1FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PeerReviewSummaryV30Rc1ToJSON(value?: PeerReviewSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'review-url': UrlV30Rc1ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'completion-date': FuzzyDateV30Rc1ToJSON(value.completionDate),\n        'review-group-id': value.reviewGroupId,\n        'convening-organization': OrganizationV30Rc1ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewSummaryV30Rc2\n */\nexport interface PeerReviewSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    reviewerRole?: PeerReviewSummaryV30Rc2ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    reviewUrl?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    reviewType?: PeerReviewSummaryV30Rc2ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    completionDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    conveningOrganization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    visibility?: PeerReviewSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewSummaryV30Rc2\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30Rc2ReviewerRoleEnum {\n    Reviewer = 'REVIEWER',\n    Editor = 'EDITOR',\n    Member = 'MEMBER',\n    Chair = 'CHAIR',\n    Organizer = 'ORGANIZER'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30Rc2ReviewTypeEnum {\n    Review = 'REVIEW',\n    Evaluation = 'EVALUATION'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewSummaryV30Rc2FromJSON(json: any): PeerReviewSummaryV30Rc2 {\n    return PeerReviewSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function PeerReviewSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV30Rc2FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'completionDate': !exists(json, 'completion-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'conveningOrganization': OrganizationV30Rc2FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PeerReviewSummaryV30Rc2ToJSON(value?: PeerReviewSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'review-url': UrlV30Rc2ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'completion-date': FuzzyDateV30Rc2ToJSON(value.completionDate),\n        'review-group-id': value.reviewGroupId,\n        'convening-organization': OrganizationV30Rc2ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    ExternalIDV20,\n    ExternalIDV20FromJSON,\n    ExternalIDV20FromJSONTyped,\n    ExternalIDV20ToJSON,\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    FuzzyDateV20,\n    FuzzyDateV20FromJSON,\n    FuzzyDateV20FromJSONTyped,\n    FuzzyDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OrganizationV20,\n    OrganizationV20FromJSON,\n    OrganizationV20FromJSONTyped,\n    OrganizationV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    TitleV20,\n    TitleV20FromJSON,\n    TitleV20FromJSONTyped,\n    TitleV20ToJSON,\n    UrlV20,\n    UrlV20FromJSON,\n    UrlV20FromJSONTyped,\n    UrlV20ToJSON,\n    WorkTitleV20,\n    WorkTitleV20FromJSON,\n    WorkTitleV20FromJSONTyped,\n    WorkTitleV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewV20\n */\nexport interface PeerReviewV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof PeerReviewV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PeerReviewV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof PeerReviewV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV20\n     */\n    reviewerRole?: PeerReviewV20ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof PeerReviewV20\n     */\n    reviewIdentifiers?: ExternalIDsV20;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof PeerReviewV20\n     */\n    reviewUrl?: UrlV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV20\n     */\n    reviewType?: PeerReviewV20ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV20}\n     * @memberof PeerReviewV20\n     */\n    reviewCompletionDate?: FuzzyDateV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV20\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {ExternalIDV20}\n     * @memberof PeerReviewV20\n     */\n    subjectExternalIdentifier?: ExternalIDV20;\n    /**\n     * \n     * @type {TitleV20}\n     * @memberof PeerReviewV20\n     */\n    subjectContainerName?: TitleV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV20\n     */\n    subjectType?: PeerReviewV20SubjectTypeEnum;\n    /**\n     * \n     * @type {WorkTitleV20}\n     * @memberof PeerReviewV20\n     */\n    subjectName?: WorkTitleV20;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof PeerReviewV20\n     */\n    subjectUrl?: UrlV20;\n    /**\n     * \n     * @type {OrganizationV20}\n     * @memberof PeerReviewV20\n     */\n    conveningOrganization: OrganizationV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV20\n     */\n    visibility?: PeerReviewV20VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV20\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV20ReviewerRoleEnum {\n    Reviewer = 'REVIEWER',\n    Editor = 'EDITOR',\n    Member = 'MEMBER',\n    Chair = 'CHAIR',\n    Organizer = 'ORGANIZER'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV20ReviewTypeEnum {\n    Review = 'REVIEW',\n    Evaluation = 'EVALUATION'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV20SubjectTypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    Dissertation = 'DISSERTATION',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewV20FromJSON(json: any): PeerReviewV20 {\n    return PeerReviewV20FromJSONTyped(json, false);\n}\n\nexport function PeerReviewV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'reviewIdentifiers': !exists(json, 'review-identifiers') ? undefined : ExternalIDsV20FromJSON(json['review-identifiers']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV20FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'reviewCompletionDate': !exists(json, 'review-completion-date') ? undefined : FuzzyDateV20FromJSON(json['review-completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'subjectExternalIdentifier': !exists(json, 'subject-external-identifier') ? undefined : ExternalIDV20FromJSON(json['subject-external-identifier']),\n        'subjectContainerName': !exists(json, 'subject-container-name') ? undefined : TitleV20FromJSON(json['subject-container-name']),\n        'subjectType': !exists(json, 'subject-type') ? undefined : json['subject-type'],\n        'subjectName': !exists(json, 'subject-name') ? undefined : WorkTitleV20FromJSON(json['subject-name']),\n        'subjectUrl': !exists(json, 'subject-url') ? undefined : UrlV20FromJSON(json['subject-url']),\n        'conveningOrganization': OrganizationV20FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PeerReviewV20ToJSON(value?: PeerReviewV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'review-identifiers': ExternalIDsV20ToJSON(value.reviewIdentifiers),\n        'review-url': UrlV20ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'review-completion-date': FuzzyDateV20ToJSON(value.reviewCompletionDate),\n        'review-group-id': value.reviewGroupId,\n        'subject-external-identifier': ExternalIDV20ToJSON(value.subjectExternalIdentifier),\n        'subject-container-name': TitleV20ToJSON(value.subjectContainerName),\n        'subject-type': value.subjectType,\n        'subject-name': WorkTitleV20ToJSON(value.subjectName),\n        'subject-url': UrlV20ToJSON(value.subjectUrl),\n        'convening-organization': OrganizationV20ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDV30,\n    ExternalIDV30FromJSON,\n    ExternalIDV30FromJSONTyped,\n    ExternalIDV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    SubjectNameV30,\n    SubjectNameV30FromJSON,\n    SubjectNameV30FromJSONTyped,\n    SubjectNameV30ToJSON,\n    TitleV30,\n    TitleV30FromJSON,\n    TitleV30FromJSONTyped,\n    TitleV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewV30\n */\nexport interface PeerReviewV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof PeerReviewV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof PeerReviewV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof PeerReviewV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30\n     */\n    reviewerRole?: PeerReviewV30ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof PeerReviewV30\n     */\n    reviewIdentifiers?: ExternalIDsV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof PeerReviewV30\n     */\n    reviewUrl?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30\n     */\n    reviewType?: PeerReviewV30ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof PeerReviewV30\n     */\n    reviewCompletionDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {ExternalIDV30}\n     * @memberof PeerReviewV30\n     */\n    subjectExternalIdentifier?: ExternalIDV30;\n    /**\n     * \n     * @type {TitleV30}\n     * @memberof PeerReviewV30\n     */\n    subjectContainerName?: TitleV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30\n     */\n    subjectType?: PeerReviewV30SubjectTypeEnum;\n    /**\n     * \n     * @type {SubjectNameV30}\n     * @memberof PeerReviewV30\n     */\n    subjectName?: SubjectNameV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof PeerReviewV30\n     */\n    subjectUrl?: UrlV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof PeerReviewV30\n     */\n    conveningOrganization?: OrganizationV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30\n     */\n    visibility?: PeerReviewV30VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30ReviewerRoleEnum {\n    Reviewer = 'reviewer',\n    Editor = 'editor',\n    Member = 'member',\n    Chair = 'chair',\n    Organizer = 'organizer'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30ReviewTypeEnum {\n    Review = 'review',\n    Evaluation = 'evaluation'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30SubjectTypeEnum {\n    ArtisticPerformance = 'artistic-performance',\n    BookChapter = 'book-chapter',\n    BookReview = 'book-review',\n    Book = 'book',\n    ConferenceAbstract = 'conference-abstract',\n    ConferencePaper = 'conference-paper',\n    ConferencePoster = 'conference-poster',\n    DataSet = 'data-set',\n    DictionaryEntry = 'dictionary-entry',\n    Disclosure = 'disclosure',\n    DissertationThesis = 'dissertation-thesis',\n    EditedBook = 'edited-book',\n    EncyclopediaEntry = 'encyclopedia-entry',\n    Invention = 'invention',\n    JournalArticle = 'journal-article',\n    JournalIssue = 'journal-issue',\n    LectureSpeech = 'lecture-speech',\n    License = 'license',\n    MagazineArticle = 'magazine-article',\n    Manual = 'manual',\n    NewsletterArticle = 'newsletter-article',\n    NewspaperArticle = 'newspaper-article',\n    OnlineResource = 'online-resource',\n    Other = 'other',\n    Patent = 'patent',\n    RegisteredCopyright = 'registered-copyright',\n    Report = 'report',\n    ResearchTechnique = 'research-technique',\n    ResearchTool = 'research-tool',\n    Software = 'software',\n    SpinOffCompany = 'spin-off-company',\n    StandardsAndPolicy = 'standards-and-policy',\n    SupervisedStudentPublication = 'supervised-student-publication',\n    TechnicalStandard = 'technical-standard',\n    Test = 'test',\n    Trademark = 'trademark',\n    Translation = 'translation',\n    Website = 'website',\n    WorkingPaper = 'working-paper',\n    Grant = 'grant',\n    Contract = 'contract',\n    Award = 'award',\n    SalaryAward = 'salary-award',\n    ResearchResourceProposal = 'research-resource-proposal',\n    Undefined = 'undefined'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function PeerReviewV30FromJSON(json: any): PeerReviewV30 {\n    return PeerReviewV30FromJSONTyped(json, false);\n}\n\nexport function PeerReviewV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'reviewIdentifiers': !exists(json, 'review-identifiers') ? undefined : ExternalIDsV30FromJSON(json['review-identifiers']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV30FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'reviewCompletionDate': !exists(json, 'review-completion-date') ? undefined : FuzzyDateV30FromJSON(json['review-completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'subjectExternalIdentifier': !exists(json, 'subject-external-identifier') ? undefined : ExternalIDV30FromJSON(json['subject-external-identifier']),\n        'subjectContainerName': !exists(json, 'subject-container-name') ? undefined : TitleV30FromJSON(json['subject-container-name']),\n        'subjectType': !exists(json, 'subject-type') ? undefined : json['subject-type'],\n        'subjectName': !exists(json, 'subject-name') ? undefined : SubjectNameV30FromJSON(json['subject-name']),\n        'subjectUrl': !exists(json, 'subject-url') ? undefined : UrlV30FromJSON(json['subject-url']),\n        'conveningOrganization': !exists(json, 'convening-organization') ? undefined : OrganizationV30FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PeerReviewV30ToJSON(value?: PeerReviewV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'review-identifiers': ExternalIDsV30ToJSON(value.reviewIdentifiers),\n        'review-url': UrlV30ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'review-completion-date': FuzzyDateV30ToJSON(value.reviewCompletionDate),\n        'review-group-id': value.reviewGroupId,\n        'subject-external-identifier': ExternalIDV30ToJSON(value.subjectExternalIdentifier),\n        'subject-container-name': TitleV30ToJSON(value.subjectContainerName),\n        'subject-type': value.subjectType,\n        'subject-name': SubjectNameV30ToJSON(value.subjectName),\n        'subject-url': UrlV30ToJSON(value.subjectUrl),\n        'convening-organization': OrganizationV30ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDV30Rc1,\n    ExternalIDV30Rc1FromJSON,\n    ExternalIDV30Rc1FromJSONTyped,\n    ExternalIDV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    TitleV30Rc1,\n    TitleV30Rc1FromJSON,\n    TitleV30Rc1FromJSONTyped,\n    TitleV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n    WorkTitleV30Rc1,\n    WorkTitleV30Rc1FromJSON,\n    WorkTitleV30Rc1FromJSONTyped,\n    WorkTitleV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewV30Rc1\n */\nexport interface PeerReviewV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc1\n     */\n    reviewerRole?: PeerReviewV30Rc1ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    reviewIdentifiers?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    reviewUrl?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc1\n     */\n    reviewType?: PeerReviewV30Rc1ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    reviewCompletionDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc1\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {ExternalIDV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    subjectExternalIdentifier?: ExternalIDV30Rc1;\n    /**\n     * \n     * @type {TitleV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    subjectContainerName?: TitleV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc1\n     */\n    subjectType?: PeerReviewV30Rc1SubjectTypeEnum;\n    /**\n     * \n     * @type {WorkTitleV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    subjectName?: WorkTitleV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    subjectUrl?: UrlV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof PeerReviewV30Rc1\n     */\n    conveningOrganization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc1\n     */\n    visibility?: PeerReviewV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc1ReviewerRoleEnum {\n    Reviewer = 'REVIEWER',\n    Editor = 'EDITOR',\n    Member = 'MEMBER',\n    Chair = 'CHAIR',\n    Organizer = 'ORGANIZER'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc1ReviewTypeEnum {\n    Review = 'REVIEW',\n    Evaluation = 'EVALUATION'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc1SubjectTypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    Dissertation = 'DISSERTATION',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD',\n    ResearchResourceProposal = 'RESEARCH_RESOURCE_PROPOSAL',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewV30Rc1FromJSON(json: any): PeerReviewV30Rc1 {\n    return PeerReviewV30Rc1FromJSONTyped(json, false);\n}\n\nexport function PeerReviewV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'reviewIdentifiers': !exists(json, 'review-identifiers') ? undefined : ExternalIDsV30Rc1FromJSON(json['review-identifiers']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV30Rc1FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'reviewCompletionDate': !exists(json, 'review-completion-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['review-completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'subjectExternalIdentifier': !exists(json, 'subject-external-identifier') ? undefined : ExternalIDV30Rc1FromJSON(json['subject-external-identifier']),\n        'subjectContainerName': !exists(json, 'subject-container-name') ? undefined : TitleV30Rc1FromJSON(json['subject-container-name']),\n        'subjectType': !exists(json, 'subject-type') ? undefined : json['subject-type'],\n        'subjectName': !exists(json, 'subject-name') ? undefined : WorkTitleV30Rc1FromJSON(json['subject-name']),\n        'subjectUrl': !exists(json, 'subject-url') ? undefined : UrlV30Rc1FromJSON(json['subject-url']),\n        'conveningOrganization': OrganizationV30Rc1FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PeerReviewV30Rc1ToJSON(value?: PeerReviewV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'review-identifiers': ExternalIDsV30Rc1ToJSON(value.reviewIdentifiers),\n        'review-url': UrlV30Rc1ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'review-completion-date': FuzzyDateV30Rc1ToJSON(value.reviewCompletionDate),\n        'review-group-id': value.reviewGroupId,\n        'subject-external-identifier': ExternalIDV30Rc1ToJSON(value.subjectExternalIdentifier),\n        'subject-container-name': TitleV30Rc1ToJSON(value.subjectContainerName),\n        'subject-type': value.subjectType,\n        'subject-name': WorkTitleV30Rc1ToJSON(value.subjectName),\n        'subject-url': UrlV30Rc1ToJSON(value.subjectUrl),\n        'convening-organization': OrganizationV30Rc1ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDV30Rc2,\n    ExternalIDV30Rc2FromJSON,\n    ExternalIDV30Rc2FromJSONTyped,\n    ExternalIDV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    SubjectNameV30Rc2,\n    SubjectNameV30Rc2FromJSON,\n    SubjectNameV30Rc2FromJSONTyped,\n    SubjectNameV30Rc2ToJSON,\n    TitleV30Rc2,\n    TitleV30Rc2FromJSON,\n    TitleV30Rc2FromJSONTyped,\n    TitleV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewV30Rc2\n */\nexport interface PeerReviewV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc2\n     */\n    reviewerRole?: PeerReviewV30Rc2ReviewerRoleEnum;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    reviewIdentifiers?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    reviewUrl?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc2\n     */\n    reviewType?: PeerReviewV30Rc2ReviewTypeEnum;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    reviewCompletionDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc2\n     */\n    reviewGroupId: string;\n    /**\n     * \n     * @type {ExternalIDV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    subjectExternalIdentifier?: ExternalIDV30Rc2;\n    /**\n     * \n     * @type {TitleV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    subjectContainerName?: TitleV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc2\n     */\n    subjectType?: PeerReviewV30Rc2SubjectTypeEnum;\n    /**\n     * \n     * @type {SubjectNameV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    subjectName?: SubjectNameV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    subjectUrl?: UrlV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof PeerReviewV30Rc2\n     */\n    conveningOrganization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc2\n     */\n    visibility?: PeerReviewV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof PeerReviewV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc2ReviewerRoleEnum {\n    Reviewer = 'REVIEWER',\n    Editor = 'EDITOR',\n    Member = 'MEMBER',\n    Chair = 'CHAIR',\n    Organizer = 'ORGANIZER'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc2ReviewTypeEnum {\n    Review = 'REVIEW',\n    Evaluation = 'EVALUATION'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc2SubjectTypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    DissertationThesis = 'DISSERTATION_THESIS',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Grant = 'GRANT',\n    Contract = 'CONTRACT',\n    Award = 'AWARD',\n    SalaryAward = 'SALARY_AWARD',\n    ResearchResourceProposal = 'RESEARCH_RESOURCE_PROPOSAL',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PeerReviewV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PeerReviewV30Rc2FromJSON(json: any): PeerReviewV30Rc2 {\n    return PeerReviewV30Rc2FromJSONTyped(json, false);\n}\n\nexport function PeerReviewV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'reviewerRole': !exists(json, 'reviewer-role') ? undefined : json['reviewer-role'],\n        'reviewIdentifiers': !exists(json, 'review-identifiers') ? undefined : ExternalIDsV30Rc2FromJSON(json['review-identifiers']),\n        'reviewUrl': !exists(json, 'review-url') ? undefined : UrlV30Rc2FromJSON(json['review-url']),\n        'reviewType': !exists(json, 'review-type') ? undefined : json['review-type'],\n        'reviewCompletionDate': !exists(json, 'review-completion-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['review-completion-date']),\n        'reviewGroupId': json['review-group-id'],\n        'subjectExternalIdentifier': !exists(json, 'subject-external-identifier') ? undefined : ExternalIDV30Rc2FromJSON(json['subject-external-identifier']),\n        'subjectContainerName': !exists(json, 'subject-container-name') ? undefined : TitleV30Rc2FromJSON(json['subject-container-name']),\n        'subjectType': !exists(json, 'subject-type') ? undefined : json['subject-type'],\n        'subjectName': !exists(json, 'subject-name') ? undefined : SubjectNameV30Rc2FromJSON(json['subject-name']),\n        'subjectUrl': !exists(json, 'subject-url') ? undefined : UrlV30Rc2FromJSON(json['subject-url']),\n        'conveningOrganization': OrganizationV30Rc2FromJSON(json['convening-organization']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PeerReviewV30Rc2ToJSON(value?: PeerReviewV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'reviewer-role': value.reviewerRole,\n        'review-identifiers': ExternalIDsV30Rc2ToJSON(value.reviewIdentifiers),\n        'review-url': UrlV30Rc2ToJSON(value.reviewUrl),\n        'review-type': value.reviewType,\n        'review-completion-date': FuzzyDateV30Rc2ToJSON(value.reviewCompletionDate),\n        'review-group-id': value.reviewGroupId,\n        'subject-external-identifier': ExternalIDV30Rc2ToJSON(value.subjectExternalIdentifier),\n        'subject-container-name': TitleV30Rc2ToJSON(value.subjectContainerName),\n        'subject-type': value.subjectType,\n        'subject-name': SubjectNameV30Rc2ToJSON(value.subjectName),\n        'subject-url': UrlV30Rc2ToJSON(value.subjectUrl),\n        'convening-organization': OrganizationV30Rc2ToJSON(value.conveningOrganization),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    UrlV20,\n    UrlV20FromJSON,\n    UrlV20FromJSONTyped,\n    UrlV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonExternalIdentifierV20\n */\nexport interface PersonExternalIdentifierV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof PersonExternalIdentifierV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PersonExternalIdentifierV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof PersonExternalIdentifierV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV20\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV20\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof PersonExternalIdentifierV20\n     */\n    externalIdUrl?: UrlV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV20\n     */\n    externalIdRelationship?: PersonExternalIdentifierV20ExternalIdRelationshipEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV20\n     */\n    visibility?: PersonExternalIdentifierV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV20\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV20ExternalIdRelationshipEnum {\n    PartOf = 'PART_OF',\n    Self = 'SELF'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PersonExternalIdentifierV20FromJSON(json: any): PersonExternalIdentifierV20 {\n    return PersonExternalIdentifierV20FromJSONTyped(json, false);\n}\n\nexport function PersonExternalIdentifierV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonExternalIdentifierV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV20FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PersonExternalIdentifierV20ToJSON(value?: PersonExternalIdentifierV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-url': UrlV20ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonExternalIdentifierV30\n */\nexport interface PersonExternalIdentifierV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof PersonExternalIdentifierV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof PersonExternalIdentifierV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof PersonExternalIdentifierV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof PersonExternalIdentifierV30\n     */\n    externalIdUrl?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30\n     */\n    externalIdRelationship?: PersonExternalIdentifierV30ExternalIdRelationshipEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30\n     */\n    visibility?: PersonExternalIdentifierV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV30\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV30ExternalIdRelationshipEnum {\n    PartOf = 'part-of',\n    Self = 'self',\n    VersionOf = 'version-of'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function PersonExternalIdentifierV30FromJSON(json: any): PersonExternalIdentifierV30 {\n    return PersonExternalIdentifierV30FromJSONTyped(json, false);\n}\n\nexport function PersonExternalIdentifierV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonExternalIdentifierV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV30FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PersonExternalIdentifierV30ToJSON(value?: PersonExternalIdentifierV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-url': UrlV30ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonExternalIdentifierV30Rc1\n */\nexport interface PersonExternalIdentifierV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    externalIdUrl?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    externalIdRelationship?: PersonExternalIdentifierV30Rc1ExternalIdRelationshipEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    visibility?: PersonExternalIdentifierV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV30Rc1\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV30Rc1ExternalIdRelationshipEnum {\n    PartOf = 'PART_OF',\n    Self = 'SELF'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PersonExternalIdentifierV30Rc1FromJSON(json: any): PersonExternalIdentifierV30Rc1 {\n    return PersonExternalIdentifierV30Rc1FromJSONTyped(json, false);\n}\n\nexport function PersonExternalIdentifierV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonExternalIdentifierV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV30Rc1FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PersonExternalIdentifierV30Rc1ToJSON(value?: PersonExternalIdentifierV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-url': UrlV30Rc1ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonExternalIdentifierV30Rc2\n */\nexport interface PersonExternalIdentifierV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    externalIdType: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    externalIdValue: string;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    externalIdUrl?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    externalIdRelationship?: PersonExternalIdentifierV30Rc2ExternalIdRelationshipEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    visibility?: PersonExternalIdentifierV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PersonExternalIdentifierV30Rc2\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV30Rc2ExternalIdRelationshipEnum {\n    PartOf = 'PART_OF',\n    Self = 'SELF',\n    VersionOf = 'VERSION_OF'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum PersonExternalIdentifierV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function PersonExternalIdentifierV30Rc2FromJSON(json: any): PersonExternalIdentifierV30Rc2 {\n    return PersonExternalIdentifierV30Rc2FromJSONTyped(json, false);\n}\n\nexport function PersonExternalIdentifierV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonExternalIdentifierV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'externalIdType': json['external-id-type'],\n        'externalIdValue': json['external-id-value'],\n        'externalIdUrl': !exists(json, 'external-id-url') ? undefined : UrlV30Rc2FromJSON(json['external-id-url']),\n        'externalIdRelationship': !exists(json, 'external-id-relationship') ? undefined : json['external-id-relationship'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function PersonExternalIdentifierV30Rc2ToJSON(value?: PersonExternalIdentifierV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'external-id-type': value.externalIdType,\n        'external-id-value': value.externalIdValue,\n        'external-id-url': UrlV30Rc2ToJSON(value.externalIdUrl),\n        'external-id-relationship': value.externalIdRelationship,\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PreferencesV20\n */\nexport interface PreferencesV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof PreferencesV20\n     */\n    locale?: PreferencesV20LocaleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PreferencesV20LocaleEnum {\n    Ar = 'AR',\n    En = 'EN',\n    Es = 'ES',\n    Fr = 'FR',\n    Ko = 'KO',\n    Pt = 'PT',\n    Ru = 'RU',\n    ZhCn = 'ZH_CN',\n    ZhTw = 'ZH_TW',\n    It = 'IT',\n    Ja = 'JA',\n    Xx = 'XX'\n}\n\nexport function PreferencesV20FromJSON(json: any): PreferencesV20 {\n    return PreferencesV20FromJSONTyped(json, false);\n}\n\nexport function PreferencesV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferencesV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'locale': !exists(json, 'locale') ? undefined : json['locale'],\n    };\n}\n\nexport function PreferencesV20ToJSON(value?: PreferencesV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'locale': value.locale,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PreferencesV30\n */\nexport interface PreferencesV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof PreferencesV30\n     */\n    locale?: PreferencesV30LocaleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PreferencesV30LocaleEnum {\n    Ar = 'AR',\n    Cs = 'CS',\n    De = 'DE',\n    En = 'EN',\n    Es = 'ES',\n    Fr = 'FR',\n    It = 'IT',\n    Ja = 'JA',\n    Ko = 'KO',\n    Pt = 'PT',\n    Ru = 'RU',\n    ZhCn = 'ZH_CN',\n    ZhTw = 'ZH_TW',\n    Xx = 'XX'\n}\n\nexport function PreferencesV30FromJSON(json: any): PreferencesV30 {\n    return PreferencesV30FromJSONTyped(json, false);\n}\n\nexport function PreferencesV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferencesV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'locale': !exists(json, 'locale') ? undefined : json['locale'],\n    };\n}\n\nexport function PreferencesV30ToJSON(value?: PreferencesV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'locale': value.locale,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PreferencesV30Rc1\n */\nexport interface PreferencesV30Rc1 {\n    /**\n     * \n     * @type {string}\n     * @memberof PreferencesV30Rc1\n     */\n    locale?: PreferencesV30Rc1LocaleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PreferencesV30Rc1LocaleEnum {\n    Ar = 'AR',\n    Cs = 'CS',\n    De = 'DE',\n    En = 'EN',\n    Es = 'ES',\n    Fr = 'FR',\n    It = 'IT',\n    Ja = 'JA',\n    Ko = 'KO',\n    Pt = 'PT',\n    Ru = 'RU',\n    ZhCn = 'ZH_CN',\n    ZhTw = 'ZH_TW',\n    Xx = 'XX'\n}\n\nexport function PreferencesV30Rc1FromJSON(json: any): PreferencesV30Rc1 {\n    return PreferencesV30Rc1FromJSONTyped(json, false);\n}\n\nexport function PreferencesV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferencesV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'locale': !exists(json, 'locale') ? undefined : json['locale'],\n    };\n}\n\nexport function PreferencesV30Rc1ToJSON(value?: PreferencesV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'locale': value.locale,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PreferencesV30Rc2\n */\nexport interface PreferencesV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof PreferencesV30Rc2\n     */\n    locale?: PreferencesV30Rc2LocaleEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PreferencesV30Rc2LocaleEnum {\n    Ar = 'AR',\n    Cs = 'CS',\n    De = 'DE',\n    En = 'EN',\n    Es = 'ES',\n    Fr = 'FR',\n    It = 'IT',\n    Ja = 'JA',\n    Ko = 'KO',\n    Pt = 'PT',\n    Ru = 'RU',\n    ZhCn = 'ZH_CN',\n    ZhTw = 'ZH_TW',\n    Xx = 'XX'\n}\n\nexport function PreferencesV30Rc2FromJSON(json: any): PreferencesV30Rc2 {\n    return PreferencesV30Rc2FromJSONTyped(json, false);\n}\n\nexport function PreferencesV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferencesV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'locale': !exists(json, 'locale') ? undefined : json['locale'],\n    };\n}\n\nexport function PreferencesV30Rc2ToJSON(value?: PreferencesV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'locale': value.locale,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DayV20,\n    DayV20FromJSON,\n    DayV20FromJSONTyped,\n    DayV20ToJSON,\n    MonthV20,\n    MonthV20FromJSON,\n    MonthV20FromJSONTyped,\n    MonthV20ToJSON,\n    YearV20,\n    YearV20FromJSON,\n    YearV20FromJSONTyped,\n    YearV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PublicationDateV20\n */\nexport interface PublicationDateV20 {\n    /**\n     * \n     * @type {YearV20}\n     * @memberof PublicationDateV20\n     */\n    year: YearV20;\n    /**\n     * \n     * @type {MonthV20}\n     * @memberof PublicationDateV20\n     */\n    month?: MonthV20;\n    /**\n     * \n     * @type {DayV20}\n     * @memberof PublicationDateV20\n     */\n    day?: DayV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicationDateV20\n     */\n    mediaType?: PublicationDateV20MediaTypeEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PublicationDateV20MediaTypeEnum {\n    Print = 'PRINT',\n    Online = 'ONLINE',\n    Other = 'OTHER'\n}\n\nexport function PublicationDateV20FromJSON(json: any): PublicationDateV20 {\n    return PublicationDateV20FromJSONTyped(json, false);\n}\n\nexport function PublicationDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicationDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'year': YearV20FromJSON(json['year']),\n        'month': !exists(json, 'month') ? undefined : MonthV20FromJSON(json['month']),\n        'day': !exists(json, 'day') ? undefined : DayV20FromJSON(json['day']),\n        'mediaType': !exists(json, 'media-type') ? undefined : json['media-type'],\n    };\n}\n\nexport function PublicationDateV20ToJSON(value?: PublicationDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'year': YearV20ToJSON(value.year),\n        'month': MonthV20ToJSON(value.month),\n        'day': DayV20ToJSON(value.day),\n        'media-type': value.mediaType,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DayV30Rc1,\n    DayV30Rc1FromJSON,\n    DayV30Rc1FromJSONTyped,\n    DayV30Rc1ToJSON,\n    MonthV30Rc1,\n    MonthV30Rc1FromJSON,\n    MonthV30Rc1FromJSONTyped,\n    MonthV30Rc1ToJSON,\n    YearV30Rc1,\n    YearV30Rc1FromJSON,\n    YearV30Rc1FromJSONTyped,\n    YearV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PublicationDateV30Rc1\n */\nexport interface PublicationDateV30Rc1 {\n    /**\n     * \n     * @type {YearV30Rc1}\n     * @memberof PublicationDateV30Rc1\n     */\n    year: YearV30Rc1;\n    /**\n     * \n     * @type {MonthV30Rc1}\n     * @memberof PublicationDateV30Rc1\n     */\n    month?: MonthV30Rc1;\n    /**\n     * \n     * @type {DayV30Rc1}\n     * @memberof PublicationDateV30Rc1\n     */\n    day?: DayV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicationDateV30Rc1\n     */\n    mediaType?: PublicationDateV30Rc1MediaTypeEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum PublicationDateV30Rc1MediaTypeEnum {\n    Print = 'PRINT',\n    Online = 'ONLINE',\n    Other = 'OTHER'\n}\n\nexport function PublicationDateV30Rc1FromJSON(json: any): PublicationDateV30Rc1 {\n    return PublicationDateV30Rc1FromJSONTyped(json, false);\n}\n\nexport function PublicationDateV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicationDateV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'year': YearV30Rc1FromJSON(json['year']),\n        'month': !exists(json, 'month') ? undefined : MonthV30Rc1FromJSON(json['month']),\n        'day': !exists(json, 'day') ? undefined : DayV30Rc1FromJSON(json['day']),\n        'mediaType': !exists(json, 'media-type') ? undefined : json['media-type'],\n    };\n}\n\nexport function PublicationDateV30Rc1ToJSON(value?: PublicationDateV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'year': YearV30Rc1ToJSON(value.year),\n        'month': MonthV30Rc1ToJSON(value.month),\n        'day': DayV30Rc1ToJSON(value.day),\n        'media-type': value.mediaType,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QualificationSummaryV30\n */\nexport interface QualificationSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof QualificationSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof QualificationSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof QualificationSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof QualificationSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof QualificationSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof QualificationSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof QualificationSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof QualificationSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof QualificationSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30\n     */\n    visibility?: QualificationSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum QualificationSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function QualificationSummaryV30FromJSON(json: any): QualificationSummaryV30 {\n    return QualificationSummaryV30FromJSONTyped(json, false);\n}\n\nexport function QualificationSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): QualificationSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function QualificationSummaryV30ToJSON(value?: QualificationSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QualificationSummaryV30Rc1\n */\nexport interface QualificationSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    visibility?: QualificationSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum QualificationSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function QualificationSummaryV30Rc1FromJSON(json: any): QualificationSummaryV30Rc1 {\n    return QualificationSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function QualificationSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): QualificationSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function QualificationSummaryV30Rc1ToJSON(value?: QualificationSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QualificationSummaryV30Rc2\n */\nexport interface QualificationSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    visibility?: QualificationSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum QualificationSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function QualificationSummaryV30Rc2FromJSON(json: any): QualificationSummaryV30Rc2 {\n    return QualificationSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function QualificationSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): QualificationSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function QualificationSummaryV30Rc2ToJSON(value?: QualificationSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QualificationV30\n */\nexport interface QualificationV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof QualificationV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof QualificationV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof QualificationV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof QualificationV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof QualificationV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof QualificationV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof QualificationV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof QualificationV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof QualificationV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30\n     */\n    visibility?: QualificationV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum QualificationV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function QualificationV30FromJSON(json: any): QualificationV30 {\n    return QualificationV30FromJSONTyped(json, false);\n}\n\nexport function QualificationV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): QualificationV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function QualificationV30ToJSON(value?: QualificationV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QualificationV30Rc1\n */\nexport interface QualificationV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof QualificationV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof QualificationV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc1\n     */\n    visibility?: QualificationV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum QualificationV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function QualificationV30Rc1FromJSON(json: any): QualificationV30Rc1 {\n    return QualificationV30Rc1FromJSONTyped(json, false);\n}\n\nexport function QualificationV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): QualificationV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function QualificationV30Rc1ToJSON(value?: QualificationV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface QualificationV30Rc2\n */\nexport interface QualificationV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof QualificationV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof QualificationV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof QualificationV30Rc2\n     */\n    visibility?: QualificationV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum QualificationV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function QualificationV30Rc2FromJSON(json: any): QualificationV30Rc2 {\n    return QualificationV30Rc2FromJSONTyped(json, false);\n}\n\nexport function QualificationV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): QualificationV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function QualificationV30Rc2ToJSON(value?: QualificationV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    ResearchResourceHostsV30,\n    ResearchResourceHostsV30FromJSON,\n    ResearchResourceHostsV30FromJSONTyped,\n    ResearchResourceHostsV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceItemV30\n */\nexport interface ResearchResourceItemV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceItemV30\n     */\n    resourceName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceItemV30\n     */\n    resourceType?: ResearchResourceItemV30ResourceTypeEnum;\n    /**\n     * \n     * @type {ResearchResourceHostsV30}\n     * @memberof ResearchResourceItemV30\n     */\n    hosts?: ResearchResourceHostsV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof ResearchResourceItemV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof ResearchResourceItemV30\n     */\n    url?: UrlV30;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceItemV30ResourceTypeEnum {\n    Infrastructures = 'infrastructures',\n    Collections = 'collections',\n    Equipment = 'equipment',\n    Services = 'services'\n}\n\nexport function ResearchResourceItemV30FromJSON(json: any): ResearchResourceItemV30 {\n    return ResearchResourceItemV30FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceItemV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceItemV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'resourceName': !exists(json, 'resource-name') ? undefined : json['resource-name'],\n        'resourceType': !exists(json, 'resource-type') ? undefined : json['resource-type'],\n        'hosts': !exists(json, 'hosts') ? undefined : ResearchResourceHostsV30FromJSON(json['hosts']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n    };\n}\n\nexport function ResearchResourceItemV30ToJSON(value?: ResearchResourceItemV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'resource-name': value.resourceName,\n        'resource-type': value.resourceType,\n        'hosts': ResearchResourceHostsV30ToJSON(value.hosts),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'url': UrlV30ToJSON(value.url),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    ResearchResourceHostsV30Rc2,\n    ResearchResourceHostsV30Rc2FromJSON,\n    ResearchResourceHostsV30Rc2FromJSONTyped,\n    ResearchResourceHostsV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceItemV30Rc2\n */\nexport interface ResearchResourceItemV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceItemV30Rc2\n     */\n    resourceName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceItemV30Rc2\n     */\n    resourceType?: ResearchResourceItemV30Rc2ResourceTypeEnum;\n    /**\n     * \n     * @type {ResearchResourceHostsV30Rc2}\n     * @memberof ResearchResourceItemV30Rc2\n     */\n    hosts?: ResearchResourceHostsV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof ResearchResourceItemV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof ResearchResourceItemV30Rc2\n     */\n    url?: UrlV30Rc2;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceItemV30Rc2ResourceTypeEnum {\n    Infrastructures = 'infrastructures',\n    Collections = 'collections',\n    Equipment = 'equipment',\n    Services = 'services'\n}\n\nexport function ResearchResourceItemV30Rc2FromJSON(json: any): ResearchResourceItemV30Rc2 {\n    return ResearchResourceItemV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceItemV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceItemV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'resourceName': !exists(json, 'resource-name') ? undefined : json['resource-name'],\n        'resourceType': !exists(json, 'resource-type') ? undefined : json['resource-type'],\n        'hosts': !exists(json, 'hosts') ? undefined : ResearchResourceHostsV30Rc2FromJSON(json['hosts']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n    };\n}\n\nexport function ResearchResourceItemV30Rc2ToJSON(value?: ResearchResourceItemV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'resource-name': value.resourceName,\n        'resource-type': value.resourceType,\n        'hosts': ResearchResourceHostsV30Rc2ToJSON(value.hosts),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'url': UrlV30Rc2ToJSON(value.url),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    ResearchResourceProposalV30,\n    ResearchResourceProposalV30FromJSON,\n    ResearchResourceProposalV30FromJSONTyped,\n    ResearchResourceProposalV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceSummaryV30\n */\nexport interface ResearchResourceSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof ResearchResourceSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof ResearchResourceSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof ResearchResourceSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {ResearchResourceProposalV30}\n     * @memberof ResearchResourceSummaryV30\n     */\n    proposal?: ResearchResourceProposalV30;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30\n     */\n    visibility?: ResearchResourceSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearchResourceSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearchResourceSummaryV30FromJSON(json: any): ResearchResourceSummaryV30 {\n    return ResearchResourceSummaryV30FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'proposal': !exists(json, 'proposal') ? undefined : ResearchResourceProposalV30FromJSON(json['proposal']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearchResourceSummaryV30ToJSON(value?: ResearchResourceSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'proposal': ResearchResourceProposalV30ToJSON(value.proposal),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    ResearchResourceProposalV30Rc1,\n    ResearchResourceProposalV30Rc1FromJSON,\n    ResearchResourceProposalV30Rc1FromJSONTyped,\n    ResearchResourceProposalV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceSummaryV30Rc1\n */\nexport interface ResearchResourceSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {ResearchResourceProposalV30Rc1}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    proposal?: ResearchResourceProposalV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    visibility?: ResearchResourceSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30Rc1\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearchResourceSummaryV30Rc1FromJSON(json: any): ResearchResourceSummaryV30Rc1 {\n    return ResearchResourceSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'proposal': !exists(json, 'proposal') ? undefined : ResearchResourceProposalV30Rc1FromJSON(json['proposal']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearchResourceSummaryV30Rc1ToJSON(value?: ResearchResourceSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'proposal': ResearchResourceProposalV30Rc1ToJSON(value.proposal),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    ResearchResourceProposalV30Rc2,\n    ResearchResourceProposalV30Rc2FromJSON,\n    ResearchResourceProposalV30Rc2FromJSONTyped,\n    ResearchResourceProposalV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceSummaryV30Rc2\n */\nexport interface ResearchResourceSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {ResearchResourceProposalV30Rc2}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    proposal?: ResearchResourceProposalV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    visibility?: ResearchResourceSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceSummaryV30Rc2\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearchResourceSummaryV30Rc2FromJSON(json: any): ResearchResourceSummaryV30Rc2 {\n    return ResearchResourceSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'proposal': !exists(json, 'proposal') ? undefined : ResearchResourceProposalV30Rc2FromJSON(json['proposal']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearchResourceSummaryV30Rc2ToJSON(value?: ResearchResourceSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'proposal': ResearchResourceProposalV30Rc2ToJSON(value.proposal),\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    ResearchResourceItemV30,\n    ResearchResourceItemV30FromJSON,\n    ResearchResourceItemV30FromJSONTyped,\n    ResearchResourceItemV30ToJSON,\n    ResearchResourceProposalV30,\n    ResearchResourceProposalV30FromJSON,\n    ResearchResourceProposalV30FromJSONTyped,\n    ResearchResourceProposalV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceV30\n */\nexport interface ResearchResourceV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof ResearchResourceV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof ResearchResourceV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof ResearchResourceV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {ResearchResourceProposalV30}\n     * @memberof ResearchResourceV30\n     */\n    proposal?: ResearchResourceProposalV30;\n    /**\n     * \n     * @type {Array<ResearchResourceItemV30>}\n     * @memberof ResearchResourceV30\n     */\n    resourceItem?: Array<ResearchResourceItemV30>;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30\n     */\n    visibility?: ResearchResourceV30VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearchResourceV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function ResearchResourceV30FromJSON(json: any): ResearchResourceV30 {\n    return ResearchResourceV30FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'proposal': !exists(json, 'proposal') ? undefined : ResearchResourceProposalV30FromJSON(json['proposal']),\n        'resourceItem': !exists(json, 'resource-item') ? undefined : ((json['resource-item'] as Array<any>).map(ResearchResourceItemV30FromJSON)),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ResearchResourceV30ToJSON(value?: ResearchResourceV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'proposal': ResearchResourceProposalV30ToJSON(value.proposal),\n        'resource-item': value.resourceItem === undefined ? undefined : ((value.resourceItem as Array<any>).map(ResearchResourceItemV30ToJSON)),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    ResearchResourceItemV30Rc1,\n    ResearchResourceItemV30Rc1FromJSON,\n    ResearchResourceItemV30Rc1FromJSONTyped,\n    ResearchResourceItemV30Rc1ToJSON,\n    ResearchResourceProposalV30Rc1,\n    ResearchResourceProposalV30Rc1FromJSON,\n    ResearchResourceProposalV30Rc1FromJSONTyped,\n    ResearchResourceProposalV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceV30Rc1\n */\nexport interface ResearchResourceV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof ResearchResourceV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof ResearchResourceV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof ResearchResourceV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {ResearchResourceProposalV30Rc1}\n     * @memberof ResearchResourceV30Rc1\n     */\n    proposal?: ResearchResourceProposalV30Rc1;\n    /**\n     * \n     * @type {Array<ResearchResourceItemV30Rc1>}\n     * @memberof ResearchResourceV30Rc1\n     */\n    resourceItem?: Array<ResearchResourceItemV30Rc1>;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30Rc1\n     */\n    visibility?: ResearchResourceV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearchResourceV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearchResourceV30Rc1FromJSON(json: any): ResearchResourceV30Rc1 {\n    return ResearchResourceV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'proposal': !exists(json, 'proposal') ? undefined : ResearchResourceProposalV30Rc1FromJSON(json['proposal']),\n        'resourceItem': !exists(json, 'resource-item') ? undefined : ((json['resource-item'] as Array<any>).map(ResearchResourceItemV30Rc1FromJSON)),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ResearchResourceV30Rc1ToJSON(value?: ResearchResourceV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'proposal': ResearchResourceProposalV30Rc1ToJSON(value.proposal),\n        'resource-item': value.resourceItem === undefined ? undefined : ((value.resourceItem as Array<any>).map(ResearchResourceItemV30Rc1ToJSON)),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    ResearchResourceItemV30Rc2,\n    ResearchResourceItemV30Rc2FromJSON,\n    ResearchResourceItemV30Rc2FromJSONTyped,\n    ResearchResourceItemV30Rc2ToJSON,\n    ResearchResourceProposalV30Rc2,\n    ResearchResourceProposalV30Rc2FromJSON,\n    ResearchResourceProposalV30Rc2FromJSONTyped,\n    ResearchResourceProposalV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearchResourceV30Rc2\n */\nexport interface ResearchResourceV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof ResearchResourceV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof ResearchResourceV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof ResearchResourceV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {ResearchResourceProposalV30Rc2}\n     * @memberof ResearchResourceV30Rc2\n     */\n    proposal?: ResearchResourceProposalV30Rc2;\n    /**\n     * \n     * @type {Array<ResearchResourceItemV30Rc2>}\n     * @memberof ResearchResourceV30Rc2\n     */\n    resourceItem?: Array<ResearchResourceItemV30Rc2>;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30Rc2\n     */\n    visibility?: ResearchResourceV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearchResourceV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearchResourceV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearchResourceV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearchResourceV30Rc2FromJSON(json: any): ResearchResourceV30Rc2 {\n    return ResearchResourceV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ResearchResourceV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearchResourceV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'proposal': !exists(json, 'proposal') ? undefined : ResearchResourceProposalV30Rc2FromJSON(json['proposal']),\n        'resourceItem': !exists(json, 'resource-item') ? undefined : ((json['resource-item'] as Array<any>).map(ResearchResourceItemV30Rc2FromJSON)),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ResearchResourceV30Rc2ToJSON(value?: ResearchResourceV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'proposal': ResearchResourceProposalV30Rc2ToJSON(value.proposal),\n        'resource-item': value.resourceItem === undefined ? undefined : ((value.resourceItem as Array<any>).map(ResearchResourceItemV30Rc2ToJSON)),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'put-code': value.putCode,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    UrlV20,\n    UrlV20FromJSON,\n    UrlV20FromJSONTyped,\n    UrlV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearcherUrlV20\n */\nexport interface ResearcherUrlV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof ResearcherUrlV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof ResearcherUrlV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof ResearcherUrlV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV20\n     */\n    urlName?: string;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof ResearcherUrlV20\n     */\n    url?: UrlV20;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV20\n     */\n    visibility?: ResearcherUrlV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV20\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearcherUrlV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearcherUrlV20FromJSON(json: any): ResearcherUrlV20 {\n    return ResearcherUrlV20FromJSONTyped(json, false);\n}\n\nexport function ResearcherUrlV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearcherUrlV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'urlName': !exists(json, 'url-name') ? undefined : json['url-name'],\n        'url': !exists(json, 'url') ? undefined : UrlV20FromJSON(json['url']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearcherUrlV20ToJSON(value?: ResearcherUrlV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'url-name': value.urlName,\n        'url': UrlV20ToJSON(value.url),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearcherUrlV30\n */\nexport interface ResearcherUrlV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof ResearcherUrlV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof ResearcherUrlV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof ResearcherUrlV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30\n     */\n    urlName?: string;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof ResearcherUrlV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30\n     */\n    visibility?: ResearcherUrlV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV30\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearcherUrlV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function ResearcherUrlV30FromJSON(json: any): ResearcherUrlV30 {\n    return ResearcherUrlV30FromJSONTyped(json, false);\n}\n\nexport function ResearcherUrlV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearcherUrlV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'urlName': !exists(json, 'url-name') ? undefined : json['url-name'],\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearcherUrlV30ToJSON(value?: ResearcherUrlV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'url-name': value.urlName,\n        'url': UrlV30ToJSON(value.url),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearcherUrlV30Rc1\n */\nexport interface ResearcherUrlV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    urlName?: string;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    visibility?: ResearcherUrlV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV30Rc1\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearcherUrlV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearcherUrlV30Rc1FromJSON(json: any): ResearcherUrlV30Rc1 {\n    return ResearcherUrlV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ResearcherUrlV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearcherUrlV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'urlName': !exists(json, 'url-name') ? undefined : json['url-name'],\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearcherUrlV30Rc1ToJSON(value?: ResearcherUrlV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'url-name': value.urlName,\n        'url': UrlV30Rc1ToJSON(value.url),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearcherUrlV30Rc2\n */\nexport interface ResearcherUrlV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    urlName?: string;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    visibility?: ResearcherUrlV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ResearcherUrlV30Rc2\n     */\n    displayIndex?: number;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ResearcherUrlV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ResearcherUrlV30Rc2FromJSON(json: any): ResearcherUrlV30Rc2 {\n    return ResearcherUrlV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ResearcherUrlV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearcherUrlV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'urlName': !exists(json, 'url-name') ? undefined : json['url-name'],\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function ResearcherUrlV30Rc2ToJSON(value?: ResearcherUrlV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'url-name': value.urlName,\n        'url': UrlV30Rc2ToJSON(value.url),\n        'visibility': value.visibility,\n        'path': value.path,\n        'put-code': value.putCode,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServiceSummaryV30\n */\nexport interface ServiceSummaryV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof ServiceSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof ServiceSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof ServiceSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof ServiceSummaryV30\n     */\n    startDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof ServiceSummaryV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof ServiceSummaryV30\n     */\n    organization?: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof ServiceSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof ServiceSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30\n     */\n    visibility?: ServiceSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ServiceSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ServiceSummaryV30FromJSON(json: any): ServiceSummaryV30 {\n    return ServiceSummaryV30FromJSONTyped(json, false);\n}\n\nexport function ServiceSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ServiceSummaryV30ToJSON(value?: ServiceSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServiceSummaryV30Rc1\n */\nexport interface ServiceSummaryV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    startDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    organization?: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    visibility?: ServiceSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc1\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ServiceSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ServiceSummaryV30Rc1FromJSON(json: any): ServiceSummaryV30Rc1 {\n    return ServiceSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ServiceSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ServiceSummaryV30Rc1ToJSON(value?: ServiceSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServiceSummaryV30Rc2\n */\nexport interface ServiceSummaryV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    startDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    organization?: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    visibility?: ServiceSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceSummaryV30Rc2\n     */\n    path?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ServiceSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ServiceSummaryV30Rc2FromJSON(json: any): ServiceSummaryV30Rc2 {\n    return ServiceSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ServiceSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': !exists(json, 'start-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': !exists(json, 'organization') ? undefined : OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ServiceSummaryV30Rc2ToJSON(value?: ServiceSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    FuzzyDateV30,\n    FuzzyDateV30FromJSON,\n    FuzzyDateV30FromJSONTyped,\n    FuzzyDateV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    OrganizationV30,\n    OrganizationV30FromJSON,\n    OrganizationV30FromJSONTyped,\n    OrganizationV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServiceV30\n */\nexport interface ServiceV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof ServiceV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof ServiceV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof ServiceV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof ServiceV30\n     */\n    startDate: FuzzyDateV30;\n    /**\n     * \n     * @type {FuzzyDateV30}\n     * @memberof ServiceV30\n     */\n    endDate?: FuzzyDateV30;\n    /**\n     * \n     * @type {OrganizationV30}\n     * @memberof ServiceV30\n     */\n    organization: OrganizationV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof ServiceV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof ServiceV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30\n     */\n    visibility?: ServiceV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ServiceV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function ServiceV30FromJSON(json: any): ServiceV30 {\n    return ServiceV30FromJSONTyped(json, false);\n}\n\nexport function ServiceV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30FromJSON(json['end-date']),\n        'organization': OrganizationV30FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function ServiceV30ToJSON(value?: ServiceV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30ToJSON(value.startDate),\n        'end-date': FuzzyDateV30ToJSON(value.endDate),\n        'organization': OrganizationV30ToJSON(value.organization),\n        'url': UrlV30ToJSON(value.url),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    FuzzyDateV30Rc1,\n    FuzzyDateV30Rc1FromJSON,\n    FuzzyDateV30Rc1FromJSONTyped,\n    FuzzyDateV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    OrganizationV30Rc1,\n    OrganizationV30Rc1FromJSON,\n    OrganizationV30Rc1FromJSONTyped,\n    OrganizationV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServiceV30Rc1\n */\nexport interface ServiceV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc1\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc1\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    startDate: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {FuzzyDateV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    endDate?: FuzzyDateV30Rc1;\n    /**\n     * \n     * @type {OrganizationV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    organization: OrganizationV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof ServiceV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc1\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc1\n     */\n    visibility?: ServiceV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ServiceV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ServiceV30Rc1FromJSON(json: any): ServiceV30Rc1 {\n    return ServiceV30Rc1FromJSONTyped(json, false);\n}\n\nexport function ServiceV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc1FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc1FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc1FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function ServiceV30Rc1ToJSON(value?: ServiceV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc1ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc1ToJSON(value.endDate),\n        'organization': OrganizationV30Rc1ToJSON(value.organization),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    FuzzyDateV30Rc2,\n    FuzzyDateV30Rc2FromJSON,\n    FuzzyDateV30Rc2FromJSONTyped,\n    FuzzyDateV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    OrganizationV30Rc2,\n    OrganizationV30Rc2FromJSON,\n    OrganizationV30Rc2FromJSONTyped,\n    OrganizationV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ServiceV30Rc2\n */\nexport interface ServiceV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc2\n     */\n    departmentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc2\n     */\n    roleTitle?: string;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    startDate: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {FuzzyDateV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    endDate?: FuzzyDateV30Rc2;\n    /**\n     * \n     * @type {OrganizationV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    organization: OrganizationV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof ServiceV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc2\n     */\n    displayIndex?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceV30Rc2\n     */\n    visibility?: ServiceV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum ServiceV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function ServiceV30Rc2FromJSON(json: any): ServiceV30Rc2 {\n    return ServiceV30Rc2FromJSONTyped(json, false);\n}\n\nexport function ServiceV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'departmentName': !exists(json, 'department-name') ? undefined : json['department-name'],\n        'roleTitle': !exists(json, 'role-title') ? undefined : json['role-title'],\n        'startDate': FuzzyDateV30Rc2FromJSON(json['start-date']),\n        'endDate': !exists(json, 'end-date') ? undefined : FuzzyDateV30Rc2FromJSON(json['end-date']),\n        'organization': OrganizationV30Rc2FromJSON(json['organization']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function ServiceV30Rc2ToJSON(value?: ServiceV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'department-name': value.departmentName,\n        'role-title': value.roleTitle,\n        'start-date': FuzzyDateV30Rc2ToJSON(value.startDate),\n        'end-date': FuzzyDateV30Rc2ToJSON(value.endDate),\n        'organization': OrganizationV30Rc2ToJSON(value.organization),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'display-index': value.displayIndex,\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TranslatedTitleV30\n */\nexport interface TranslatedTitleV30 {\n    /**\n     * \n     * @type {string}\n     * @memberof TranslatedTitleV30\n     */\n    value?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TranslatedTitleV30\n     */\n    languageCode: TranslatedTitleV30LanguageCodeEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum TranslatedTitleV30LanguageCodeEnum {\n    Ab = 'ab',\n    Aa = 'aa',\n    Af = 'af',\n    Ak = 'ak',\n    Sq = 'sq',\n    Am = 'am',\n    Ar = 'ar',\n    An = 'an',\n    Hy = 'hy',\n    As = 'as',\n    Av = 'av',\n    Ae = 'ae',\n    Ay = 'ay',\n    Az = 'az',\n    Bm = 'bm',\n    Ba = 'ba',\n    Eu = 'eu',\n    Be = 'be',\n    Bn = 'bn',\n    Bh = 'bh',\n    Bi = 'bi',\n    Bs = 'bs',\n    Br = 'br',\n    Bg = 'bg',\n    My = 'my',\n    Ca = 'ca',\n    Ch = 'ch',\n    Ce = 'ce',\n    ZhCn = 'zh_CN',\n    ZhTw = 'zh_TW',\n    Cu = 'cu',\n    Cv = 'cv',\n    Kw = 'kw',\n    Co = 'co',\n    Cr = 'cr',\n    Hr = 'hr',\n    Cs = 'cs',\n    Da = 'da',\n    Dv = 'dv',\n    Nl = 'nl',\n    Dz = 'dz',\n    En = 'en',\n    Eo = 'eo',\n    Et = 'et',\n    Ee = 'ee',\n    Fo = 'fo',\n    Fj = 'fj',\n    Fi = 'fi',\n    Fr = 'fr',\n    Fy = 'fy',\n    Ff = 'ff',\n    Gl = 'gl',\n    Lg = 'lg',\n    Ka = 'ka',\n    De = 'de',\n    El = 'el',\n    Kl = 'kl',\n    Gn = 'gn',\n    Gu = 'gu',\n    Ht = 'ht',\n    Ha = 'ha',\n    Iw = 'iw',\n    Hz = 'hz',\n    Hi = 'hi',\n    Ho = 'ho',\n    Hu = 'hu',\n    Is = 'is',\n    Io = 'io',\n    Ig = 'ig',\n    In = 'in',\n    Ia = 'ia',\n    Ie = 'ie',\n    Iu = 'iu',\n    Ik = 'ik',\n    Ga = 'ga',\n    It = 'it',\n    Ja = 'ja',\n    Jv = 'jv',\n    Kn = 'kn',\n    Kr = 'kr',\n    Ks = 'ks',\n    Kk = 'kk',\n    Km = 'km',\n    Ki = 'ki',\n    Rw = 'rw',\n    Ky = 'ky',\n    Kv = 'kv',\n    Kg = 'kg',\n    Ko = 'ko',\n    Ku = 'ku',\n    Kj = 'kj',\n    Lo = 'lo',\n    La = 'la',\n    Lv = 'lv',\n    Li = 'li',\n    Ln = 'ln',\n    Lt = 'lt',\n    Lu = 'lu',\n    Lb = 'lb',\n    Mk = 'mk',\n    Mg = 'mg',\n    Ms = 'ms',\n    Ml = 'ml',\n    Mt = 'mt',\n    Gv = 'gv',\n    Mi = 'mi',\n    Mr = 'mr',\n    Mh = 'mh',\n    Mo = 'mo',\n    Mn = 'mn',\n    Na = 'na',\n    Nv = 'nv',\n    Ng = 'ng',\n    Ne = 'ne',\n    Nd = 'nd',\n    Se = 'se',\n    No = 'no',\n    Nb = 'nb',\n    Nn = 'nn',\n    Ny = 'ny',\n    Oc = 'oc',\n    Oj = 'oj',\n    Or = 'or',\n    Om = 'om',\n    Os = 'os',\n    Pi = 'pi',\n    Pa = 'pa',\n    Fa = 'fa',\n    Pl = 'pl',\n    Pt = 'pt',\n    Ps = 'ps',\n    Qu = 'qu',\n    Rm = 'rm',\n    Ro = 'ro',\n    Rn = 'rn',\n    Ru = 'ru',\n    Sm = 'sm',\n    Sg = 'sg',\n    Sa = 'sa',\n    Sc = 'sc',\n    Gd = 'gd',\n    Sr = 'sr',\n    Sn = 'sn',\n    Ii = 'ii',\n    Sd = 'sd',\n    Si = 'si',\n    Sk = 'sk',\n    Sl = 'sl',\n    So = 'so',\n    Nr = 'nr',\n    St = 'st',\n    Es = 'es',\n    Su = 'su',\n    Sw = 'sw',\n    Ss = 'ss',\n    Sv = 'sv',\n    Tl = 'tl',\n    Ty = 'ty',\n    Tg = 'tg',\n    Ta = 'ta',\n    Tt = 'tt',\n    Te = 'te',\n    Th = 'th',\n    Bo = 'bo',\n    Ti = 'ti',\n    To = 'to',\n    Ts = 'ts',\n    Tn = 'tn',\n    Tr = 'tr',\n    Tk = 'tk',\n    Tw = 'tw',\n    Ug = 'ug',\n    Uk = 'uk',\n    Ur = 'ur',\n    Uz = 'uz',\n    Ve = 've',\n    Vi = 'vi',\n    Vo = 'vo',\n    Wa = 'wa',\n    Cy = 'cy',\n    Wo = 'wo',\n    Xh = 'xh',\n    Ji = 'ji',\n    Yo = 'yo',\n    Za = 'za',\n    Zu = 'zu'\n}\n\nexport function TranslatedTitleV30FromJSON(json: any): TranslatedTitleV30 {\n    return TranslatedTitleV30FromJSONTyped(json, false);\n}\n\nexport function TranslatedTitleV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslatedTitleV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n        'languageCode': json['language-code'],\n    };\n}\n\nexport function TranslatedTitleV30ToJSON(value?: TranslatedTitleV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'language-code': value.languageCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TranslatedTitleV30Rc2\n */\nexport interface TranslatedTitleV30Rc2 {\n    /**\n     * \n     * @type {string}\n     * @memberof TranslatedTitleV30Rc2\n     */\n    value?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TranslatedTitleV30Rc2\n     */\n    languageCode: TranslatedTitleV30Rc2LanguageCodeEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum TranslatedTitleV30Rc2LanguageCodeEnum {\n    Ab = 'ab',\n    Aa = 'aa',\n    Af = 'af',\n    Ak = 'ak',\n    Sq = 'sq',\n    Am = 'am',\n    Ar = 'ar',\n    An = 'an',\n    Hy = 'hy',\n    As = 'as',\n    Av = 'av',\n    Ae = 'ae',\n    Ay = 'ay',\n    Az = 'az',\n    Bm = 'bm',\n    Ba = 'ba',\n    Eu = 'eu',\n    Be = 'be',\n    Bn = 'bn',\n    Bh = 'bh',\n    Bi = 'bi',\n    Bs = 'bs',\n    Br = 'br',\n    Bg = 'bg',\n    My = 'my',\n    Ca = 'ca',\n    Ch = 'ch',\n    Ce = 'ce',\n    ZhCn = 'zh_CN',\n    ZhTw = 'zh_TW',\n    Cu = 'cu',\n    Cv = 'cv',\n    Kw = 'kw',\n    Co = 'co',\n    Cr = 'cr',\n    Hr = 'hr',\n    Cs = 'cs',\n    Da = 'da',\n    Dv = 'dv',\n    Nl = 'nl',\n    Dz = 'dz',\n    En = 'en',\n    Eo = 'eo',\n    Et = 'et',\n    Ee = 'ee',\n    Fo = 'fo',\n    Fj = 'fj',\n    Fi = 'fi',\n    Fr = 'fr',\n    Fy = 'fy',\n    Ff = 'ff',\n    Gl = 'gl',\n    Lg = 'lg',\n    Ka = 'ka',\n    De = 'de',\n    El = 'el',\n    Kl = 'kl',\n    Gn = 'gn',\n    Gu = 'gu',\n    Ht = 'ht',\n    Ha = 'ha',\n    Iw = 'iw',\n    Hz = 'hz',\n    Hi = 'hi',\n    Ho = 'ho',\n    Hu = 'hu',\n    Is = 'is',\n    Io = 'io',\n    Ig = 'ig',\n    In = 'in',\n    Ia = 'ia',\n    Ie = 'ie',\n    Iu = 'iu',\n    Ik = 'ik',\n    Ga = 'ga',\n    It = 'it',\n    Ja = 'ja',\n    Jv = 'jv',\n    Kn = 'kn',\n    Kr = 'kr',\n    Ks = 'ks',\n    Kk = 'kk',\n    Km = 'km',\n    Ki = 'ki',\n    Rw = 'rw',\n    Ky = 'ky',\n    Kv = 'kv',\n    Kg = 'kg',\n    Ko = 'ko',\n    Ku = 'ku',\n    Kj = 'kj',\n    Lo = 'lo',\n    La = 'la',\n    Lv = 'lv',\n    Li = 'li',\n    Ln = 'ln',\n    Lt = 'lt',\n    Lu = 'lu',\n    Lb = 'lb',\n    Mk = 'mk',\n    Mg = 'mg',\n    Ms = 'ms',\n    Ml = 'ml',\n    Mt = 'mt',\n    Gv = 'gv',\n    Mi = 'mi',\n    Mr = 'mr',\n    Mh = 'mh',\n    Mo = 'mo',\n    Mn = 'mn',\n    Na = 'na',\n    Nv = 'nv',\n    Ng = 'ng',\n    Ne = 'ne',\n    Nd = 'nd',\n    Se = 'se',\n    No = 'no',\n    Nb = 'nb',\n    Nn = 'nn',\n    Ny = 'ny',\n    Oc = 'oc',\n    Oj = 'oj',\n    Or = 'or',\n    Om = 'om',\n    Os = 'os',\n    Pi = 'pi',\n    Pa = 'pa',\n    Fa = 'fa',\n    Pl = 'pl',\n    Pt = 'pt',\n    Ps = 'ps',\n    Qu = 'qu',\n    Rm = 'rm',\n    Ro = 'ro',\n    Rn = 'rn',\n    Ru = 'ru',\n    Sm = 'sm',\n    Sg = 'sg',\n    Sa = 'sa',\n    Sc = 'sc',\n    Gd = 'gd',\n    Sr = 'sr',\n    Sn = 'sn',\n    Ii = 'ii',\n    Sd = 'sd',\n    Si = 'si',\n    Sk = 'sk',\n    Sl = 'sl',\n    So = 'so',\n    Nr = 'nr',\n    St = 'st',\n    Es = 'es',\n    Su = 'su',\n    Sw = 'sw',\n    Ss = 'ss',\n    Sv = 'sv',\n    Tl = 'tl',\n    Ty = 'ty',\n    Tg = 'tg',\n    Ta = 'ta',\n    Tt = 'tt',\n    Te = 'te',\n    Th = 'th',\n    Bo = 'bo',\n    Ti = 'ti',\n    To = 'to',\n    Ts = 'ts',\n    Tn = 'tn',\n    Tr = 'tr',\n    Tk = 'tk',\n    Tw = 'tw',\n    Ug = 'ug',\n    Uk = 'uk',\n    Ur = 'ur',\n    Uz = 'uz',\n    Ve = 've',\n    Vi = 'vi',\n    Vo = 'vo',\n    Wa = 'wa',\n    Cy = 'cy',\n    Wo = 'wo',\n    Xh = 'xh',\n    Ji = 'ji',\n    Yo = 'yo',\n    Za = 'za',\n    Zu = 'zu'\n}\n\nexport function TranslatedTitleV30Rc2FromJSON(json: any): TranslatedTitleV30Rc2 {\n    return TranslatedTitleV30Rc2FromJSONTyped(json, false);\n}\n\nexport function TranslatedTitleV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslatedTitleV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n        'languageCode': json['language-code'],\n    };\n}\n\nexport function TranslatedTitleV30Rc2ToJSON(value?: TranslatedTitleV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'language-code': value.languageCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    PublicationDateV20,\n    PublicationDateV20FromJSON,\n    PublicationDateV20FromJSONTyped,\n    PublicationDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    WorkTitleV20,\n    WorkTitleV20FromJSON,\n    WorkTitleV20FromJSONTyped,\n    WorkTitleV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkSummaryV20\n */\nexport interface WorkSummaryV20 {\n    /**\n     * \n     * @type {number}\n     * @memberof WorkSummaryV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof WorkSummaryV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof WorkSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof WorkSummaryV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {WorkTitleV20}\n     * @memberof WorkSummaryV20\n     */\n    title?: WorkTitleV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof WorkSummaryV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV20\n     */\n    type?: WorkSummaryV20TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV20}\n     * @memberof WorkSummaryV20\n     */\n    publicationDate?: PublicationDateV20;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV20\n     */\n    visibility?: WorkSummaryV20VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV20\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV20TypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    Dissertation = 'DISSERTATION',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkSummaryV20FromJSON(json: any): WorkSummaryV20 {\n    return WorkSummaryV20FromJSONTyped(json, false);\n}\n\nexport function WorkSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'title': !exists(json, 'title') ? undefined : WorkTitleV20FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV20FromJSON(json['publication-date']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function WorkSummaryV20ToJSON(value?: WorkSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'put-code': value.putCode,\n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'title': WorkTitleV20ToJSON(value.title),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'type': value.type,\n        'publication-date': PublicationDateV20ToJSON(value.publicationDate),\n        'visibility': value.visibility,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    PublicationDateV30,\n    PublicationDateV30FromJSON,\n    PublicationDateV30FromJSONTyped,\n    PublicationDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    TitleV30,\n    TitleV30FromJSON,\n    TitleV30FromJSONTyped,\n    TitleV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n    WorkTitleV30,\n    WorkTitleV30FromJSON,\n    WorkTitleV30FromJSONTyped,\n    WorkTitleV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkSummaryV30\n */\nexport interface WorkSummaryV30 {\n    /**\n     * \n     * @type {number}\n     * @memberof WorkSummaryV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof WorkSummaryV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof WorkSummaryV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof WorkSummaryV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {WorkTitleV30}\n     * @memberof WorkSummaryV30\n     */\n    title?: WorkTitleV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof WorkSummaryV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof WorkSummaryV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30\n     */\n    type?: WorkSummaryV30TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV30}\n     * @memberof WorkSummaryV30\n     */\n    publicationDate?: PublicationDateV30;\n    /**\n     * \n     * @type {TitleV30}\n     * @memberof WorkSummaryV30\n     */\n    journalTitle?: TitleV30;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30\n     */\n    visibility?: WorkSummaryV30VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV30TypeEnum {\n    Annotation = 'ANNOTATION',\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataManagementPlan = 'DATA_MANAGEMENT_PLAN',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    DissertationThesis = 'DISSERTATION_THESIS',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    PhysicalObject = 'PHYSICAL_OBJECT',\n    Preprint = 'PREPRINT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV30VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkSummaryV30FromJSON(json: any): WorkSummaryV30 {\n    return WorkSummaryV30FromJSONTyped(json, false);\n}\n\nexport function WorkSummaryV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkSummaryV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'title': !exists(json, 'title') ? undefined : WorkTitleV30FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30FromJSON(json['publication-date']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30FromJSON(json['journal-title']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function WorkSummaryV30ToJSON(value?: WorkSummaryV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'put-code': value.putCode,\n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'title': WorkTitleV30ToJSON(value.title),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'url': UrlV30ToJSON(value.url),\n        'type': value.type,\n        'publication-date': PublicationDateV30ToJSON(value.publicationDate),\n        'journal-title': TitleV30ToJSON(value.journalTitle),\n        'visibility': value.visibility,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    PublicationDateV30Rc1,\n    PublicationDateV30Rc1FromJSON,\n    PublicationDateV30Rc1FromJSONTyped,\n    PublicationDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    TitleV30Rc1,\n    TitleV30Rc1FromJSON,\n    TitleV30Rc1FromJSONTyped,\n    TitleV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n    WorkTitleV30Rc1,\n    WorkTitleV30Rc1FromJSON,\n    WorkTitleV30Rc1FromJSONTyped,\n    WorkTitleV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkSummaryV30Rc1\n */\nexport interface WorkSummaryV30Rc1 {\n    /**\n     * \n     * @type {number}\n     * @memberof WorkSummaryV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {WorkTitleV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    title?: WorkTitleV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc1\n     */\n    type?: WorkSummaryV30Rc1TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    publicationDate?: PublicationDateV30Rc1;\n    /**\n     * \n     * @type {TitleV30Rc1}\n     * @memberof WorkSummaryV30Rc1\n     */\n    journalTitle?: TitleV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc1\n     */\n    visibility?: WorkSummaryV30Rc1VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc1\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV30Rc1TypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    Dissertation = 'DISSERTATION',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    Preprint = 'PREPRINT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkSummaryV30Rc1FromJSON(json: any): WorkSummaryV30Rc1 {\n    return WorkSummaryV30Rc1FromJSONTyped(json, false);\n}\n\nexport function WorkSummaryV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkSummaryV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'title': !exists(json, 'title') ? undefined : WorkTitleV30Rc1FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30Rc1FromJSON(json['publication-date']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30Rc1FromJSON(json['journal-title']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function WorkSummaryV30Rc1ToJSON(value?: WorkSummaryV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'put-code': value.putCode,\n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'title': WorkTitleV30Rc1ToJSON(value.title),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'type': value.type,\n        'publication-date': PublicationDateV30Rc1ToJSON(value.publicationDate),\n        'journal-title': TitleV30Rc1ToJSON(value.journalTitle),\n        'visibility': value.visibility,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    PublicationDateV30Rc2,\n    PublicationDateV30Rc2FromJSON,\n    PublicationDateV30Rc2FromJSONTyped,\n    PublicationDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    TitleV30Rc2,\n    TitleV30Rc2FromJSON,\n    TitleV30Rc2FromJSONTyped,\n    TitleV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n    WorkTitleV30Rc2,\n    WorkTitleV30Rc2FromJSON,\n    WorkTitleV30Rc2FromJSONTyped,\n    WorkTitleV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkSummaryV30Rc2\n */\nexport interface WorkSummaryV30Rc2 {\n    /**\n     * \n     * @type {number}\n     * @memberof WorkSummaryV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {WorkTitleV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    title?: WorkTitleV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc2\n     */\n    type?: WorkSummaryV30Rc2TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    publicationDate?: PublicationDateV30Rc2;\n    /**\n     * \n     * @type {TitleV30Rc2}\n     * @memberof WorkSummaryV30Rc2\n     */\n    journalTitle?: TitleV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc2\n     */\n    visibility?: WorkSummaryV30Rc2VisibilityEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkSummaryV30Rc2\n     */\n    displayIndex?: string;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV30Rc2TypeEnum {\n    Annotation = 'ANNOTATION',\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataManagementPlan = 'DATA_MANAGEMENT_PLAN',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    DissertationThesis = 'DISSERTATION_THESIS',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    PhysicalObject = 'PHYSICAL_OBJECT',\n    Preprint = 'PREPRINT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkSummaryV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkSummaryV30Rc2FromJSON(json: any): WorkSummaryV30Rc2 {\n    return WorkSummaryV30Rc2FromJSONTyped(json, false);\n}\n\nexport function WorkSummaryV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkSummaryV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'title': !exists(json, 'title') ? undefined : WorkTitleV30Rc2FromJSON(json['title']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30Rc2FromJSON(json['publication-date']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30Rc2FromJSON(json['journal-title']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'displayIndex': !exists(json, 'display-index') ? undefined : json['display-index'],\n    };\n}\n\nexport function WorkSummaryV30Rc2ToJSON(value?: WorkSummaryV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'put-code': value.putCode,\n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'title': WorkTitleV30Rc2ToJSON(value.title),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'type': value.type,\n        'publication-date': PublicationDateV30Rc2ToJSON(value.publicationDate),\n        'journal-title': TitleV30Rc2ToJSON(value.journalTitle),\n        'visibility': value.visibility,\n        'path': value.path,\n        'display-index': value.displayIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Citation,\n    CitationFromJSON,\n    CitationFromJSONTyped,\n    CitationToJSON,\n    CountryV20,\n    CountryV20FromJSON,\n    CountryV20FromJSONTyped,\n    CountryV20ToJSON,\n    CreatedDateV20,\n    CreatedDateV20FromJSON,\n    CreatedDateV20FromJSONTyped,\n    CreatedDateV20ToJSON,\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    PublicationDateV20,\n    PublicationDateV20FromJSON,\n    PublicationDateV20FromJSONTyped,\n    PublicationDateV20ToJSON,\n    SourceV20,\n    SourceV20FromJSON,\n    SourceV20FromJSONTyped,\n    SourceV20ToJSON,\n    TitleV20,\n    TitleV20FromJSON,\n    TitleV20FromJSONTyped,\n    TitleV20ToJSON,\n    UrlV20,\n    UrlV20FromJSON,\n    UrlV20FromJSONTyped,\n    UrlV20ToJSON,\n    WorkContributorsV20,\n    WorkContributorsV20FromJSON,\n    WorkContributorsV20FromJSONTyped,\n    WorkContributorsV20ToJSON,\n    WorkTitleV20,\n    WorkTitleV20FromJSON,\n    WorkTitleV20FromJSONTyped,\n    WorkTitleV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkV20\n */\nexport interface WorkV20 {\n    /**\n     * \n     * @type {CreatedDateV20}\n     * @memberof WorkV20\n     */\n    createdDate?: CreatedDateV20;\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof WorkV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {SourceV20}\n     * @memberof WorkV20\n     */\n    source?: SourceV20;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkV20\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {WorkTitleV20}\n     * @memberof WorkV20\n     */\n    title?: WorkTitleV20;\n    /**\n     * \n     * @type {TitleV20}\n     * @memberof WorkV20\n     */\n    journalTitle?: TitleV20;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV20\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {Citation}\n     * @memberof WorkV20\n     */\n    citation?: Citation;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV20\n     */\n    type?: WorkV20TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV20}\n     * @memberof WorkV20\n     */\n    publicationDate?: PublicationDateV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof WorkV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {UrlV20}\n     * @memberof WorkV20\n     */\n    url?: UrlV20;\n    /**\n     * \n     * @type {WorkContributorsV20}\n     * @memberof WorkV20\n     */\n    contributors?: WorkContributorsV20;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV20\n     */\n    languageCode?: string;\n    /**\n     * \n     * @type {CountryV20}\n     * @memberof WorkV20\n     */\n    country?: CountryV20;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV20\n     */\n    visibility?: WorkV20VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV20TypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    Dissertation = 'DISSERTATION',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV20VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkV20FromJSON(json: any): WorkV20 {\n    return WorkV20FromJSONTyped(json, false);\n}\n\nexport function WorkV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV20FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV20FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'title': !exists(json, 'title') ? undefined : WorkTitleV20FromJSON(json['title']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV20FromJSON(json['journal-title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'citation': !exists(json, 'citation') ? undefined : CitationFromJSON(json['citation']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV20FromJSON(json['publication-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV20FromJSON(json['url']),\n        'contributors': !exists(json, 'contributors') ? undefined : WorkContributorsV20FromJSON(json['contributors']),\n        'languageCode': !exists(json, 'language-code') ? undefined : json['language-code'],\n        'country': !exists(json, 'country') ? undefined : CountryV20FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function WorkV20ToJSON(value?: WorkV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV20ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'source': SourceV20ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'title': WorkTitleV20ToJSON(value.title),\n        'journal-title': TitleV20ToJSON(value.journalTitle),\n        'short-description': value.shortDescription,\n        'citation': CitationToJSON(value.citation),\n        'type': value.type,\n        'publication-date': PublicationDateV20ToJSON(value.publicationDate),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'url': UrlV20ToJSON(value.url),\n        'contributors': WorkContributorsV20ToJSON(value.contributors),\n        'language-code': value.languageCode,\n        'country': CountryV20ToJSON(value.country),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Citation,\n    CitationFromJSON,\n    CitationFromJSONTyped,\n    CitationToJSON,\n    CountryV30,\n    CountryV30FromJSON,\n    CountryV30FromJSONTyped,\n    CountryV30ToJSON,\n    CreatedDateV30,\n    CreatedDateV30FromJSON,\n    CreatedDateV30FromJSONTyped,\n    CreatedDateV30ToJSON,\n    ExternalIDsV30,\n    ExternalIDsV30FromJSON,\n    ExternalIDsV30FromJSONTyped,\n    ExternalIDsV30ToJSON,\n    LastModifiedDateV30,\n    LastModifiedDateV30FromJSON,\n    LastModifiedDateV30FromJSONTyped,\n    LastModifiedDateV30ToJSON,\n    PublicationDateV30,\n    PublicationDateV30FromJSON,\n    PublicationDateV30FromJSONTyped,\n    PublicationDateV30ToJSON,\n    SourceV30,\n    SourceV30FromJSON,\n    SourceV30FromJSONTyped,\n    SourceV30ToJSON,\n    TitleV30,\n    TitleV30FromJSON,\n    TitleV30FromJSONTyped,\n    TitleV30ToJSON,\n    UrlV30,\n    UrlV30FromJSON,\n    UrlV30FromJSONTyped,\n    UrlV30ToJSON,\n    WorkContributorsV30,\n    WorkContributorsV30FromJSON,\n    WorkContributorsV30FromJSONTyped,\n    WorkContributorsV30ToJSON,\n    WorkTitleV30,\n    WorkTitleV30FromJSON,\n    WorkTitleV30FromJSONTyped,\n    WorkTitleV30ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkV30\n */\nexport interface WorkV30 {\n    /**\n     * \n     * @type {CreatedDateV30}\n     * @memberof WorkV30\n     */\n    createdDate?: CreatedDateV30;\n    /**\n     * \n     * @type {LastModifiedDateV30}\n     * @memberof WorkV30\n     */\n    lastModifiedDate?: LastModifiedDateV30;\n    /**\n     * \n     * @type {SourceV30}\n     * @memberof WorkV30\n     */\n    source?: SourceV30;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkV30\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30\n     */\n    path?: string;\n    /**\n     * \n     * @type {WorkTitleV30}\n     * @memberof WorkV30\n     */\n    title?: WorkTitleV30;\n    /**\n     * \n     * @type {TitleV30}\n     * @memberof WorkV30\n     */\n    journalTitle?: TitleV30;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {Citation}\n     * @memberof WorkV30\n     */\n    citation?: Citation;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30\n     */\n    type?: WorkV30TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV30}\n     * @memberof WorkV30\n     */\n    publicationDate?: PublicationDateV30;\n    /**\n     * \n     * @type {ExternalIDsV30}\n     * @memberof WorkV30\n     */\n    externalIds?: ExternalIDsV30;\n    /**\n     * \n     * @type {UrlV30}\n     * @memberof WorkV30\n     */\n    url?: UrlV30;\n    /**\n     * \n     * @type {WorkContributorsV30}\n     * @memberof WorkV30\n     */\n    contributors?: WorkContributorsV30;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30\n     */\n    languageCode?: WorkV30LanguageCodeEnum;\n    /**\n     * \n     * @type {CountryV30}\n     * @memberof WorkV30\n     */\n    country?: CountryV30;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30\n     */\n    visibility?: WorkV30VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30TypeEnum {\n    Annotation = 'annotation',\n    ArtisticPerformance = 'artistic-performance',\n    BookChapter = 'book-chapter',\n    BookReview = 'book-review',\n    Book = 'book',\n    ConferenceAbstract = 'conference-abstract',\n    ConferencePaper = 'conference-paper',\n    ConferencePoster = 'conference-poster',\n    DataManagementPlan = 'data-management-plan',\n    DataSet = 'data-set',\n    DictionaryEntry = 'dictionary-entry',\n    Disclosure = 'disclosure',\n    DissertationThesis = 'dissertation-thesis',\n    EditedBook = 'edited-book',\n    EncyclopediaEntry = 'encyclopedia-entry',\n    Invention = 'invention',\n    JournalArticle = 'journal-article',\n    JournalIssue = 'journal-issue',\n    LectureSpeech = 'lecture-speech',\n    License = 'license',\n    MagazineArticle = 'magazine-article',\n    Manual = 'manual',\n    NewsletterArticle = 'newsletter-article',\n    NewspaperArticle = 'newspaper-article',\n    OnlineResource = 'online-resource',\n    Other = 'other',\n    Patent = 'patent',\n    PhysicalObject = 'physical-object',\n    Preprint = 'preprint',\n    RegisteredCopyright = 'registered-copyright',\n    Report = 'report',\n    ResearchTechnique = 'research-technique',\n    ResearchTool = 'research-tool',\n    Software = 'software',\n    SpinOffCompany = 'spin-off-company',\n    StandardsAndPolicy = 'standards-and-policy',\n    SupervisedStudentPublication = 'supervised-student-publication',\n    TechnicalStandard = 'technical-standard',\n    Test = 'test',\n    Trademark = 'trademark',\n    Translation = 'translation',\n    Website = 'website',\n    WorkingPaper = 'working-paper',\n    Undefined = 'undefined'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30LanguageCodeEnum {\n    Ab = 'ab',\n    Aa = 'aa',\n    Af = 'af',\n    Ak = 'ak',\n    Sq = 'sq',\n    Am = 'am',\n    Ar = 'ar',\n    An = 'an',\n    Hy = 'hy',\n    As = 'as',\n    Av = 'av',\n    Ae = 'ae',\n    Ay = 'ay',\n    Az = 'az',\n    Bm = 'bm',\n    Ba = 'ba',\n    Eu = 'eu',\n    Be = 'be',\n    Bn = 'bn',\n    Bh = 'bh',\n    Bi = 'bi',\n    Bs = 'bs',\n    Br = 'br',\n    Bg = 'bg',\n    My = 'my',\n    Ca = 'ca',\n    Ch = 'ch',\n    Ce = 'ce',\n    ZhCn = 'zh_CN',\n    ZhTw = 'zh_TW',\n    Cu = 'cu',\n    Cv = 'cv',\n    Kw = 'kw',\n    Co = 'co',\n    Cr = 'cr',\n    Hr = 'hr',\n    Cs = 'cs',\n    Da = 'da',\n    Dv = 'dv',\n    Nl = 'nl',\n    Dz = 'dz',\n    En = 'en',\n    Eo = 'eo',\n    Et = 'et',\n    Ee = 'ee',\n    Fo = 'fo',\n    Fj = 'fj',\n    Fi = 'fi',\n    Fr = 'fr',\n    Fy = 'fy',\n    Ff = 'ff',\n    Gl = 'gl',\n    Lg = 'lg',\n    Ka = 'ka',\n    De = 'de',\n    El = 'el',\n    Kl = 'kl',\n    Gn = 'gn',\n    Gu = 'gu',\n    Ht = 'ht',\n    Ha = 'ha',\n    Iw = 'iw',\n    Hz = 'hz',\n    Hi = 'hi',\n    Ho = 'ho',\n    Hu = 'hu',\n    Is = 'is',\n    Io = 'io',\n    Ig = 'ig',\n    In = 'in',\n    Ia = 'ia',\n    Ie = 'ie',\n    Iu = 'iu',\n    Ik = 'ik',\n    Ga = 'ga',\n    It = 'it',\n    Ja = 'ja',\n    Jv = 'jv',\n    Kn = 'kn',\n    Kr = 'kr',\n    Ks = 'ks',\n    Kk = 'kk',\n    Km = 'km',\n    Ki = 'ki',\n    Rw = 'rw',\n    Ky = 'ky',\n    Kv = 'kv',\n    Kg = 'kg',\n    Ko = 'ko',\n    Ku = 'ku',\n    Kj = 'kj',\n    Lo = 'lo',\n    La = 'la',\n    Lv = 'lv',\n    Li = 'li',\n    Ln = 'ln',\n    Lt = 'lt',\n    Lu = 'lu',\n    Lb = 'lb',\n    Mk = 'mk',\n    Mg = 'mg',\n    Ms = 'ms',\n    Ml = 'ml',\n    Mt = 'mt',\n    Gv = 'gv',\n    Mi = 'mi',\n    Mr = 'mr',\n    Mh = 'mh',\n    Mo = 'mo',\n    Mn = 'mn',\n    Na = 'na',\n    Nv = 'nv',\n    Ng = 'ng',\n    Ne = 'ne',\n    Nd = 'nd',\n    Se = 'se',\n    No = 'no',\n    Nb = 'nb',\n    Nn = 'nn',\n    Ny = 'ny',\n    Oc = 'oc',\n    Oj = 'oj',\n    Or = 'or',\n    Om = 'om',\n    Os = 'os',\n    Pi = 'pi',\n    Pa = 'pa',\n    Fa = 'fa',\n    Pl = 'pl',\n    Pt = 'pt',\n    Ps = 'ps',\n    Qu = 'qu',\n    Rm = 'rm',\n    Ro = 'ro',\n    Rn = 'rn',\n    Ru = 'ru',\n    Sm = 'sm',\n    Sg = 'sg',\n    Sa = 'sa',\n    Sc = 'sc',\n    Gd = 'gd',\n    Sr = 'sr',\n    Sn = 'sn',\n    Ii = 'ii',\n    Sd = 'sd',\n    Si = 'si',\n    Sk = 'sk',\n    Sl = 'sl',\n    So = 'so',\n    Nr = 'nr',\n    St = 'st',\n    Es = 'es',\n    Su = 'su',\n    Sw = 'sw',\n    Ss = 'ss',\n    Sv = 'sv',\n    Tl = 'tl',\n    Ty = 'ty',\n    Tg = 'tg',\n    Ta = 'ta',\n    Tt = 'tt',\n    Te = 'te',\n    Th = 'th',\n    Bo = 'bo',\n    Ti = 'ti',\n    To = 'to',\n    Ts = 'ts',\n    Tn = 'tn',\n    Tr = 'tr',\n    Tk = 'tk',\n    Tw = 'tw',\n    Ug = 'ug',\n    Uk = 'uk',\n    Ur = 'ur',\n    Uz = 'uz',\n    Ve = 've',\n    Vi = 'vi',\n    Vo = 'vo',\n    Wa = 'wa',\n    Cy = 'cy',\n    Wo = 'wo',\n    Xh = 'xh',\n    Ji = 'ji',\n    Yo = 'yo',\n    Za = 'za',\n    Zu = 'zu'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30VisibilityEnum {\n    Limited = 'limited',\n    RegisteredOnly = 'registered-only',\n    Public = 'public'\n}\n\nexport function WorkV30FromJSON(json: any): WorkV30 {\n    return WorkV30FromJSONTyped(json, false);\n}\n\nexport function WorkV30FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkV30 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'title': !exists(json, 'title') ? undefined : WorkTitleV30FromJSON(json['title']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30FromJSON(json['journal-title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'citation': !exists(json, 'citation') ? undefined : CitationFromJSON(json['citation']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30FromJSON(json['publication-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30FromJSON(json['url']),\n        'contributors': !exists(json, 'contributors') ? undefined : WorkContributorsV30FromJSON(json['contributors']),\n        'languageCode': !exists(json, 'language-code') ? undefined : json['language-code'],\n        'country': !exists(json, 'country') ? undefined : CountryV30FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function WorkV30ToJSON(value?: WorkV30 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30ToJSON(value.lastModifiedDate),\n        'source': SourceV30ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'title': WorkTitleV30ToJSON(value.title),\n        'journal-title': TitleV30ToJSON(value.journalTitle),\n        'short-description': value.shortDescription,\n        'citation': CitationToJSON(value.citation),\n        'type': value.type,\n        'publication-date': PublicationDateV30ToJSON(value.publicationDate),\n        'external-ids': ExternalIDsV30ToJSON(value.externalIds),\n        'url': UrlV30ToJSON(value.url),\n        'contributors': WorkContributorsV30ToJSON(value.contributors),\n        'language-code': value.languageCode,\n        'country': CountryV30ToJSON(value.country),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Citation,\n    CitationFromJSON,\n    CitationFromJSONTyped,\n    CitationToJSON,\n    CountryV30Rc1,\n    CountryV30Rc1FromJSON,\n    CountryV30Rc1FromJSONTyped,\n    CountryV30Rc1ToJSON,\n    CreatedDateV30Rc1,\n    CreatedDateV30Rc1FromJSON,\n    CreatedDateV30Rc1FromJSONTyped,\n    CreatedDateV30Rc1ToJSON,\n    ExternalIDsV30Rc1,\n    ExternalIDsV30Rc1FromJSON,\n    ExternalIDsV30Rc1FromJSONTyped,\n    ExternalIDsV30Rc1ToJSON,\n    LastModifiedDateV30Rc1,\n    LastModifiedDateV30Rc1FromJSON,\n    LastModifiedDateV30Rc1FromJSONTyped,\n    LastModifiedDateV30Rc1ToJSON,\n    PublicationDateV30Rc1,\n    PublicationDateV30Rc1FromJSON,\n    PublicationDateV30Rc1FromJSONTyped,\n    PublicationDateV30Rc1ToJSON,\n    SourceV30Rc1,\n    SourceV30Rc1FromJSON,\n    SourceV30Rc1FromJSONTyped,\n    SourceV30Rc1ToJSON,\n    TitleV30Rc1,\n    TitleV30Rc1FromJSON,\n    TitleV30Rc1FromJSONTyped,\n    TitleV30Rc1ToJSON,\n    UrlV30Rc1,\n    UrlV30Rc1FromJSON,\n    UrlV30Rc1FromJSONTyped,\n    UrlV30Rc1ToJSON,\n    WorkContributorsV30Rc1,\n    WorkContributorsV30Rc1FromJSON,\n    WorkContributorsV30Rc1FromJSONTyped,\n    WorkContributorsV30Rc1ToJSON,\n    WorkTitleV30Rc1,\n    WorkTitleV30Rc1FromJSON,\n    WorkTitleV30Rc1FromJSONTyped,\n    WorkTitleV30Rc1ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkV30Rc1\n */\nexport interface WorkV30Rc1 {\n    /**\n     * \n     * @type {CreatedDateV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    createdDate?: CreatedDateV30Rc1;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc1;\n    /**\n     * \n     * @type {SourceV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    source?: SourceV30Rc1;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkV30Rc1\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc1\n     */\n    path?: string;\n    /**\n     * \n     * @type {WorkTitleV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    title?: WorkTitleV30Rc1;\n    /**\n     * \n     * @type {TitleV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    journalTitle?: TitleV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc1\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {Citation}\n     * @memberof WorkV30Rc1\n     */\n    citation?: Citation;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc1\n     */\n    type?: WorkV30Rc1TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    publicationDate?: PublicationDateV30Rc1;\n    /**\n     * \n     * @type {ExternalIDsV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    externalIds?: ExternalIDsV30Rc1;\n    /**\n     * \n     * @type {UrlV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    url?: UrlV30Rc1;\n    /**\n     * \n     * @type {WorkContributorsV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    contributors?: WorkContributorsV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc1\n     */\n    languageCode?: string;\n    /**\n     * \n     * @type {CountryV30Rc1}\n     * @memberof WorkV30Rc1\n     */\n    country?: CountryV30Rc1;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc1\n     */\n    visibility?: WorkV30Rc1VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30Rc1TypeEnum {\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    Dissertation = 'DISSERTATION',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    Preprint = 'PREPRINT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30Rc1VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkV30Rc1FromJSON(json: any): WorkV30Rc1 {\n    return WorkV30Rc1FromJSONTyped(json, false);\n}\n\nexport function WorkV30Rc1FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkV30Rc1 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc1FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc1FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc1FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'title': !exists(json, 'title') ? undefined : WorkTitleV30Rc1FromJSON(json['title']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30Rc1FromJSON(json['journal-title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'citation': !exists(json, 'citation') ? undefined : CitationFromJSON(json['citation']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30Rc1FromJSON(json['publication-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc1FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc1FromJSON(json['url']),\n        'contributors': !exists(json, 'contributors') ? undefined : WorkContributorsV30Rc1FromJSON(json['contributors']),\n        'languageCode': !exists(json, 'language-code') ? undefined : json['language-code'],\n        'country': !exists(json, 'country') ? undefined : CountryV30Rc1FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function WorkV30Rc1ToJSON(value?: WorkV30Rc1 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc1ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc1ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc1ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'title': WorkTitleV30Rc1ToJSON(value.title),\n        'journal-title': TitleV30Rc1ToJSON(value.journalTitle),\n        'short-description': value.shortDescription,\n        'citation': CitationToJSON(value.citation),\n        'type': value.type,\n        'publication-date': PublicationDateV30Rc1ToJSON(value.publicationDate),\n        'external-ids': ExternalIDsV30Rc1ToJSON(value.externalIds),\n        'url': UrlV30Rc1ToJSON(value.url),\n        'contributors': WorkContributorsV30Rc1ToJSON(value.contributors),\n        'language-code': value.languageCode,\n        'country': CountryV30Rc1ToJSON(value.country),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Citation,\n    CitationFromJSON,\n    CitationFromJSONTyped,\n    CitationToJSON,\n    CountryV30Rc2,\n    CountryV30Rc2FromJSON,\n    CountryV30Rc2FromJSONTyped,\n    CountryV30Rc2ToJSON,\n    CreatedDateV30Rc2,\n    CreatedDateV30Rc2FromJSON,\n    CreatedDateV30Rc2FromJSONTyped,\n    CreatedDateV30Rc2ToJSON,\n    ExternalIDsV30Rc2,\n    ExternalIDsV30Rc2FromJSON,\n    ExternalIDsV30Rc2FromJSONTyped,\n    ExternalIDsV30Rc2ToJSON,\n    LastModifiedDateV30Rc2,\n    LastModifiedDateV30Rc2FromJSON,\n    LastModifiedDateV30Rc2FromJSONTyped,\n    LastModifiedDateV30Rc2ToJSON,\n    PublicationDateV30Rc2,\n    PublicationDateV30Rc2FromJSON,\n    PublicationDateV30Rc2FromJSONTyped,\n    PublicationDateV30Rc2ToJSON,\n    SourceV30Rc2,\n    SourceV30Rc2FromJSON,\n    SourceV30Rc2FromJSONTyped,\n    SourceV30Rc2ToJSON,\n    TitleV30Rc2,\n    TitleV30Rc2FromJSON,\n    TitleV30Rc2FromJSONTyped,\n    TitleV30Rc2ToJSON,\n    UrlV30Rc2,\n    UrlV30Rc2FromJSON,\n    UrlV30Rc2FromJSONTyped,\n    UrlV30Rc2ToJSON,\n    WorkContributorsV30Rc2,\n    WorkContributorsV30Rc2FromJSON,\n    WorkContributorsV30Rc2FromJSONTyped,\n    WorkContributorsV30Rc2ToJSON,\n    WorkTitleV30Rc2,\n    WorkTitleV30Rc2FromJSON,\n    WorkTitleV30Rc2FromJSONTyped,\n    WorkTitleV30Rc2ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkV30Rc2\n */\nexport interface WorkV30Rc2 {\n    /**\n     * \n     * @type {CreatedDateV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    createdDate?: CreatedDateV30Rc2;\n    /**\n     * \n     * @type {LastModifiedDateV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    lastModifiedDate?: LastModifiedDateV30Rc2;\n    /**\n     * \n     * @type {SourceV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    source?: SourceV30Rc2;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkV30Rc2\n     */\n    putCode?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc2\n     */\n    path?: string;\n    /**\n     * \n     * @type {WorkTitleV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    title?: WorkTitleV30Rc2;\n    /**\n     * \n     * @type {TitleV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    journalTitle?: TitleV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc2\n     */\n    shortDescription?: string;\n    /**\n     * \n     * @type {Citation}\n     * @memberof WorkV30Rc2\n     */\n    citation?: Citation;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc2\n     */\n    type?: WorkV30Rc2TypeEnum;\n    /**\n     * \n     * @type {PublicationDateV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    publicationDate?: PublicationDateV30Rc2;\n    /**\n     * \n     * @type {ExternalIDsV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    externalIds?: ExternalIDsV30Rc2;\n    /**\n     * \n     * @type {UrlV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    url?: UrlV30Rc2;\n    /**\n     * \n     * @type {WorkContributorsV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    contributors?: WorkContributorsV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc2\n     */\n    languageCode?: WorkV30Rc2LanguageCodeEnum;\n    /**\n     * \n     * @type {CountryV30Rc2}\n     * @memberof WorkV30Rc2\n     */\n    country?: CountryV30Rc2;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkV30Rc2\n     */\n    visibility?: WorkV30Rc2VisibilityEnum;\n}\n\n/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30Rc2TypeEnum {\n    Annotation = 'ANNOTATION',\n    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',\n    BookChapter = 'BOOK_CHAPTER',\n    BookReview = 'BOOK_REVIEW',\n    Book = 'BOOK',\n    ConferenceAbstract = 'CONFERENCE_ABSTRACT',\n    ConferencePaper = 'CONFERENCE_PAPER',\n    ConferencePoster = 'CONFERENCE_POSTER',\n    DataManagementPlan = 'DATA_MANAGEMENT_PLAN',\n    DataSet = 'DATA_SET',\n    DictionaryEntry = 'DICTIONARY_ENTRY',\n    Disclosure = 'DISCLOSURE',\n    DissertationThesis = 'DISSERTATION_THESIS',\n    EditedBook = 'EDITED_BOOK',\n    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',\n    Invention = 'INVENTION',\n    JournalArticle = 'JOURNAL_ARTICLE',\n    JournalIssue = 'JOURNAL_ISSUE',\n    LectureSpeech = 'LECTURE_SPEECH',\n    License = 'LICENSE',\n    MagazineArticle = 'MAGAZINE_ARTICLE',\n    Manual = 'MANUAL',\n    NewsletterArticle = 'NEWSLETTER_ARTICLE',\n    NewspaperArticle = 'NEWSPAPER_ARTICLE',\n    OnlineResource = 'ONLINE_RESOURCE',\n    Other = 'OTHER',\n    Patent = 'PATENT',\n    PhysicalObject = 'PHYSICAL_OBJECT',\n    Preprint = 'PREPRINT',\n    RegisteredCopyright = 'REGISTERED_COPYRIGHT',\n    Report = 'REPORT',\n    ResearchTechnique = 'RESEARCH_TECHNIQUE',\n    ResearchTool = 'RESEARCH_TOOL',\n    Software = 'SOFTWARE',\n    SpinOffCompany = 'SPIN_OFF_COMPANY',\n    StandardsAndPolicy = 'STANDARDS_AND_POLICY',\n    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',\n    TechnicalStandard = 'TECHNICAL_STANDARD',\n    Test = 'TEST',\n    Trademark = 'TRADEMARK',\n    Translation = 'TRANSLATION',\n    Website = 'WEBSITE',\n    WorkingPaper = 'WORKING_PAPER',\n    Undefined = 'UNDEFINED'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30Rc2LanguageCodeEnum {\n    Ab = 'ab',\n    Aa = 'aa',\n    Af = 'af',\n    Ak = 'ak',\n    Sq = 'sq',\n    Am = 'am',\n    Ar = 'ar',\n    An = 'an',\n    Hy = 'hy',\n    As = 'as',\n    Av = 'av',\n    Ae = 'ae',\n    Ay = 'ay',\n    Az = 'az',\n    Bm = 'bm',\n    Ba = 'ba',\n    Eu = 'eu',\n    Be = 'be',\n    Bn = 'bn',\n    Bh = 'bh',\n    Bi = 'bi',\n    Bs = 'bs',\n    Br = 'br',\n    Bg = 'bg',\n    My = 'my',\n    Ca = 'ca',\n    Ch = 'ch',\n    Ce = 'ce',\n    ZhCn = 'zh_CN',\n    ZhTw = 'zh_TW',\n    Cu = 'cu',\n    Cv = 'cv',\n    Kw = 'kw',\n    Co = 'co',\n    Cr = 'cr',\n    Hr = 'hr',\n    Cs = 'cs',\n    Da = 'da',\n    Dv = 'dv',\n    Nl = 'nl',\n    Dz = 'dz',\n    En = 'en',\n    Eo = 'eo',\n    Et = 'et',\n    Ee = 'ee',\n    Fo = 'fo',\n    Fj = 'fj',\n    Fi = 'fi',\n    Fr = 'fr',\n    Fy = 'fy',\n    Ff = 'ff',\n    Gl = 'gl',\n    Lg = 'lg',\n    Ka = 'ka',\n    De = 'de',\n    El = 'el',\n    Kl = 'kl',\n    Gn = 'gn',\n    Gu = 'gu',\n    Ht = 'ht',\n    Ha = 'ha',\n    Iw = 'iw',\n    Hz = 'hz',\n    Hi = 'hi',\n    Ho = 'ho',\n    Hu = 'hu',\n    Is = 'is',\n    Io = 'io',\n    Ig = 'ig',\n    In = 'in',\n    Ia = 'ia',\n    Ie = 'ie',\n    Iu = 'iu',\n    Ik = 'ik',\n    Ga = 'ga',\n    It = 'it',\n    Ja = 'ja',\n    Jv = 'jv',\n    Kn = 'kn',\n    Kr = 'kr',\n    Ks = 'ks',\n    Kk = 'kk',\n    Km = 'km',\n    Ki = 'ki',\n    Rw = 'rw',\n    Ky = 'ky',\n    Kv = 'kv',\n    Kg = 'kg',\n    Ko = 'ko',\n    Ku = 'ku',\n    Kj = 'kj',\n    Lo = 'lo',\n    La = 'la',\n    Lv = 'lv',\n    Li = 'li',\n    Ln = 'ln',\n    Lt = 'lt',\n    Lu = 'lu',\n    Lb = 'lb',\n    Mk = 'mk',\n    Mg = 'mg',\n    Ms = 'ms',\n    Ml = 'ml',\n    Mt = 'mt',\n    Gv = 'gv',\n    Mi = 'mi',\n    Mr = 'mr',\n    Mh = 'mh',\n    Mo = 'mo',\n    Mn = 'mn',\n    Na = 'na',\n    Nv = 'nv',\n    Ng = 'ng',\n    Ne = 'ne',\n    Nd = 'nd',\n    Se = 'se',\n    No = 'no',\n    Nb = 'nb',\n    Nn = 'nn',\n    Ny = 'ny',\n    Oc = 'oc',\n    Oj = 'oj',\n    Or = 'or',\n    Om = 'om',\n    Os = 'os',\n    Pi = 'pi',\n    Pa = 'pa',\n    Fa = 'fa',\n    Pl = 'pl',\n    Pt = 'pt',\n    Ps = 'ps',\n    Qu = 'qu',\n    Rm = 'rm',\n    Ro = 'ro',\n    Rn = 'rn',\n    Ru = 'ru',\n    Sm = 'sm',\n    Sg = 'sg',\n    Sa = 'sa',\n    Sc = 'sc',\n    Gd = 'gd',\n    Sr = 'sr',\n    Sn = 'sn',\n    Ii = 'ii',\n    Sd = 'sd',\n    Si = 'si',\n    Sk = 'sk',\n    Sl = 'sl',\n    So = 'so',\n    Nr = 'nr',\n    St = 'st',\n    Es = 'es',\n    Su = 'su',\n    Sw = 'sw',\n    Ss = 'ss',\n    Sv = 'sv',\n    Tl = 'tl',\n    Ty = 'ty',\n    Tg = 'tg',\n    Ta = 'ta',\n    Tt = 'tt',\n    Te = 'te',\n    Th = 'th',\n    Bo = 'bo',\n    Ti = 'ti',\n    To = 'to',\n    Ts = 'ts',\n    Tn = 'tn',\n    Tr = 'tr',\n    Tk = 'tk',\n    Tw = 'tw',\n    Ug = 'ug',\n    Uk = 'uk',\n    Ur = 'ur',\n    Uz = 'uz',\n    Ve = 've',\n    Vi = 'vi',\n    Vo = 'vo',\n    Wa = 'wa',\n    Cy = 'cy',\n    Wo = 'wo',\n    Xh = 'xh',\n    Ji = 'ji',\n    Yo = 'yo',\n    Za = 'za',\n    Zu = 'zu'\n}/**\n* @export\n* @enum {string}\n*/\nexport enum WorkV30Rc2VisibilityEnum {\n    Limited = 'LIMITED',\n    RegisteredOnly = 'REGISTERED_ONLY',\n    Public = 'PUBLIC',\n    Private = 'PRIVATE'\n}\n\nexport function WorkV30Rc2FromJSON(json: any): WorkV30Rc2 {\n    return WorkV30Rc2FromJSONTyped(json, false);\n}\n\nexport function WorkV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkV30Rc2 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),\n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),\n        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),\n        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'title': !exists(json, 'title') ? undefined : WorkTitleV30Rc2FromJSON(json['title']),\n        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30Rc2FromJSON(json['journal-title']),\n        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],\n        'citation': !exists(json, 'citation') ? undefined : CitationFromJSON(json['citation']),\n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30Rc2FromJSON(json['publication-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),\n        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),\n        'contributors': !exists(json, 'contributors') ? undefined : WorkContributorsV30Rc2FromJSON(json['contributors']),\n        'languageCode': !exists(json, 'language-code') ? undefined : json['language-code'],\n        'country': !exists(json, 'country') ? undefined : CountryV30Rc2FromJSON(json['country']),\n        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],\n    };\n}\n\nexport function WorkV30Rc2ToJSON(value?: WorkV30Rc2 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),\n        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),\n        'source': SourceV30Rc2ToJSON(value.source),\n        'put-code': value.putCode,\n        'path': value.path,\n        'title': WorkTitleV30Rc2ToJSON(value.title),\n        'journal-title': TitleV30Rc2ToJSON(value.journalTitle),\n        'short-description': value.shortDescription,\n        'citation': CitationToJSON(value.citation),\n        'type': value.type,\n        'publication-date': PublicationDateV30Rc2ToJSON(value.publicationDate),\n        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),\n        'url': UrlV30Rc2ToJSON(value.url),\n        'contributors': WorkContributorsV30Rc2ToJSON(value.contributors),\n        'language-code': value.languageCode,\n        'country': CountryV30Rc2ToJSON(value.country),\n        'visibility': value.visibility,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ClientSummary\n */\nexport interface ClientSummary {\n    /**\n     * \n     * @type {string}\n     * @memberof ClientSummary\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientSummary\n     */\n    description?: string;\n}\n\nexport function ClientSummaryFromJSON(json: any): ClientSummary {\n    return ClientSummaryFromJSONTyped(json, false);\n}\n\nexport function ClientSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientSummary {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'description': !exists(json, 'description') ? undefined : json['description'],\n    };\n}\n\nexport function ClientSummaryToJSON(value?: ClientSummary | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'description': value.description,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CompletionDateV20\n */\nexport interface CompletionDateV20 {\n    /**\n     * \n     * @type {Date}\n     * @memberof CompletionDateV20\n     */\n    readonly value?: Date;\n}\n\nexport function CompletionDateV20FromJSON(json: any): CompletionDateV20 {\n    return CompletionDateV20FromJSONTyped(json, false);\n}\n\nexport function CompletionDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): CompletionDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : (new Date(json['value'])),\n    };\n}\n\nexport function CompletionDateV20ToJSON(value?: CompletionDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ContributorEmailV20\n */\nexport interface ContributorEmailV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorEmailV20\n     */\n    value?: string;\n}\n\nexport function ContributorEmailV20FromJSON(json: any): ContributorEmailV20 {\n    return ContributorEmailV20FromJSONTyped(json, false);\n}\n\nexport function ContributorEmailV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorEmailV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function ContributorEmailV20ToJSON(value?: ContributorEmailV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ContributorOrcidV20\n */\nexport interface ContributorOrcidV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorOrcidV20\n     */\n    uri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorOrcidV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ContributorOrcidV20\n     */\n    host?: string;\n}\n\nexport function ContributorOrcidV20FromJSON(json: any): ContributorOrcidV20 {\n    return ContributorOrcidV20FromJSONTyped(json, false);\n}\n\nexport function ContributorOrcidV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorOrcidV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uri': !exists(json, 'uri') ? undefined : json['uri'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'host': !exists(json, 'host') ? undefined : json['host'],\n    };\n}\n\nexport function ContributorOrcidV20ToJSON(value?: ContributorOrcidV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'uri': value.uri,\n        'path': value.path,\n        'host': value.host,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ContributorEmailV20,\n    ContributorEmailV20FromJSON,\n    ContributorEmailV20FromJSONTyped,\n    ContributorEmailV20ToJSON,\n    ContributorOrcidV20,\n    ContributorOrcidV20FromJSON,\n    ContributorOrcidV20FromJSONTyped,\n    ContributorOrcidV20ToJSON,\n    CreditNameV20,\n    CreditNameV20FromJSON,\n    CreditNameV20FromJSONTyped,\n    CreditNameV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ContributorV20\n */\nexport interface ContributorV20 {\n    /**\n     * \n     * @type {ContributorOrcidV20}\n     * @memberof ContributorV20\n     */\n    contributorOrcid?: ContributorOrcidV20;\n    /**\n     * \n     * @type {CreditNameV20}\n     * @memberof ContributorV20\n     */\n    creditName?: CreditNameV20;\n    /**\n     * \n     * @type {ContributorEmailV20}\n     * @memberof ContributorV20\n     */\n    contributorEmail?: ContributorEmailV20;\n    /**\n     * \n     * @type {ContributorV20}\n     * @memberof ContributorV20\n     */\n    contributorAttributes?: ContributorV20;\n}\n\nexport function ContributorV20FromJSON(json: any): ContributorV20 {\n    return ContributorV20FromJSONTyped(json, false);\n}\n\nexport function ContributorV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorOrcid': !exists(json, 'contributor-orcid') ? undefined : ContributorOrcidV20FromJSON(json['contributor-orcid']),\n        'creditName': !exists(json, 'credit-name') ? undefined : CreditNameV20FromJSON(json['credit-name']),\n        'contributorEmail': !exists(json, 'contributor-email') ? undefined : ContributorEmailV20FromJSON(json['contributor-email']),\n        'contributorAttributes': !exists(json, 'contributor-attributes') ? undefined : ContributorV20FromJSON(json['contributor-attributes']),\n    };\n}\n\nexport function ContributorV20ToJSON(value?: ContributorV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-orcid': ContributorOrcidV20ToJSON(value.contributorOrcid),\n        'credit-name': CreditNameV20ToJSON(value.creditName),\n        'contributor-email': ContributorEmailV20ToJSON(value.contributorEmail),\n        'contributor-attributes': ContributorV20ToJSON(value.contributorAttributes),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreatedDateV20\n */\nexport interface CreatedDateV20 {\n    /**\n     * \n     * @type {Date}\n     * @memberof CreatedDateV20\n     */\n    readonly value?: Date;\n}\n\nexport function CreatedDateV20FromJSON(json: any): CreatedDateV20 {\n    return CreatedDateV20FromJSONTyped(json, false);\n}\n\nexport function CreatedDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatedDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : (new Date(json['value'])),\n    };\n}\n\nexport function CreatedDateV20ToJSON(value?: CreatedDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreditNameV20\n */\nexport interface CreditNameV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof CreditNameV20\n     */\n    value?: string;\n}\n\nexport function CreditNameV20FromJSON(json: any): CreditNameV20 {\n    return CreditNameV20FromJSONTyped(json, false);\n}\n\nexport function CreditNameV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreditNameV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function CreditNameV20ToJSON(value?: CreditNameV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DayV20\n */\nexport interface DayV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof DayV20\n     */\n    value?: string;\n}\n\nexport function DayV20FromJSON(json: any): DayV20 {\n    return DayV20FromJSONTyped(json, false);\n}\n\nexport function DayV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): DayV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function DayV20ToJSON(value?: DayV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeactivationDateV20\n */\nexport interface DeactivationDateV20 {\n    /**\n     * \n     * @type {Date}\n     * @memberof DeactivationDateV20\n     */\n    readonly value?: Date;\n}\n\nexport function DeactivationDateV20FromJSON(json: any): DeactivationDateV20 {\n    return DeactivationDateV20FromJSONTyped(json, false);\n}\n\nexport function DeactivationDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): DeactivationDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : (new Date(json['value'])),\n    };\n}\n\nexport function DeactivationDateV20ToJSON(value?: DeactivationDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DisambiguatedOrganizationV20\n */\nexport interface DisambiguatedOrganizationV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof DisambiguatedOrganizationV20\n     */\n    disambiguatedOrganizationIdentifier: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DisambiguatedOrganizationV20\n     */\n    disambiguationSource: string;\n}\n\nexport function DisambiguatedOrganizationV20FromJSON(json: any): DisambiguatedOrganizationV20 {\n    return DisambiguatedOrganizationV20FromJSONTyped(json, false);\n}\n\nexport function DisambiguatedOrganizationV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): DisambiguatedOrganizationV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'disambiguatedOrganizationIdentifier': json['disambiguated-organization-identifier'],\n        'disambiguationSource': json['disambiguation-source'],\n    };\n}\n\nexport function DisambiguatedOrganizationV20ToJSON(value?: DisambiguatedOrganizationV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'disambiguated-organization-identifier': value.disambiguatedOrganizationIdentifier,\n        'disambiguation-source': value.disambiguationSource,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    EducationSummaryV20,\n    EducationSummaryV20FromJSON,\n    EducationSummaryV20FromJSONTyped,\n    EducationSummaryV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EducationsSummaryV20\n */\nexport interface EducationsSummaryV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EducationsSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<EducationSummaryV20>}\n     * @memberof EducationsSummaryV20\n     */\n    educationSummary?: Array<EducationSummaryV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof EducationsSummaryV20\n     */\n    path?: string;\n}\n\nexport function EducationsSummaryV20FromJSON(json: any): EducationsSummaryV20 {\n    return EducationsSummaryV20FromJSONTyped(json, false);\n}\n\nexport function EducationsSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationsSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'educationSummary': !exists(json, 'education-summary') ? undefined : ((json['education-summary'] as Array<any>).map(EducationSummaryV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EducationsSummaryV20ToJSON(value?: EducationsSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'education-summary': value.educationSummary === undefined ? undefined : ((value.educationSummary as Array<any>).map(EducationSummaryV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    EmailV20,\n    EmailV20FromJSON,\n    EmailV20FromJSONTyped,\n    EmailV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmailsV20\n */\nexport interface EmailsV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EmailsV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<EmailV20>}\n     * @memberof EmailsV20\n     */\n    email?: Array<EmailV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailsV20\n     */\n    path?: string;\n}\n\nexport function EmailsV20FromJSON(json: any): EmailsV20 {\n    return EmailsV20FromJSONTyped(json, false);\n}\n\nexport function EmailsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'email': !exists(json, 'email') ? undefined : ((json['email'] as Array<any>).map(EmailV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EmailsV20ToJSON(value?: EmailsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'email': value.email === undefined ? undefined : ((value.email as Array<any>).map(EmailV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    EmploymentSummaryV20,\n    EmploymentSummaryV20FromJSON,\n    EmploymentSummaryV20FromJSONTyped,\n    EmploymentSummaryV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface EmploymentsSummaryV20\n */\nexport interface EmploymentsSummaryV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof EmploymentsSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<EmploymentSummaryV20>}\n     * @memberof EmploymentsSummaryV20\n     */\n    employmentSummary?: Array<EmploymentSummaryV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof EmploymentsSummaryV20\n     */\n    path?: string;\n}\n\nexport function EmploymentsSummaryV20FromJSON(json: any): EmploymentsSummaryV20 {\n    return EmploymentsSummaryV20FromJSONTyped(json, false);\n}\n\nexport function EmploymentsSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentsSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'employmentSummary': !exists(json, 'employment-summary') ? undefined : ((json['employment-summary'] as Array<any>).map(EmploymentSummaryV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function EmploymentsSummaryV20ToJSON(value?: EmploymentsSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'employment-summary': value.employmentSummary === undefined ? undefined : ((value.employmentSummary as Array<any>).map(EmploymentSummaryV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExternalIDV20,\n    ExternalIDV20FromJSON,\n    ExternalIDV20FromJSONTyped,\n    ExternalIDV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ExternalIDsV20\n */\nexport interface ExternalIDsV20 {\n    /**\n     * \n     * @type {Array<ExternalIDV20>}\n     * @memberof ExternalIDsV20\n     */\n    externalId?: Array<ExternalIDV20>;\n}\n\nexport function ExternalIDsV20FromJSON(json: any): ExternalIDsV20 {\n    return ExternalIDsV20FromJSONTyped(json, false);\n}\n\nexport function ExternalIDsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalIDsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'externalId': !exists(json, 'external-id') ? undefined : ((json['external-id'] as Array<any>).map(ExternalIDV20FromJSON)),\n    };\n}\n\nexport function ExternalIDsV20ToJSON(value?: ExternalIDsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'external-id': value.externalId === undefined ? undefined : ((value.externalId as Array<any>).map(ExternalIDV20ToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FamilyNameV20\n */\nexport interface FamilyNameV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof FamilyNameV20\n     */\n    value?: string;\n}\n\nexport function FamilyNameV20FromJSON(json: any): FamilyNameV20 {\n    return FamilyNameV20FromJSONTyped(json, false);\n}\n\nexport function FamilyNameV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FamilyNameV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function FamilyNameV20ToJSON(value?: FamilyNameV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ContributorEmailV20,\n    ContributorEmailV20FromJSON,\n    ContributorEmailV20FromJSONTyped,\n    ContributorEmailV20ToJSON,\n    ContributorOrcidV20,\n    ContributorOrcidV20FromJSON,\n    ContributorOrcidV20FromJSONTyped,\n    ContributorOrcidV20ToJSON,\n    CreditNameV20,\n    CreditNameV20FromJSON,\n    CreditNameV20FromJSONTyped,\n    CreditNameV20ToJSON,\n    FundingContributorAttributesV20,\n    FundingContributorAttributesV20FromJSON,\n    FundingContributorAttributesV20FromJSONTyped,\n    FundingContributorAttributesV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingContributorV20\n */\nexport interface FundingContributorV20 {\n    /**\n     * \n     * @type {ContributorOrcidV20}\n     * @memberof FundingContributorV20\n     */\n    contributorOrcid?: ContributorOrcidV20;\n    /**\n     * \n     * @type {CreditNameV20}\n     * @memberof FundingContributorV20\n     */\n    creditName?: CreditNameV20;\n    /**\n     * \n     * @type {ContributorEmailV20}\n     * @memberof FundingContributorV20\n     */\n    contributorEmail?: ContributorEmailV20;\n    /**\n     * \n     * @type {FundingContributorAttributesV20}\n     * @memberof FundingContributorV20\n     */\n    contributorAttributes?: FundingContributorAttributesV20;\n}\n\nexport function FundingContributorV20FromJSON(json: any): FundingContributorV20 {\n    return FundingContributorV20FromJSONTyped(json, false);\n}\n\nexport function FundingContributorV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingContributorV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributorOrcid': !exists(json, 'contributor-orcid') ? undefined : ContributorOrcidV20FromJSON(json['contributor-orcid']),\n        'creditName': !exists(json, 'credit-name') ? undefined : CreditNameV20FromJSON(json['credit-name']),\n        'contributorEmail': !exists(json, 'contributor-email') ? undefined : ContributorEmailV20FromJSON(json['contributor-email']),\n        'contributorAttributes': !exists(json, 'contributor-attributes') ? undefined : FundingContributorAttributesV20FromJSON(json['contributor-attributes']),\n    };\n}\n\nexport function FundingContributorV20ToJSON(value?: FundingContributorV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor-orcid': ContributorOrcidV20ToJSON(value.contributorOrcid),\n        'credit-name': CreditNameV20ToJSON(value.creditName),\n        'contributor-email': ContributorEmailV20ToJSON(value.contributorEmail),\n        'contributor-attributes': FundingContributorAttributesV20ToJSON(value.contributorAttributes),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    FundingContributorV20,\n    FundingContributorV20FromJSON,\n    FundingContributorV20FromJSONTyped,\n    FundingContributorV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingContributorsV20\n */\nexport interface FundingContributorsV20 {\n    /**\n     * \n     * @type {Array<FundingContributorV20>}\n     * @memberof FundingContributorsV20\n     */\n    contributor?: Array<FundingContributorV20>;\n}\n\nexport function FundingContributorsV20FromJSON(json: any): FundingContributorsV20 {\n    return FundingContributorsV20FromJSONTyped(json, false);\n}\n\nexport function FundingContributorsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingContributorsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributor': !exists(json, 'contributor') ? undefined : ((json['contributor'] as Array<any>).map(FundingContributorV20FromJSON)),\n    };\n}\n\nexport function FundingContributorsV20ToJSON(value?: FundingContributorsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor': value.contributor === undefined ? undefined : ((value.contributor as Array<any>).map(FundingContributorV20ToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    FundingSummaryV20,\n    FundingSummaryV20FromJSON,\n    FundingSummaryV20FromJSONTyped,\n    FundingSummaryV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingGroupV20\n */\nexport interface FundingGroupV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof FundingGroupV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof FundingGroupV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {Array<FundingSummaryV20>}\n     * @memberof FundingGroupV20\n     */\n    fundingSummary?: Array<FundingSummaryV20>;\n}\n\nexport function FundingGroupV20FromJSON(json: any): FundingGroupV20 {\n    return FundingGroupV20FromJSONTyped(json, false);\n}\n\nexport function FundingGroupV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingGroupV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'fundingSummary': !exists(json, 'funding-summary') ? undefined : ((json['funding-summary'] as Array<any>).map(FundingSummaryV20FromJSON)),\n    };\n}\n\nexport function FundingGroupV20ToJSON(value?: FundingGroupV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'funding-summary': value.fundingSummary === undefined ? undefined : ((value.fundingSummary as Array<any>).map(FundingSummaryV20ToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    TitleV20,\n    TitleV20FromJSON,\n    TitleV20FromJSONTyped,\n    TitleV20ToJSON,\n    TranslatedTitleV20,\n    TranslatedTitleV20FromJSON,\n    TranslatedTitleV20FromJSONTyped,\n    TranslatedTitleV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingTitleV20\n */\nexport interface FundingTitleV20 {\n    /**\n     * \n     * @type {TitleV20}\n     * @memberof FundingTitleV20\n     */\n    title?: TitleV20;\n    /**\n     * \n     * @type {TranslatedTitleV20}\n     * @memberof FundingTitleV20\n     */\n    translatedTitle?: TranslatedTitleV20;\n}\n\nexport function FundingTitleV20FromJSON(json: any): FundingTitleV20 {\n    return FundingTitleV20FromJSONTyped(json, false);\n}\n\nexport function FundingTitleV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingTitleV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'title': !exists(json, 'title') ? undefined : TitleV20FromJSON(json['title']),\n        'translatedTitle': !exists(json, 'translated-title') ? undefined : TranslatedTitleV20FromJSON(json['translated-title']),\n    };\n}\n\nexport function FundingTitleV20ToJSON(value?: FundingTitleV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'title': TitleV20ToJSON(value.title),\n        'translated-title': TranslatedTitleV20ToJSON(value.translatedTitle),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    FundingGroupV20,\n    FundingGroupV20FromJSON,\n    FundingGroupV20FromJSONTyped,\n    FundingGroupV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FundingsV20\n */\nexport interface FundingsV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof FundingsV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<FundingGroupV20>}\n     * @memberof FundingsV20\n     */\n    group?: Array<FundingGroupV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof FundingsV20\n     */\n    path?: string;\n}\n\nexport function FundingsV20FromJSON(json: any): FundingsV20 {\n    return FundingsV20FromJSONTyped(json, false);\n}\n\nexport function FundingsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FundingsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'group': !exists(json, 'group') ? undefined : ((json['group'] as Array<any>).map(FundingGroupV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function FundingsV20ToJSON(value?: FundingsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'group': value.group === undefined ? undefined : ((value.group as Array<any>).map(FundingGroupV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DayV20,\n    DayV20FromJSON,\n    DayV20FromJSONTyped,\n    DayV20ToJSON,\n    MonthV20,\n    MonthV20FromJSON,\n    MonthV20FromJSONTyped,\n    MonthV20ToJSON,\n    YearV20,\n    YearV20FromJSON,\n    YearV20FromJSONTyped,\n    YearV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface FuzzyDateV20\n */\nexport interface FuzzyDateV20 {\n    /**\n     * \n     * @type {YearV20}\n     * @memberof FuzzyDateV20\n     */\n    year: YearV20;\n    /**\n     * \n     * @type {MonthV20}\n     * @memberof FuzzyDateV20\n     */\n    month?: MonthV20;\n    /**\n     * \n     * @type {DayV20}\n     * @memberof FuzzyDateV20\n     */\n    day?: DayV20;\n}\n\nexport function FuzzyDateV20FromJSON(json: any): FuzzyDateV20 {\n    return FuzzyDateV20FromJSONTyped(json, false);\n}\n\nexport function FuzzyDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): FuzzyDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'year': YearV20FromJSON(json['year']),\n        'month': !exists(json, 'month') ? undefined : MonthV20FromJSON(json['month']),\n        'day': !exists(json, 'day') ? undefined : DayV20FromJSON(json['day']),\n    };\n}\n\nexport function FuzzyDateV20ToJSON(value?: FuzzyDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'year': YearV20ToJSON(value.year),\n        'month': MonthV20ToJSON(value.month),\n        'day': DayV20ToJSON(value.day),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface GivenNamesV20\n */\nexport interface GivenNamesV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof GivenNamesV20\n     */\n    value?: string;\n}\n\nexport function GivenNamesV20FromJSON(json: any): GivenNamesV20 {\n    return GivenNamesV20FromJSONTyped(json, false);\n}\n\nexport function GivenNamesV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): GivenNamesV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function GivenNamesV20ToJSON(value?: GivenNamesV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    KeywordV20,\n    KeywordV20FromJSON,\n    KeywordV20FromJSONTyped,\n    KeywordV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface KeywordsV20\n */\nexport interface KeywordsV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof KeywordsV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<KeywordV20>}\n     * @memberof KeywordsV20\n     */\n    keyword?: Array<KeywordV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof KeywordsV20\n     */\n    path?: string;\n}\n\nexport function KeywordsV20FromJSON(json: any): KeywordsV20 {\n    return KeywordsV20FromJSONTyped(json, false);\n}\n\nexport function KeywordsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'keyword': !exists(json, 'keyword') ? undefined : ((json['keyword'] as Array<any>).map(KeywordV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function KeywordsV20ToJSON(value?: KeywordsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'keyword': value.keyword === undefined ? undefined : ((value.keyword as Array<any>).map(KeywordV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LastModifiedDateV20\n */\nexport interface LastModifiedDateV20 {\n    /**\n     * \n     * @type {Date}\n     * @memberof LastModifiedDateV20\n     */\n    readonly value?: Date;\n}\n\nexport function LastModifiedDateV20FromJSON(json: any): LastModifiedDateV20 {\n    return LastModifiedDateV20FromJSONTyped(json, false);\n}\n\nexport function LastModifiedDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): LastModifiedDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : (new Date(json['value'])),\n    };\n}\n\nexport function LastModifiedDateV20ToJSON(value?: LastModifiedDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MonthV20\n */\nexport interface MonthV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof MonthV20\n     */\n    value?: string;\n}\n\nexport function MonthV20FromJSON(json: any): MonthV20 {\n    return MonthV20FromJSONTyped(json, false);\n}\n\nexport function MonthV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): MonthV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function MonthV20ToJSON(value?: MonthV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrcidIdentifierV20\n */\nexport interface OrcidIdentifierV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrcidIdentifierV20\n     */\n    uri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrcidIdentifierV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrcidIdentifierV20\n     */\n    host?: string;\n}\n\nexport function OrcidIdentifierV20FromJSON(json: any): OrcidIdentifierV20 {\n    return OrcidIdentifierV20FromJSONTyped(json, false);\n}\n\nexport function OrcidIdentifierV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrcidIdentifierV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uri': !exists(json, 'uri') ? undefined : json['uri'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'host': !exists(json, 'host') ? undefined : json['host'],\n    };\n}\n\nexport function OrcidIdentifierV20ToJSON(value?: OrcidIdentifierV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'uri': value.uri,\n        'path': value.path,\n        'host': value.host,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrganizationDefinedFundingSubTypeV20\n */\nexport interface OrganizationDefinedFundingSubTypeV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationDefinedFundingSubTypeV20\n     */\n    value?: string;\n}\n\nexport function OrganizationDefinedFundingSubTypeV20FromJSON(json: any): OrganizationDefinedFundingSubTypeV20 {\n    return OrganizationDefinedFundingSubTypeV20FromJSONTyped(json, false);\n}\n\nexport function OrganizationDefinedFundingSubTypeV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationDefinedFundingSubTypeV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function OrganizationDefinedFundingSubTypeV20ToJSON(value?: OrganizationDefinedFundingSubTypeV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DisambiguatedOrganizationV20,\n    DisambiguatedOrganizationV20FromJSON,\n    DisambiguatedOrganizationV20FromJSONTyped,\n    DisambiguatedOrganizationV20ToJSON,\n    OrganizationAddressV20,\n    OrganizationAddressV20FromJSON,\n    OrganizationAddressV20FromJSONTyped,\n    OrganizationAddressV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface OrganizationV20\n */\nexport interface OrganizationV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof OrganizationV20\n     */\n    name: string;\n    /**\n     * \n     * @type {OrganizationAddressV20}\n     * @memberof OrganizationV20\n     */\n    address: OrganizationAddressV20;\n    /**\n     * \n     * @type {DisambiguatedOrganizationV20}\n     * @memberof OrganizationV20\n     */\n    disambiguatedOrganization?: DisambiguatedOrganizationV20;\n}\n\nexport function OrganizationV20FromJSON(json: any): OrganizationV20 {\n    return OrganizationV20FromJSONTyped(json, false);\n}\n\nexport function OrganizationV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n        'address': OrganizationAddressV20FromJSON(json['address']),\n        'disambiguatedOrganization': !exists(json, 'disambiguated-organization') ? undefined : DisambiguatedOrganizationV20FromJSON(json['disambiguated-organization']),\n    };\n}\n\nexport function OrganizationV20ToJSON(value?: OrganizationV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'address': OrganizationAddressV20ToJSON(value.address),\n        'disambiguated-organization': DisambiguatedOrganizationV20ToJSON(value.disambiguatedOrganization),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    OtherNameV20,\n    OtherNameV20FromJSON,\n    OtherNameV20FromJSONTyped,\n    OtherNameV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface OtherNamesV20\n */\nexport interface OtherNamesV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof OtherNamesV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<OtherNameV20>}\n     * @memberof OtherNamesV20\n     */\n    otherName?: Array<OtherNameV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof OtherNamesV20\n     */\n    path?: string;\n}\n\nexport function OtherNamesV20FromJSON(json: any): OtherNamesV20 {\n    return OtherNamesV20FromJSONTyped(json, false);\n}\n\nexport function OtherNamesV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): OtherNamesV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'otherName': !exists(json, 'other-name') ? undefined : ((json['other-name'] as Array<any>).map(OtherNameV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function OtherNamesV20ToJSON(value?: OtherNamesV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'other-name': value.otherName === undefined ? undefined : ((value.otherName as Array<any>).map(OtherNameV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    PeerReviewSummaryV20,\n    PeerReviewSummaryV20FromJSON,\n    PeerReviewSummaryV20FromJSONTyped,\n    PeerReviewSummaryV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewGroupV20\n */\nexport interface PeerReviewGroupV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PeerReviewGroupV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof PeerReviewGroupV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {Array<PeerReviewSummaryV20>}\n     * @memberof PeerReviewGroupV20\n     */\n    peerReviewSummary?: Array<PeerReviewSummaryV20>;\n}\n\nexport function PeerReviewGroupV20FromJSON(json: any): PeerReviewGroupV20 {\n    return PeerReviewGroupV20FromJSONTyped(json, false);\n}\n\nexport function PeerReviewGroupV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewGroupV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'peerReviewSummary': !exists(json, 'peer-review-summary') ? undefined : ((json['peer-review-summary'] as Array<any>).map(PeerReviewSummaryV20FromJSON)),\n    };\n}\n\nexport function PeerReviewGroupV20ToJSON(value?: PeerReviewGroupV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'peer-review-summary': value.peerReviewSummary === undefined ? undefined : ((value.peerReviewSummary as Array<any>).map(PeerReviewSummaryV20ToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    PeerReviewGroupV20,\n    PeerReviewGroupV20FromJSON,\n    PeerReviewGroupV20FromJSONTyped,\n    PeerReviewGroupV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PeerReviewsV20\n */\nexport interface PeerReviewsV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PeerReviewsV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<PeerReviewGroupV20>}\n     * @memberof PeerReviewsV20\n     */\n    group?: Array<PeerReviewGroupV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof PeerReviewsV20\n     */\n    path?: string;\n}\n\nexport function PeerReviewsV20FromJSON(json: any): PeerReviewsV20 {\n    return PeerReviewsV20FromJSONTyped(json, false);\n}\n\nexport function PeerReviewsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerReviewsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'group': !exists(json, 'group') ? undefined : ((json['group'] as Array<any>).map(PeerReviewGroupV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PeerReviewsV20ToJSON(value?: PeerReviewsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'group': value.group === undefined ? undefined : ((value.group as Array<any>).map(PeerReviewGroupV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    PersonExternalIdentifierV20,\n    PersonExternalIdentifierV20FromJSON,\n    PersonExternalIdentifierV20FromJSONTyped,\n    PersonExternalIdentifierV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonExternalIdentifiersV20\n */\nexport interface PersonExternalIdentifiersV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PersonExternalIdentifiersV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<PersonExternalIdentifierV20>}\n     * @memberof PersonExternalIdentifiersV20\n     */\n    externalIdentifier?: Array<PersonExternalIdentifierV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonExternalIdentifiersV20\n     */\n    path?: string;\n}\n\nexport function PersonExternalIdentifiersV20FromJSON(json: any): PersonExternalIdentifiersV20 {\n    return PersonExternalIdentifiersV20FromJSONTyped(json, false);\n}\n\nexport function PersonExternalIdentifiersV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonExternalIdentifiersV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'externalIdentifier': !exists(json, 'external-identifier') ? undefined : ((json['external-identifier'] as Array<any>).map(PersonExternalIdentifierV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PersonExternalIdentifiersV20ToJSON(value?: PersonExternalIdentifiersV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'external-identifier': value.externalIdentifier === undefined ? undefined : ((value.externalIdentifier as Array<any>).map(PersonExternalIdentifierV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AddressesV20,\n    AddressesV20FromJSON,\n    AddressesV20FromJSONTyped,\n    AddressesV20ToJSON,\n    BiographyV20,\n    BiographyV20FromJSON,\n    BiographyV20FromJSONTyped,\n    BiographyV20ToJSON,\n    EmailsV20,\n    EmailsV20FromJSON,\n    EmailsV20FromJSONTyped,\n    EmailsV20ToJSON,\n    KeywordsV20,\n    KeywordsV20FromJSON,\n    KeywordsV20FromJSONTyped,\n    KeywordsV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    NameV20,\n    NameV20FromJSON,\n    NameV20FromJSONTyped,\n    NameV20ToJSON,\n    OtherNamesV20,\n    OtherNamesV20FromJSON,\n    OtherNamesV20FromJSONTyped,\n    OtherNamesV20ToJSON,\n    PersonExternalIdentifiersV20,\n    PersonExternalIdentifiersV20FromJSON,\n    PersonExternalIdentifiersV20FromJSONTyped,\n    PersonExternalIdentifiersV20ToJSON,\n    ResearcherUrlsV20,\n    ResearcherUrlsV20FromJSON,\n    ResearcherUrlsV20FromJSONTyped,\n    ResearcherUrlsV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonV20\n */\nexport interface PersonV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PersonV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {NameV20}\n     * @memberof PersonV20\n     */\n    name?: NameV20;\n    /**\n     * \n     * @type {OtherNamesV20}\n     * @memberof PersonV20\n     */\n    otherNames?: OtherNamesV20;\n    /**\n     * \n     * @type {BiographyV20}\n     * @memberof PersonV20\n     */\n    biography?: BiographyV20;\n    /**\n     * \n     * @type {ResearcherUrlsV20}\n     * @memberof PersonV20\n     */\n    researcherUrls?: ResearcherUrlsV20;\n    /**\n     * \n     * @type {EmailsV20}\n     * @memberof PersonV20\n     */\n    emails?: EmailsV20;\n    /**\n     * \n     * @type {AddressesV20}\n     * @memberof PersonV20\n     */\n    addresses?: AddressesV20;\n    /**\n     * \n     * @type {KeywordsV20}\n     * @memberof PersonV20\n     */\n    keywords?: KeywordsV20;\n    /**\n     * \n     * @type {PersonExternalIdentifiersV20}\n     * @memberof PersonV20\n     */\n    externalIdentifiers?: PersonExternalIdentifiersV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonV20\n     */\n    path?: string;\n}\n\nexport function PersonV20FromJSON(json: any): PersonV20 {\n    return PersonV20FromJSONTyped(json, false);\n}\n\nexport function PersonV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'name': !exists(json, 'name') ? undefined : NameV20FromJSON(json['name']),\n        'otherNames': !exists(json, 'other-names') ? undefined : OtherNamesV20FromJSON(json['other-names']),\n        'biography': !exists(json, 'biography') ? undefined : BiographyV20FromJSON(json['biography']),\n        'researcherUrls': !exists(json, 'researcher-urls') ? undefined : ResearcherUrlsV20FromJSON(json['researcher-urls']),\n        'emails': !exists(json, 'emails') ? undefined : EmailsV20FromJSON(json['emails']),\n        'addresses': !exists(json, 'addresses') ? undefined : AddressesV20FromJSON(json['addresses']),\n        'keywords': !exists(json, 'keywords') ? undefined : KeywordsV20FromJSON(json['keywords']),\n        'externalIdentifiers': !exists(json, 'external-identifiers') ? undefined : PersonExternalIdentifiersV20FromJSON(json['external-identifiers']),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PersonV20ToJSON(value?: PersonV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'name': NameV20ToJSON(value.name),\n        'other-names': OtherNamesV20ToJSON(value.otherNames),\n        'biography': BiographyV20ToJSON(value.biography),\n        'researcher-urls': ResearcherUrlsV20ToJSON(value.researcherUrls),\n        'emails': EmailsV20ToJSON(value.emails),\n        'addresses': AddressesV20ToJSON(value.addresses),\n        'keywords': KeywordsV20ToJSON(value.keywords),\n        'external-identifiers': PersonExternalIdentifiersV20ToJSON(value.externalIdentifiers),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    BiographyV20,\n    BiographyV20FromJSON,\n    BiographyV20FromJSONTyped,\n    BiographyV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    NameV20,\n    NameV20FromJSON,\n    NameV20FromJSONTyped,\n    NameV20ToJSON,\n    OtherNamesV20,\n    OtherNamesV20FromJSON,\n    OtherNamesV20FromJSONTyped,\n    OtherNamesV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PersonalDetailsV20\n */\nexport interface PersonalDetailsV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof PersonalDetailsV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {NameV20}\n     * @memberof PersonalDetailsV20\n     */\n    name?: NameV20;\n    /**\n     * \n     * @type {OtherNamesV20}\n     * @memberof PersonalDetailsV20\n     */\n    otherNames?: OtherNamesV20;\n    /**\n     * \n     * @type {BiographyV20}\n     * @memberof PersonalDetailsV20\n     */\n    biography?: BiographyV20;\n    /**\n     * \n     * @type {string}\n     * @memberof PersonalDetailsV20\n     */\n    path?: string;\n}\n\nexport function PersonalDetailsV20FromJSON(json: any): PersonalDetailsV20 {\n    return PersonalDetailsV20FromJSONTyped(json, false);\n}\n\nexport function PersonalDetailsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonalDetailsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'name': !exists(json, 'name') ? undefined : NameV20FromJSON(json['name']),\n        'otherNames': !exists(json, 'other-names') ? undefined : OtherNamesV20FromJSON(json['other-names']),\n        'biography': !exists(json, 'biography') ? undefined : BiographyV20FromJSON(json['biography']),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function PersonalDetailsV20ToJSON(value?: PersonalDetailsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'name': NameV20ToJSON(value.name),\n        'other-names': OtherNamesV20ToJSON(value.otherNames),\n        'biography': BiographyV20ToJSON(value.biography),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ActivitiesSummaryV20,\n    ActivitiesSummaryV20FromJSON,\n    ActivitiesSummaryV20FromJSONTyped,\n    ActivitiesSummaryV20ToJSON,\n    HistoryV20,\n    HistoryV20FromJSON,\n    HistoryV20FromJSONTyped,\n    HistoryV20ToJSON,\n    OrcidIdentifierV20,\n    OrcidIdentifierV20FromJSON,\n    OrcidIdentifierV20FromJSONTyped,\n    OrcidIdentifierV20ToJSON,\n    PersonV20,\n    PersonV20FromJSON,\n    PersonV20FromJSONTyped,\n    PersonV20ToJSON,\n    PreferencesV20,\n    PreferencesV20FromJSON,\n    PreferencesV20FromJSONTyped,\n    PreferencesV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface RecordV20\n */\nexport interface RecordV20 {\n    /**\n     * \n     * @type {OrcidIdentifierV20}\n     * @memberof RecordV20\n     */\n    orcidIdentifier?: OrcidIdentifierV20;\n    /**\n     * \n     * @type {PreferencesV20}\n     * @memberof RecordV20\n     */\n    preferences?: PreferencesV20;\n    /**\n     * \n     * @type {HistoryV20}\n     * @memberof RecordV20\n     */\n    history?: HistoryV20;\n    /**\n     * \n     * @type {PersonV20}\n     * @memberof RecordV20\n     */\n    person?: PersonV20;\n    /**\n     * \n     * @type {ActivitiesSummaryV20}\n     * @memberof RecordV20\n     */\n    activitiesSummary?: ActivitiesSummaryV20;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordV20\n     */\n    path?: string;\n}\n\nexport function RecordV20FromJSON(json: any): RecordV20 {\n    return RecordV20FromJSONTyped(json, false);\n}\n\nexport function RecordV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'orcidIdentifier': !exists(json, 'orcid-identifier') ? undefined : OrcidIdentifierV20FromJSON(json['orcid-identifier']),\n        'preferences': !exists(json, 'preferences') ? undefined : PreferencesV20FromJSON(json['preferences']),\n        'history': !exists(json, 'history') ? undefined : HistoryV20FromJSON(json['history']),\n        'person': !exists(json, 'person') ? undefined : PersonV20FromJSON(json['person']),\n        'activitiesSummary': !exists(json, 'activities-summary') ? undefined : ActivitiesSummaryV20FromJSON(json['activities-summary']),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function RecordV20ToJSON(value?: RecordV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'orcid-identifier': OrcidIdentifierV20ToJSON(value.orcidIdentifier),\n        'preferences': PreferencesV20ToJSON(value.preferences),\n        'history': HistoryV20ToJSON(value.history),\n        'person': PersonV20ToJSON(value.person),\n        'activities-summary': ActivitiesSummaryV20ToJSON(value.activitiesSummary),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    ResearcherUrlV20,\n    ResearcherUrlV20FromJSON,\n    ResearcherUrlV20FromJSONTyped,\n    ResearcherUrlV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResearcherUrlsV20\n */\nexport interface ResearcherUrlsV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof ResearcherUrlsV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<ResearcherUrlV20>}\n     * @memberof ResearcherUrlsV20\n     */\n    researcherUrl?: Array<ResearcherUrlV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof ResearcherUrlsV20\n     */\n    path?: string;\n}\n\nexport function ResearcherUrlsV20FromJSON(json: any): ResearcherUrlsV20 {\n    return ResearcherUrlsV20FromJSONTyped(json, false);\n}\n\nexport function ResearcherUrlsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResearcherUrlsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'researcherUrl': !exists(json, 'researcher-url') ? undefined : ((json['researcher-url'] as Array<any>).map(ResearcherUrlV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function ResearcherUrlsV20ToJSON(value?: ResearcherUrlsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'researcher-url': value.researcherUrl === undefined ? undefined : ((value.researcherUrl as Array<any>).map(ResearcherUrlV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    OrcidIdentifierV20,\n    OrcidIdentifierV20FromJSON,\n    OrcidIdentifierV20FromJSONTyped,\n    OrcidIdentifierV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface ResultV20\n */\nexport interface ResultV20 {\n    /**\n     * \n     * @type {OrcidIdentifierV20}\n     * @memberof ResultV20\n     */\n    orcidIdentifier?: OrcidIdentifierV20;\n}\n\nexport function ResultV20FromJSON(json: any): ResultV20 {\n    return ResultV20FromJSONTyped(json, false);\n}\n\nexport function ResultV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): ResultV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'orcidIdentifier': !exists(json, 'orcid-identifier') ? undefined : OrcidIdentifierV20FromJSON(json['orcid-identifier']),\n    };\n}\n\nexport function ResultV20ToJSON(value?: ResultV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'orcid-identifier': OrcidIdentifierV20ToJSON(value.orcidIdentifier),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ResultV20,\n    ResultV20FromJSON,\n    ResultV20FromJSONTyped,\n    ResultV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface SearchV20\n */\nexport interface SearchV20 {\n    /**\n     * \n     * @type {Array<ResultV20>}\n     * @memberof SearchV20\n     */\n    result?: Array<ResultV20>;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchV20\n     */\n    numFound?: number;\n}\n\nexport function SearchV20FromJSON(json: any): SearchV20 {\n    return SearchV20FromJSONTyped(json, false);\n}\n\nexport function SearchV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'result': !exists(json, 'result') ? undefined : ((json['result'] as Array<any>).map(ResultV20FromJSON)),\n        'numFound': !exists(json, 'num-found') ? undefined : json['num-found'],\n    };\n}\n\nexport function SearchV20ToJSON(value?: SearchV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'result': value.result === undefined ? undefined : ((value.result as Array<any>).map(ResultV20ToJSON)),\n        'num-found': value.numFound,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SourceClientIdV20\n */\nexport interface SourceClientIdV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof SourceClientIdV20\n     */\n    uri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SourceClientIdV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SourceClientIdV20\n     */\n    host?: string;\n}\n\nexport function SourceClientIdV20FromJSON(json: any): SourceClientIdV20 {\n    return SourceClientIdV20FromJSONTyped(json, false);\n}\n\nexport function SourceClientIdV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceClientIdV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uri': !exists(json, 'uri') ? undefined : json['uri'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'host': !exists(json, 'host') ? undefined : json['host'],\n    };\n}\n\nexport function SourceClientIdV20ToJSON(value?: SourceClientIdV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'uri': value.uri,\n        'path': value.path,\n        'host': value.host,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SourceNameV20\n */\nexport interface SourceNameV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof SourceNameV20\n     */\n    value?: string;\n}\n\nexport function SourceNameV20FromJSON(json: any): SourceNameV20 {\n    return SourceNameV20FromJSONTyped(json, false);\n}\n\nexport function SourceNameV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceNameV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function SourceNameV20ToJSON(value?: SourceNameV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SourceOrcidV20\n */\nexport interface SourceOrcidV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof SourceOrcidV20\n     */\n    uri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SourceOrcidV20\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SourceOrcidV20\n     */\n    host?: string;\n}\n\nexport function SourceOrcidV20FromJSON(json: any): SourceOrcidV20 {\n    return SourceOrcidV20FromJSONTyped(json, false);\n}\n\nexport function SourceOrcidV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceOrcidV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uri': !exists(json, 'uri') ? undefined : json['uri'],\n        'path': !exists(json, 'path') ? undefined : json['path'],\n        'host': !exists(json, 'host') ? undefined : json['host'],\n    };\n}\n\nexport function SourceOrcidV20ToJSON(value?: SourceOrcidV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'uri': value.uri,\n        'path': value.path,\n        'host': value.host,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    SourceClientIdV20,\n    SourceClientIdV20FromJSON,\n    SourceClientIdV20FromJSONTyped,\n    SourceClientIdV20ToJSON,\n    SourceNameV20,\n    SourceNameV20FromJSON,\n    SourceNameV20FromJSONTyped,\n    SourceNameV20ToJSON,\n    SourceOrcidV20,\n    SourceOrcidV20FromJSON,\n    SourceOrcidV20FromJSONTyped,\n    SourceOrcidV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface SourceV20\n */\nexport interface SourceV20 {\n    /**\n     * \n     * @type {SourceOrcidV20}\n     * @memberof SourceV20\n     */\n    sourceOrcid?: SourceOrcidV20;\n    /**\n     * \n     * @type {SourceClientIdV20}\n     * @memberof SourceV20\n     */\n    sourceClientId?: SourceClientIdV20;\n    /**\n     * \n     * @type {SourceNameV20}\n     * @memberof SourceV20\n     */\n    sourceName?: SourceNameV20;\n}\n\nexport function SourceV20FromJSON(json: any): SourceV20 {\n    return SourceV20FromJSONTyped(json, false);\n}\n\nexport function SourceV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'sourceOrcid': !exists(json, 'source-orcid') ? undefined : SourceOrcidV20FromJSON(json['source-orcid']),\n        'sourceClientId': !exists(json, 'source-client-id') ? undefined : SourceClientIdV20FromJSON(json['source-client-id']),\n        'sourceName': !exists(json, 'source-name') ? undefined : SourceNameV20FromJSON(json['source-name']),\n    };\n}\n\nexport function SourceV20ToJSON(value?: SourceV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'source-orcid': SourceOrcidV20ToJSON(value.sourceOrcid),\n        'source-client-id': SourceClientIdV20ToJSON(value.sourceClientId),\n        'source-name': SourceNameV20ToJSON(value.sourceName),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SubmissionDateV20\n */\nexport interface SubmissionDateV20 {\n    /**\n     * \n     * @type {Date}\n     * @memberof SubmissionDateV20\n     */\n    readonly value?: Date;\n}\n\nexport function SubmissionDateV20FromJSON(json: any): SubmissionDateV20 {\n    return SubmissionDateV20FromJSONTyped(json, false);\n}\n\nexport function SubmissionDateV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmissionDateV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : (new Date(json['value'])),\n    };\n}\n\nexport function SubmissionDateV20ToJSON(value?: SubmissionDateV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SubtitleV20\n */\nexport interface SubtitleV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof SubtitleV20\n     */\n    value?: string;\n}\n\nexport function SubtitleV20FromJSON(json: any): SubtitleV20 {\n    return SubtitleV20FromJSONTyped(json, false);\n}\n\nexport function SubtitleV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): SubtitleV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function SubtitleV20ToJSON(value?: SubtitleV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TitleV20\n */\nexport interface TitleV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof TitleV20\n     */\n    value?: string;\n}\n\nexport function TitleV20FromJSON(json: any): TitleV20 {\n    return TitleV20FromJSONTyped(json, false);\n}\n\nexport function TitleV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): TitleV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function TitleV20ToJSON(value?: TitleV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TranslatedTitleV20\n */\nexport interface TranslatedTitleV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof TranslatedTitleV20\n     */\n    value?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TranslatedTitleV20\n     */\n    languageCode: string;\n}\n\nexport function TranslatedTitleV20FromJSON(json: any): TranslatedTitleV20 {\n    return TranslatedTitleV20FromJSONTyped(json, false);\n}\n\nexport function TranslatedTitleV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslatedTitleV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n        'languageCode': json['language-code'],\n    };\n}\n\nexport function TranslatedTitleV20ToJSON(value?: TranslatedTitleV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'language-code': value.languageCode,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UrlV20\n */\nexport interface UrlV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof UrlV20\n     */\n    value?: string;\n}\n\nexport function UrlV20FromJSON(json: any): UrlV20 {\n    return UrlV20FromJSONTyped(json, false);\n}\n\nexport function UrlV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): UrlV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function UrlV20ToJSON(value?: UrlV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface WorkBulkV20\n */\nexport interface WorkBulkV20 {\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof WorkBulkV20\n     */\n    bulk?: Array<object>;\n}\n\nexport function WorkBulkV20FromJSON(json: any): WorkBulkV20 {\n    return WorkBulkV20FromJSONTyped(json, false);\n}\n\nexport function WorkBulkV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkBulkV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'bulk': !exists(json, 'bulk') ? undefined : json['bulk'],\n    };\n}\n\nexport function WorkBulkV20ToJSON(value?: WorkBulkV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'bulk': value.bulk,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ContributorV20,\n    ContributorV20FromJSON,\n    ContributorV20FromJSONTyped,\n    ContributorV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkContributorsV20\n */\nexport interface WorkContributorsV20 {\n    /**\n     * \n     * @type {Array<ContributorV20>}\n     * @memberof WorkContributorsV20\n     */\n    contributor?: Array<ContributorV20>;\n}\n\nexport function WorkContributorsV20FromJSON(json: any): WorkContributorsV20 {\n    return WorkContributorsV20FromJSONTyped(json, false);\n}\n\nexport function WorkContributorsV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkContributorsV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'contributor': !exists(json, 'contributor') ? undefined : ((json['contributor'] as Array<any>).map(ContributorV20FromJSON)),\n    };\n}\n\nexport function WorkContributorsV20ToJSON(value?: WorkContributorsV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'contributor': value.contributor === undefined ? undefined : ((value.contributor as Array<any>).map(ContributorV20ToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExternalIDsV20,\n    ExternalIDsV20FromJSON,\n    ExternalIDsV20FromJSONTyped,\n    ExternalIDsV20ToJSON,\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    WorkSummaryV20,\n    WorkSummaryV20FromJSON,\n    WorkSummaryV20FromJSONTyped,\n    WorkSummaryV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkGroupV20\n */\nexport interface WorkGroupV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof WorkGroupV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {ExternalIDsV20}\n     * @memberof WorkGroupV20\n     */\n    externalIds?: ExternalIDsV20;\n    /**\n     * \n     * @type {Array<WorkSummaryV20>}\n     * @memberof WorkGroupV20\n     */\n    workSummary?: Array<WorkSummaryV20>;\n}\n\nexport function WorkGroupV20FromJSON(json: any): WorkGroupV20 {\n    return WorkGroupV20FromJSONTyped(json, false);\n}\n\nexport function WorkGroupV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkGroupV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV20FromJSON(json['external-ids']),\n        'workSummary': !exists(json, 'work-summary') ? undefined : ((json['work-summary'] as Array<any>).map(WorkSummaryV20FromJSON)),\n    };\n}\n\nexport function WorkGroupV20ToJSON(value?: WorkGroupV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'external-ids': ExternalIDsV20ToJSON(value.externalIds),\n        'work-summary': value.workSummary === undefined ? undefined : ((value.workSummary as Array<any>).map(WorkSummaryV20ToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    SubtitleV20,\n    SubtitleV20FromJSON,\n    SubtitleV20FromJSONTyped,\n    SubtitleV20ToJSON,\n    TitleV20,\n    TitleV20FromJSON,\n    TitleV20FromJSONTyped,\n    TitleV20ToJSON,\n    TranslatedTitleV20,\n    TranslatedTitleV20FromJSON,\n    TranslatedTitleV20FromJSONTyped,\n    TranslatedTitleV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorkTitleV20\n */\nexport interface WorkTitleV20 {\n    /**\n     * \n     * @type {TitleV20}\n     * @memberof WorkTitleV20\n     */\n    title?: TitleV20;\n    /**\n     * \n     * @type {SubtitleV20}\n     * @memberof WorkTitleV20\n     */\n    subtitle?: SubtitleV20;\n    /**\n     * \n     * @type {TranslatedTitleV20}\n     * @memberof WorkTitleV20\n     */\n    translatedTitle?: TranslatedTitleV20;\n}\n\nexport function WorkTitleV20FromJSON(json: any): WorkTitleV20 {\n    return WorkTitleV20FromJSONTyped(json, false);\n}\n\nexport function WorkTitleV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkTitleV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'title': !exists(json, 'title') ? undefined : TitleV20FromJSON(json['title']),\n        'subtitle': !exists(json, 'subtitle') ? undefined : SubtitleV20FromJSON(json['subtitle']),\n        'translatedTitle': !exists(json, 'translated-title') ? undefined : TranslatedTitleV20FromJSON(json['translated-title']),\n    };\n}\n\nexport function WorkTitleV20ToJSON(value?: WorkTitleV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'title': TitleV20ToJSON(value.title),\n        'subtitle': SubtitleV20ToJSON(value.subtitle),\n        'translated-title': TranslatedTitleV20ToJSON(value.translatedTitle),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    LastModifiedDateV20,\n    LastModifiedDateV20FromJSON,\n    LastModifiedDateV20FromJSONTyped,\n    LastModifiedDateV20ToJSON,\n    WorkGroupV20,\n    WorkGroupV20FromJSON,\n    WorkGroupV20FromJSONTyped,\n    WorkGroupV20ToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface WorksSummaryV20\n */\nexport interface WorksSummaryV20 {\n    /**\n     * \n     * @type {LastModifiedDateV20}\n     * @memberof WorksSummaryV20\n     */\n    lastModifiedDate?: LastModifiedDateV20;\n    /**\n     * \n     * @type {Array<WorkGroupV20>}\n     * @memberof WorksSummaryV20\n     */\n    group?: Array<WorkGroupV20>;\n    /**\n     * \n     * @type {string}\n     * @memberof WorksSummaryV20\n     */\n    path?: string;\n}\n\nexport function WorksSummaryV20FromJSON(json: any): WorksSummaryV20 {\n    return WorksSummaryV20FromJSONTyped(json, false);\n}\n\nexport function WorksSummaryV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorksSummaryV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV20FromJSON(json['last-modified-date']),\n        'group': !exists(json, 'group') ? undefined : ((json['group'] as Array<any>).map(WorkGroupV20FromJSON)),\n        'path': !exists(json, 'path') ? undefined : json['path'],\n    };\n}\n\nexport function WorksSummaryV20ToJSON(value?: WorksSummaryV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'last-modified-date': LastModifiedDateV20ToJSON(value.lastModifiedDate),\n        'group': value.group === undefined ? undefined : ((value.group as Array<any>).map(WorkGroupV20ToJSON)),\n        'path': value.path,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface YearV20\n */\nexport interface YearV20 {\n    /**\n     * \n     * @type {string}\n     * @memberof YearV20\n     */\n    value?: string;\n}\n\nexport function YearV20FromJSON(json: any): YearV20 {\n    return YearV20FromJSONTyped(json, false);\n}\n\nexport function YearV20FromJSONTyped(json: any, ignoreDiscriminator: boolean): YearV20 {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function YearV20ToJSON(value?: YearV20 | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    ActivitiesSummaryV30,\n    ActivitiesSummaryV30FromJSON,\n    ActivitiesSummaryV30ToJSON,\n    DistinctionSummaryV30,\n    DistinctionSummaryV30FromJSON,\n    DistinctionSummaryV30ToJSON,\n    DistinctionV30,\n    DistinctionV30FromJSON,\n    DistinctionV30ToJSON,\n    DistinctionsSummaryV30,\n    DistinctionsSummaryV30FromJSON,\n    DistinctionsSummaryV30ToJSON,\n    EducationSummaryV30,\n    EducationSummaryV30FromJSON,\n    EducationSummaryV30ToJSON,\n    EducationV30,\n    EducationV30FromJSON,\n    EducationV30ToJSON,\n    EducationsSummaryV30,\n    EducationsSummaryV30FromJSON,\n    EducationsSummaryV30ToJSON,\n    EmploymentSummaryV30,\n    EmploymentSummaryV30FromJSON,\n    EmploymentSummaryV30ToJSON,\n    EmploymentV30,\n    EmploymentV30FromJSON,\n    EmploymentV30ToJSON,\n    FundingSummaryV30,\n    FundingSummaryV30FromJSON,\n    FundingSummaryV30ToJSON,\n    FundingV30,\n    FundingV30FromJSON,\n    FundingV30ToJSON,\n    FundingsV30,\n    FundingsV30FromJSON,\n    FundingsV30ToJSON,\n    InvitedPositionSummaryV30,\n    InvitedPositionSummaryV30FromJSON,\n    InvitedPositionSummaryV30ToJSON,\n    InvitedPositionV30,\n    InvitedPositionV30FromJSON,\n    InvitedPositionV30ToJSON,\n    InvitedPositionsV30,\n    InvitedPositionsV30FromJSON,\n    InvitedPositionsV30ToJSON,\n    MembershipSummaryV30,\n    MembershipSummaryV30FromJSON,\n    MembershipSummaryV30ToJSON,\n    MembershipV30,\n    MembershipV30FromJSON,\n    MembershipV30ToJSON,\n    MembershipsV30,\n    MembershipsV30FromJSON,\n    MembershipsV30ToJSON,\n    PeerReviewSummaryV30,\n    PeerReviewSummaryV30FromJSON,\n    PeerReviewSummaryV30ToJSON,\n    PeerReviewV30,\n    PeerReviewV30FromJSON,\n    PeerReviewV30ToJSON,\n    PeerReviewsV30,\n    PeerReviewsV30FromJSON,\n    PeerReviewsV30ToJSON,\n    QualificationSummaryV30,\n    QualificationSummaryV30FromJSON,\n    QualificationSummaryV30ToJSON,\n    QualificationV30,\n    QualificationV30FromJSON,\n    QualificationV30ToJSON,\n    QualificationsV30,\n    QualificationsV30FromJSON,\n    QualificationsV30ToJSON,\n    RecordV30,\n    RecordV30FromJSON,\n    RecordV30ToJSON,\n    ResearchResourceSummaryV30,\n    ResearchResourceSummaryV30FromJSON,\n    ResearchResourceSummaryV30ToJSON,\n    ResearchResourceV30,\n    ResearchResourceV30FromJSON,\n    ResearchResourceV30ToJSON,\n    ResearchResourcesV30,\n    ResearchResourcesV30FromJSON,\n    ResearchResourcesV30ToJSON,\n    ServiceSummaryV30,\n    ServiceSummaryV30FromJSON,\n    ServiceSummaryV30ToJSON,\n    ServiceV30,\n    ServiceV30FromJSON,\n    ServiceV30ToJSON,\n    ServicesV30,\n    ServicesV30FromJSON,\n    ServicesV30ToJSON,\n    WorkBulkV30,\n    WorkBulkV30FromJSON,\n    WorkBulkV30ToJSON,\n    WorkSummaryV30,\n    WorkSummaryV30FromJSON,\n    WorkSummaryV30ToJSON,\n    WorkV30,\n    WorkV30FromJSON,\n    WorkV30ToJSON,\n    WorksSummaryV30,\n    WorksSummaryV30FromJSON,\n    WorksSummaryV30ToJSON,\n} from '../models';\n\nexport interface SearchByQueryv3Request {\n    q?: string;\n}\n\nexport interface SearchByQueryv30Request {\n    q?: string;\n}\n\nexport interface SearchByQueryv31Request {\n    q?: string;\n}\n\nexport interface ViewActivitiesv3Request {\n    orcid: string;\n}\n\nexport interface ViewAddressesv3Request {\n    orcid: string;\n}\n\nexport interface ViewAddressv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewBiographyv3Request {\n    orcid: string;\n}\n\nexport interface ViewClientv3Request {\n    clientId: string;\n}\n\nexport interface ViewDistinctionSummaryv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewDistinctionsv3Request {\n    orcid: string;\n}\n\nexport interface ViewDistinctionv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewEducationSummaryv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEducationsv3Request {\n    orcid: string;\n}\n\nexport interface ViewEducationv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEmailsv3Request {\n    orcid: string;\n}\n\nexport interface ViewEmploymentSummaryv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEmploymentsv3Request {\n    orcid: string;\n}\n\nexport interface ViewEmploymentv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewExternalIdentifiersv3Request {\n    orcid: string;\n}\n\nexport interface ViewExternalIdentifierv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewFundingSummaryv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewFundingsv3Request {\n    orcid: string;\n}\n\nexport interface ViewFundingv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewInvitedPositionSummaryv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewInvitedPositionsv3Request {\n    orcid: string;\n}\n\nexport interface ViewInvitedPositionv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewKeywordsv3Request {\n    orcid: string;\n}\n\nexport interface ViewKeywordv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewMembershipSummaryv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewMembershipsv3Request {\n    orcid: string;\n}\n\nexport interface ViewMembershipv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewOtherNamesv3Request {\n    orcid: string;\n}\n\nexport interface ViewOtherNamev3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewPeerReviewSummaryv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewPeerReviewsv3Request {\n    orcid: string;\n}\n\nexport interface ViewPeerReviewv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewPersonalDetailsv3Request {\n    orcid: string;\n}\n\nexport interface ViewPersonv3Request {\n    orcid: string;\n}\n\nexport interface ViewQualificationSummaryv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewQualificationsv3Request {\n    orcid: string;\n}\n\nexport interface ViewQualificationv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewRecordv3Request {\n    orcid: string;\n}\n\nexport interface ViewResearchResourceSummaryv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewResearchResourcesv3Request {\n    orcid: string;\n}\n\nexport interface ViewResearchResourcev3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewResearcherUrlsv3Request {\n    orcid: string;\n}\n\nexport interface ViewResearcherUrlv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewServiceSummaryv3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewServicesv3Request {\n    orcid: string;\n}\n\nexport interface ViewServicev3Request {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewSpecifiedWorksv3Request {\n    orcid: string;\n    putCodes: string;\n}\n\nexport interface ViewWorkSummaryv3Request {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewWorksv3Request {\n    orcid: string;\n}\n\nexport interface ViewWorkv3Request {\n    orcid: string;\n    putCode: number;\n}\n\n/**\n * \n */\nexport class DevelopmentPublicAPIV30Api extends runtime.BaseAPI {\n\n    /**\n     * Search records\n     */\n    async searchByQueryv3Raw(requestParameters: SearchByQueryv3Request): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.q !== undefined) {\n            queryParameters['q'] = requestParameters.q;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Search records\n     */\n    async searchByQueryv3(requestParameters: SearchByQueryv3Request): Promise<void> {\n        await this.searchByQueryv3Raw(requestParameters);\n    }\n\n    /**\n     * Search records\n     */\n    async searchByQueryv3_1Raw(requestParameters: SearchByQueryv30Request): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.q !== undefined) {\n            queryParameters['q'] = requestParameters.q;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/csv-search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Search records\n     */\n    async searchByQueryv3_1(requestParameters: SearchByQueryv30Request): Promise<void> {\n        await this.searchByQueryv3_1Raw(requestParameters);\n    }\n\n    /**\n     * Search records\n     */\n    async searchByQueryv3_2Raw(requestParameters: SearchByQueryv31Request): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.q !== undefined) {\n            queryParameters['q'] = requestParameters.q;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/expanded-search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Search records\n     */\n    async searchByQueryv3_2(requestParameters: SearchByQueryv31Request): Promise<void> {\n        await this.searchByQueryv3_2Raw(requestParameters);\n    }\n\n    /**\n     * Fetch all Activities\n     */\n    async viewActivitiesv3Raw(requestParameters: ViewActivitiesv3Request): Promise<runtime.ApiResponse<ActivitiesSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewActivitiesv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/activities`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActivitiesSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all Activities\n     */\n    async viewActivitiesv3(requestParameters: ViewActivitiesv3Request): Promise<ActivitiesSummaryV30> {\n        const response = await this.viewActivitiesv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all addresses\n     */\n    async viewAddressesv3Raw(requestParameters: ViewAddressesv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewAddressesv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/address`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch all addresses\n     */\n    async viewAddressesv3(requestParameters: ViewAddressesv3Request): Promise<void> {\n        await this.viewAddressesv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch an address\n     */\n    async viewAddressv3Raw(requestParameters: ViewAddressv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewAddressv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewAddressv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/address/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch an address\n     */\n    async viewAddressv3(requestParameters: ViewAddressv3Request): Promise<void> {\n        await this.viewAddressv3Raw(requestParameters);\n    }\n\n    /**\n     * Get biography details\n     */\n    async viewBiographyv3Raw(requestParameters: ViewBiographyv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewBiographyv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/biography`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Get biography details\n     */\n    async viewBiographyv3(requestParameters: ViewBiographyv3Request): Promise<void> {\n        await this.viewBiographyv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch client details\n     */\n    async viewClientv3Raw(requestParameters: ViewClientv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.clientId === null || requestParameters.clientId === undefined) {\n            throw new runtime.RequiredError('clientId','Required parameter requestParameters.clientId was null or undefined when calling viewClientv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/client/{client_id}`.replace(`{${\"client_id\"}}`, encodeURIComponent(String(requestParameters.clientId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch client details\n     */\n    async viewClientv3(requestParameters: ViewClientv3Request): Promise<void> {\n        await this.viewClientv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch an Distinction summary\n     */\n    async viewDistinctionSummaryv3Raw(requestParameters: ViewDistinctionSummaryv3Request): Promise<runtime.ApiResponse<DistinctionSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewDistinctionSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewDistinctionSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/distinction/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DistinctionSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Distinction summary\n     */\n    async viewDistinctionSummaryv3(requestParameters: ViewDistinctionSummaryv3Request): Promise<DistinctionSummaryV30> {\n        const response = await this.viewDistinctionSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all distinctions\n     */\n    async viewDistinctionsv3Raw(requestParameters: ViewDistinctionsv3Request): Promise<runtime.ApiResponse<DistinctionsSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewDistinctionsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/distinctions`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DistinctionsSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all distinctions\n     */\n    async viewDistinctionsv3(requestParameters: ViewDistinctionsv3Request): Promise<DistinctionsSummaryV30> {\n        const response = await this.viewDistinctionsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Distinction\n     */\n    async viewDistinctionv3Raw(requestParameters: ViewDistinctionv3Request): Promise<runtime.ApiResponse<DistinctionV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewDistinctionv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewDistinctionv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/distinction/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DistinctionV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Distinction\n     */\n    async viewDistinctionv3(requestParameters: ViewDistinctionv3Request): Promise<DistinctionV30> {\n        const response = await this.viewDistinctionv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Education Summary\n     */\n    async viewEducationSummaryv3Raw(requestParameters: ViewEducationSummaryv3Request): Promise<runtime.ApiResponse<EducationSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEducationSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEducationSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/education/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EducationSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Education Summary\n     */\n    async viewEducationSummaryv3(requestParameters: ViewEducationSummaryv3Request): Promise<EducationSummaryV30> {\n        const response = await this.viewEducationSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all educations\n     */\n    async viewEducationsv3Raw(requestParameters: ViewEducationsv3Request): Promise<runtime.ApiResponse<EducationsSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEducationsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/educations`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EducationsSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all educations\n     */\n    async viewEducationsv3(requestParameters: ViewEducationsv3Request): Promise<EducationsSummaryV30> {\n        const response = await this.viewEducationsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Education\n     */\n    async viewEducationv3Raw(requestParameters: ViewEducationv3Request): Promise<runtime.ApiResponse<EducationV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEducationv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEducationv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/education/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EducationV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Education\n     */\n    async viewEducationv3(requestParameters: ViewEducationv3Request): Promise<EducationV30> {\n        const response = await this.viewEducationv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all emails for an ORCID ID\n     */\n    async viewEmailsv3Raw(requestParameters: ViewEmailsv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmailsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/email`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch all emails for an ORCID ID\n     */\n    async viewEmailsv3(requestParameters: ViewEmailsv3Request): Promise<void> {\n        await this.viewEmailsv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch an Employment Summary\n     */\n    async viewEmploymentSummaryv3Raw(requestParameters: ViewEmploymentSummaryv3Request): Promise<runtime.ApiResponse<EmploymentSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmploymentSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEmploymentSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/employment/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Employment Summary\n     */\n    async viewEmploymentSummaryv3(requestParameters: ViewEmploymentSummaryv3Request): Promise<EmploymentSummaryV30> {\n        const response = await this.viewEmploymentSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all employments\n     */\n    async viewEmploymentsv3Raw(requestParameters: ViewEmploymentsv3Request): Promise<runtime.ApiResponse<FundingsV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmploymentsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/employments`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingsV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all employments\n     */\n    async viewEmploymentsv3(requestParameters: ViewEmploymentsv3Request): Promise<FundingsV30> {\n        const response = await this.viewEmploymentsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Retrive a specific education representation\n     * Fetch an Employment\n     */\n    async viewEmploymentv3Raw(requestParameters: ViewEmploymentv3Request): Promise<runtime.ApiResponse<EmploymentV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmploymentv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEmploymentv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/employment/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Retrive a specific education representation\n     * Fetch an Employment\n     */\n    async viewEmploymentv3(requestParameters: ViewEmploymentv3Request): Promise<EmploymentV30> {\n        const response = await this.viewEmploymentv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch external identifiers\n     */\n    async viewExternalIdentifiersv3Raw(requestParameters: ViewExternalIdentifiersv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewExternalIdentifiersv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.accessToken) {\n            // oauth required\n            if (typeof this.configuration.accessToken === 'function') {\n                headerParameters[\"Authorization\"] = this.configuration.accessToken(\"orcid_two_legs\", [\"/read-public\"]);\n            } else {\n                headerParameters[\"Authorization\"] = this.configuration.accessToken;\n            }\n        }\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/external-identifiers`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch external identifiers\n     */\n    async viewExternalIdentifiersv3(requestParameters: ViewExternalIdentifiersv3Request): Promise<void> {\n        await this.viewExternalIdentifiersv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch external identifier\n     */\n    async viewExternalIdentifierv3Raw(requestParameters: ViewExternalIdentifierv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewExternalIdentifierv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewExternalIdentifierv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/external-identifiers/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch external identifier\n     */\n    async viewExternalIdentifierv3(requestParameters: ViewExternalIdentifierv3Request): Promise<void> {\n        await this.viewExternalIdentifierv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch a Funding Summary\n     */\n    async viewFundingSummaryv3Raw(requestParameters: ViewFundingSummaryv3Request): Promise<runtime.ApiResponse<FundingSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewFundingSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewFundingSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/funding/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Funding Summary\n     */\n    async viewFundingSummaryv3(requestParameters: ViewFundingSummaryv3Request): Promise<FundingSummaryV30> {\n        const response = await this.viewFundingSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all fundings\n     */\n    async viewFundingsv3Raw(requestParameters: ViewFundingsv3Request): Promise<runtime.ApiResponse<FundingsV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewFundingsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/fundings`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingsV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all fundings\n     */\n    async viewFundingsv3(requestParameters: ViewFundingsv3Request): Promise<FundingsV30> {\n        const response = await this.viewFundingsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Funding\n     */\n    async viewFundingv3Raw(requestParameters: ViewFundingv3Request): Promise<runtime.ApiResponse<FundingV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewFundingv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewFundingv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/funding/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Funding\n     */\n    async viewFundingv3(requestParameters: ViewFundingv3Request): Promise<FundingV30> {\n        const response = await this.viewFundingv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an InvitedPosition summary\n     */\n    async viewInvitedPositionSummaryv3Raw(requestParameters: ViewInvitedPositionSummaryv3Request): Promise<runtime.ApiResponse<InvitedPositionSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewInvitedPositionSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewInvitedPositionSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/invited-position/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => InvitedPositionSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an InvitedPosition summary\n     */\n    async viewInvitedPositionSummaryv3(requestParameters: ViewInvitedPositionSummaryv3Request): Promise<InvitedPositionSummaryV30> {\n        const response = await this.viewInvitedPositionSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all invitedPositions\n     */\n    async viewInvitedPositionsv3Raw(requestParameters: ViewInvitedPositionsv3Request): Promise<runtime.ApiResponse<InvitedPositionsV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewInvitedPositionsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/invited-positions`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => InvitedPositionsV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all invitedPositions\n     */\n    async viewInvitedPositionsv3(requestParameters: ViewInvitedPositionsv3Request): Promise<InvitedPositionsV30> {\n        const response = await this.viewInvitedPositionsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an InvitedPosition\n     */\n    async viewInvitedPositionv3Raw(requestParameters: ViewInvitedPositionv3Request): Promise<runtime.ApiResponse<InvitedPositionV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewInvitedPositionv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewInvitedPositionv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/invited-position/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => InvitedPositionV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an InvitedPosition\n     */\n    async viewInvitedPositionv3(requestParameters: ViewInvitedPositionv3Request): Promise<InvitedPositionV30> {\n        const response = await this.viewInvitedPositionv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch keywords\n     */\n    async viewKeywordsv3Raw(requestParameters: ViewKeywordsv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewKeywordsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/keywords`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch keywords\n     */\n    async viewKeywordsv3(requestParameters: ViewKeywordsv3Request): Promise<void> {\n        await this.viewKeywordsv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch keyword\n     */\n    async viewKeywordv3Raw(requestParameters: ViewKeywordv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewKeywordv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewKeywordv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/keywords/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch keyword\n     */\n    async viewKeywordv3(requestParameters: ViewKeywordv3Request): Promise<void> {\n        await this.viewKeywordv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch an Membership summary\n     */\n    async viewMembershipSummaryv3Raw(requestParameters: ViewMembershipSummaryv3Request): Promise<runtime.ApiResponse<MembershipSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewMembershipSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewMembershipSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/membership/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MembershipSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Membership summary\n     */\n    async viewMembershipSummaryv3(requestParameters: ViewMembershipSummaryv3Request): Promise<MembershipSummaryV30> {\n        const response = await this.viewMembershipSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all memberships\n     */\n    async viewMembershipsv3Raw(requestParameters: ViewMembershipsv3Request): Promise<runtime.ApiResponse<MembershipsV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewMembershipsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/memberships`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MembershipsV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all memberships\n     */\n    async viewMembershipsv3(requestParameters: ViewMembershipsv3Request): Promise<MembershipsV30> {\n        const response = await this.viewMembershipsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Membership\n     */\n    async viewMembershipv3Raw(requestParameters: ViewMembershipv3Request): Promise<runtime.ApiResponse<MembershipV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewMembershipv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewMembershipv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/membership/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MembershipV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Membership\n     */\n    async viewMembershipv3(requestParameters: ViewMembershipv3Request): Promise<MembershipV30> {\n        const response = await this.viewMembershipv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch Other names\n     */\n    async viewOtherNamesv3Raw(requestParameters: ViewOtherNamesv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewOtherNamesv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/other-names`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch Other names\n     */\n    async viewOtherNamesv3(requestParameters: ViewOtherNamesv3Request): Promise<void> {\n        await this.viewOtherNamesv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch Other name\n     */\n    async viewOtherNamev3Raw(requestParameters: ViewOtherNamev3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewOtherNamev3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewOtherNamev3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/other-names/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch Other name\n     */\n    async viewOtherNamev3(requestParameters: ViewOtherNamev3Request): Promise<void> {\n        await this.viewOtherNamev3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch a Peer Review Summary\n     */\n    async viewPeerReviewSummaryv3Raw(requestParameters: ViewPeerReviewSummaryv3Request): Promise<runtime.ApiResponse<PeerReviewSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPeerReviewSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewPeerReviewSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/peer-review/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PeerReviewSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Peer Review Summary\n     */\n    async viewPeerReviewSummaryv3(requestParameters: ViewPeerReviewSummaryv3Request): Promise<PeerReviewSummaryV30> {\n        const response = await this.viewPeerReviewSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all peer reviews\n     */\n    async viewPeerReviewsv3Raw(requestParameters: ViewPeerReviewsv3Request): Promise<runtime.ApiResponse<PeerReviewsV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPeerReviewsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/peer-reviews`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PeerReviewsV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all peer reviews\n     */\n    async viewPeerReviewsv3(requestParameters: ViewPeerReviewsv3Request): Promise<PeerReviewsV30> {\n        const response = await this.viewPeerReviewsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Peer Review\n     */\n    async viewPeerReviewv3Raw(requestParameters: ViewPeerReviewv3Request): Promise<runtime.ApiResponse<PeerReviewV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPeerReviewv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewPeerReviewv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/peer-review/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PeerReviewV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Peer Review\n     */\n    async viewPeerReviewv3(requestParameters: ViewPeerReviewv3Request): Promise<PeerReviewV30> {\n        const response = await this.viewPeerReviewv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch personal details for an ORCID ID\n     */\n    async viewPersonalDetailsv3Raw(requestParameters: ViewPersonalDetailsv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPersonalDetailsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/personal-details`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch personal details for an ORCID ID\n     */\n    async viewPersonalDetailsv3(requestParameters: ViewPersonalDetailsv3Request): Promise<void> {\n        await this.viewPersonalDetailsv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch person details\n     */\n    async viewPersonv3Raw(requestParameters: ViewPersonv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPersonv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/person`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch person details\n     */\n    async viewPersonv3(requestParameters: ViewPersonv3Request): Promise<void> {\n        await this.viewPersonv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch an Qualification summary\n     */\n    async viewQualificationSummaryv3Raw(requestParameters: ViewQualificationSummaryv3Request): Promise<runtime.ApiResponse<QualificationSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewQualificationSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewQualificationSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/qualification/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Qualification summary\n     */\n    async viewQualificationSummaryv3(requestParameters: ViewQualificationSummaryv3Request): Promise<QualificationSummaryV30> {\n        const response = await this.viewQualificationSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all qualifications\n     */\n    async viewQualificationsv3Raw(requestParameters: ViewQualificationsv3Request): Promise<runtime.ApiResponse<QualificationsV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewQualificationsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/qualifications`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationsV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all qualifications\n     */\n    async viewQualificationsv3(requestParameters: ViewQualificationsv3Request): Promise<QualificationsV30> {\n        const response = await this.viewQualificationsv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Qualification\n     */\n    async viewQualificationv3Raw(requestParameters: ViewQualificationv3Request): Promise<runtime.ApiResponse<QualificationV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewQualificationv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewQualificationv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/qualification/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QualificationV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Qualification\n     */\n    async viewQualificationv3(requestParameters: ViewQualificationv3Request): Promise<QualificationV30> {\n        const response = await this.viewQualificationv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch record details\n     */\n    async viewRecordv3Raw(requestParameters: ViewRecordv3Request): Promise<runtime.ApiResponse<RecordV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewRecordv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RecordV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch record details\n     */\n    async viewRecordv3(requestParameters: ViewRecordv3Request): Promise<RecordV30> {\n        const response = await this.viewRecordv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Research Resource summary\n     */\n    async viewResearchResourceSummaryv3Raw(requestParameters: ViewResearchResourceSummaryv3Request): Promise<runtime.ApiResponse<ResearchResourceSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearchResourceSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewResearchResourceSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/research-resource/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ResearchResourceSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Research Resource summary\n     */\n    async viewResearchResourceSummaryv3(requestParameters: ViewResearchResourceSummaryv3Request): Promise<ResearchResourceSummaryV30> {\n        const response = await this.viewResearchResourceSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all Research Resources\n     */\n    async viewResearchResourcesv3Raw(requestParameters: ViewResearchResourcesv3Request): Promise<runtime.ApiResponse<ResearchResourcesV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearchResourcesv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/research-resources`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ResearchResourcesV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all Research Resources\n     */\n    async viewResearchResourcesv3(requestParameters: ViewResearchResourcesv3Request): Promise<ResearchResourcesV30> {\n        const response = await this.viewResearchResourcesv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Research Resource\n     */\n    async viewResearchResourcev3Raw(requestParameters: ViewResearchResourcev3Request): Promise<runtime.ApiResponse<ResearchResourceV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearchResourcev3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewResearchResourcev3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/research-resource/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ResearchResourceV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Research Resource\n     */\n    async viewResearchResourcev3(requestParameters: ViewResearchResourcev3Request): Promise<ResearchResourceV30> {\n        const response = await this.viewResearchResourcev3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all researcher urls for an ORCID ID\n     */\n    async viewResearcherUrlsv3Raw(requestParameters: ViewResearcherUrlsv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearcherUrlsv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/researcher-urls`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch all researcher urls for an ORCID ID\n     */\n    async viewResearcherUrlsv3(requestParameters: ViewResearcherUrlsv3Request): Promise<void> {\n        await this.viewResearcherUrlsv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch one researcher url for an ORCID ID\n     */\n    async viewResearcherUrlv3Raw(requestParameters: ViewResearcherUrlv3Request): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearcherUrlv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewResearcherUrlv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/researcher-urls/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Fetch one researcher url for an ORCID ID\n     */\n    async viewResearcherUrlv3(requestParameters: ViewResearcherUrlv3Request): Promise<void> {\n        await this.viewResearcherUrlv3Raw(requestParameters);\n    }\n\n    /**\n     * Fetch an Service summary\n     */\n    async viewServiceSummaryv3Raw(requestParameters: ViewServiceSummaryv3Request): Promise<runtime.ApiResponse<ServiceSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewServiceSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewServiceSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/service/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ServiceSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Service summary\n     */\n    async viewServiceSummaryv3(requestParameters: ViewServiceSummaryv3Request): Promise<ServiceSummaryV30> {\n        const response = await this.viewServiceSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all services\n     */\n    async viewServicesv3Raw(requestParameters: ViewServicesv3Request): Promise<runtime.ApiResponse<ServicesV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewServicesv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/services`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ServicesV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all services\n     */\n    async viewServicesv3(requestParameters: ViewServicesv3Request): Promise<ServicesV30> {\n        const response = await this.viewServicesv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Service\n     */\n    async viewServicev3Raw(requestParameters: ViewServicev3Request): Promise<runtime.ApiResponse<ServiceV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewServicev3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewServicev3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/service/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ServiceV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Service\n     */\n    async viewServicev3(requestParameters: ViewServicev3Request): Promise<ServiceV30> {\n        const response = await this.viewServicev3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch specified works\n     */\n    async viewSpecifiedWorksv3Raw(requestParameters: ViewSpecifiedWorksv3Request): Promise<runtime.ApiResponse<WorkBulkV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewSpecifiedWorksv3.');\n        }\n\n        if (requestParameters.putCodes === null || requestParameters.putCodes === undefined) {\n            throw new runtime.RequiredError('putCodes','Required parameter requestParameters.putCodes was null or undefined when calling viewSpecifiedWorksv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/works/{putCodes}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCodes\"}}`, encodeURIComponent(String(requestParameters.putCodes))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkBulkV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch specified works\n     */\n    async viewSpecifiedWorksv3(requestParameters: ViewSpecifiedWorksv3Request): Promise<WorkBulkV30> {\n        const response = await this.viewSpecifiedWorksv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     */\n    async viewStatusJsonRaw(): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/pubStatus`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     */\n    async viewStatusJson(): Promise<void> {\n        await this.viewStatusJsonRaw();\n    }\n\n    /**\n     * Check the server status\n     */\n    async viewStatusTextv3Raw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Check the server status\n     */\n    async viewStatusTextv3(): Promise<string> {\n        const response = await this.viewStatusTextv3Raw();\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Work Summary\n     */\n    async viewWorkSummaryv3Raw(requestParameters: ViewWorkSummaryv3Request): Promise<runtime.ApiResponse<WorkSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewWorkSummaryv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewWorkSummaryv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/work/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Work Summary\n     */\n    async viewWorkSummaryv3(requestParameters: ViewWorkSummaryv3Request): Promise<WorkSummaryV30> {\n        const response = await this.viewWorkSummaryv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all works\n     */\n    async viewWorksv3Raw(requestParameters: ViewWorksv3Request): Promise<runtime.ApiResponse<WorksSummaryV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewWorksv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/works`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorksSummaryV30FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all works\n     */\n    async viewWorksv3(requestParameters: ViewWorksv3Request): Promise<WorksSummaryV30> {\n        const response = await this.viewWorksv3Raw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * More notes about this method\n     * Fetch a Work\n     */\n    async viewWorkv3Raw(requestParameters: ViewWorkv3Request): Promise<runtime.ApiResponse<WorkV30>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewWorkv3.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewWorkv3.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v3.0/{orcid}/work/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkV30FromJSON(jsonValue));\n    }\n\n    /**\n     * More notes about this method\n     * Fetch a Work\n     */\n    async viewWorkv3(requestParameters: ViewWorkv3Request): Promise<WorkV30> {\n        const response = await this.viewWorkv3Raw(requestParameters);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ORCID Public\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: Latest\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    ActivitiesSummaryV20,\n    ActivitiesSummaryV20FromJSON,\n    ActivitiesSummaryV20ToJSON,\n    AddressV20,\n    AddressV20FromJSON,\n    AddressV20ToJSON,\n    AddressesV20,\n    AddressesV20FromJSON,\n    AddressesV20ToJSON,\n    BiographyV20,\n    BiographyV20FromJSON,\n    BiographyV20ToJSON,\n    ClientSummary,\n    ClientSummaryFromJSON,\n    ClientSummaryToJSON,\n    EducationSummaryV20,\n    EducationSummaryV20FromJSON,\n    EducationSummaryV20ToJSON,\n    EducationV20,\n    EducationV20FromJSON,\n    EducationV20ToJSON,\n    EducationsSummaryV20,\n    EducationsSummaryV20FromJSON,\n    EducationsSummaryV20ToJSON,\n    EmailsV20,\n    EmailsV20FromJSON,\n    EmailsV20ToJSON,\n    EmploymentSummaryV20,\n    EmploymentSummaryV20FromJSON,\n    EmploymentSummaryV20ToJSON,\n    EmploymentV20,\n    EmploymentV20FromJSON,\n    EmploymentV20ToJSON,\n    EmploymentsSummaryV20,\n    EmploymentsSummaryV20FromJSON,\n    EmploymentsSummaryV20ToJSON,\n    FundingSummaryV20,\n    FundingSummaryV20FromJSON,\n    FundingSummaryV20ToJSON,\n    FundingV20,\n    FundingV20FromJSON,\n    FundingV20ToJSON,\n    FundingsV20,\n    FundingsV20FromJSON,\n    FundingsV20ToJSON,\n    KeywordV20,\n    KeywordV20FromJSON,\n    KeywordV20ToJSON,\n    KeywordsV20,\n    KeywordsV20FromJSON,\n    KeywordsV20ToJSON,\n    OtherNameV20,\n    OtherNameV20FromJSON,\n    OtherNameV20ToJSON,\n    OtherNamesV20,\n    OtherNamesV20FromJSON,\n    OtherNamesV20ToJSON,\n    PeerReviewSummaryV20,\n    PeerReviewSummaryV20FromJSON,\n    PeerReviewSummaryV20ToJSON,\n    PeerReviewV20,\n    PeerReviewV20FromJSON,\n    PeerReviewV20ToJSON,\n    PeerReviewsV20,\n    PeerReviewsV20FromJSON,\n    PeerReviewsV20ToJSON,\n    PersonExternalIdentifierV20,\n    PersonExternalIdentifierV20FromJSON,\n    PersonExternalIdentifierV20ToJSON,\n    PersonExternalIdentifiersV20,\n    PersonExternalIdentifiersV20FromJSON,\n    PersonExternalIdentifiersV20ToJSON,\n    PersonV20,\n    PersonV20FromJSON,\n    PersonV20ToJSON,\n    PersonalDetailsV20,\n    PersonalDetailsV20FromJSON,\n    PersonalDetailsV20ToJSON,\n    RecordV20,\n    RecordV20FromJSON,\n    RecordV20ToJSON,\n    ResearcherUrlsV20,\n    ResearcherUrlsV20FromJSON,\n    ResearcherUrlsV20ToJSON,\n    SearchV20,\n    SearchV20FromJSON,\n    SearchV20ToJSON,\n    WorkBulkV20,\n    WorkBulkV20FromJSON,\n    WorkBulkV20ToJSON,\n    WorkSummaryV20,\n    WorkSummaryV20FromJSON,\n    WorkSummaryV20ToJSON,\n    WorkV20,\n    WorkV20FromJSON,\n    WorkV20ToJSON,\n    WorksSummaryV20,\n    WorksSummaryV20FromJSON,\n    WorksSummaryV20ToJSON,\n} from '../models';\n\nexport interface SearchByQueryRequest {\n    q?: string;\n}\n\nexport interface ViewActivitiesRequest {\n    orcid: string;\n}\n\nexport interface ViewAddressRequest {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewAddressesRequest {\n    orcid: string;\n}\n\nexport interface ViewBiographyRequest {\n    orcid: string;\n}\n\nexport interface ViewClientRequest {\n    clientId: string;\n}\n\nexport interface ViewEducationRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEducationSummaryRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEducationsRequest {\n    orcid: string;\n}\n\nexport interface ViewEmailsRequest {\n    orcid: string;\n}\n\nexport interface ViewEmploymentRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEmploymentSummaryRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewEmploymentsRequest {\n    orcid: string;\n}\n\nexport interface ViewExternalIdentifierRequest {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewExternalIdentifiersRequest {\n    orcid: string;\n}\n\nexport interface ViewFundingRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewFundingSummaryRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewFundingsRequest {\n    orcid: string;\n}\n\nexport interface ViewKeywordRequest {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewKeywordsRequest {\n    orcid: string;\n}\n\nexport interface ViewOtherNameRequest {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewOtherNamesRequest {\n    orcid: string;\n}\n\nexport interface ViewPeerReviewRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewPeerReviewSummaryRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewPeerReviewsRequest {\n    orcid: string;\n}\n\nexport interface ViewPersonRequest {\n    orcid: string;\n}\n\nexport interface ViewPersonalDetailsRequest {\n    orcid: string;\n}\n\nexport interface ViewRecordRequest {\n    orcid: string;\n}\n\nexport interface ViewResearcherUrlRequest {\n    orcid: string;\n    putCode: string;\n}\n\nexport interface ViewResearcherUrlsRequest {\n    orcid: string;\n}\n\nexport interface ViewSpecifiedWorksRequest {\n    orcid: string;\n    putCodes: string;\n}\n\nexport interface ViewWorkRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewWorkSummaryRequest {\n    orcid: string;\n    putCode: number;\n}\n\nexport interface ViewWorksRequest {\n    orcid: string;\n}\n\n/**\n * \n */\nexport class PublicAPIV20Api extends runtime.BaseAPI {\n\n    /**\n     * Search records\n     */\n    async searchByQueryRaw(requestParameters: SearchByQueryRequest): Promise<runtime.ApiResponse<SearchV20>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.q !== undefined) {\n            queryParameters['q'] = requestParameters.q;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Search records\n     */\n    async searchByQuery(requestParameters: SearchByQueryRequest): Promise<SearchV20> {\n        const response = await this.searchByQueryRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all Activities\n     */\n    async viewActivitiesRaw(requestParameters: ViewActivitiesRequest): Promise<runtime.ApiResponse<ActivitiesSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewActivities.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/activities`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActivitiesSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all Activities\n     */\n    async viewActivities(requestParameters: ViewActivitiesRequest): Promise<ActivitiesSummaryV20> {\n        const response = await this.viewActivitiesRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an address\n     */\n    async viewAddressRaw(requestParameters: ViewAddressRequest): Promise<runtime.ApiResponse<AddressV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewAddress.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewAddress.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/address/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an address\n     */\n    async viewAddress(requestParameters: ViewAddressRequest): Promise<AddressV20> {\n        const response = await this.viewAddressRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all addresses\n     */\n    async viewAddressesRaw(requestParameters: ViewAddressesRequest): Promise<runtime.ApiResponse<AddressesV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewAddresses.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/address`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddressesV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all addresses\n     */\n    async viewAddresses(requestParameters: ViewAddressesRequest): Promise<AddressesV20> {\n        const response = await this.viewAddressesRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Get biography details\n     */\n    async viewBiographyRaw(requestParameters: ViewBiographyRequest): Promise<runtime.ApiResponse<BiographyV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewBiography.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/biography`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => BiographyV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Get biography details\n     */\n    async viewBiography(requestParameters: ViewBiographyRequest): Promise<BiographyV20> {\n        const response = await this.viewBiographyRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch client details\n     */\n    async viewClientRaw(requestParameters: ViewClientRequest): Promise<runtime.ApiResponse<ClientSummary>> {\n        if (requestParameters.clientId === null || requestParameters.clientId === undefined) {\n            throw new runtime.RequiredError('clientId','Required parameter requestParameters.clientId was null or undefined when calling viewClient.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/client/{client_id}`.replace(`{${\"client_id\"}}`, encodeURIComponent(String(requestParameters.clientId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ClientSummaryFromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch client details\n     */\n    async viewClient(requestParameters: ViewClientRequest): Promise<ClientSummary> {\n        const response = await this.viewClientRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Education\n     */\n    async viewEducationRaw(requestParameters: ViewEducationRequest): Promise<runtime.ApiResponse<EducationV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEducation.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEducation.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/education/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EducationV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Education\n     */\n    async viewEducation(requestParameters: ViewEducationRequest): Promise<EducationV20> {\n        const response = await this.viewEducationRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Education Summary\n     */\n    async viewEducationSummaryRaw(requestParameters: ViewEducationSummaryRequest): Promise<runtime.ApiResponse<EducationSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEducationSummary.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEducationSummary.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/education/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EducationSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Education Summary\n     */\n    async viewEducationSummary(requestParameters: ViewEducationSummaryRequest): Promise<EducationSummaryV20> {\n        const response = await this.viewEducationSummaryRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all educations\n     */\n    async viewEducationsRaw(requestParameters: ViewEducationsRequest): Promise<runtime.ApiResponse<EducationsSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEducations.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/educations`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EducationsSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all educations\n     */\n    async viewEducations(requestParameters: ViewEducationsRequest): Promise<EducationsSummaryV20> {\n        const response = await this.viewEducationsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all emails for an ORCID ID\n     */\n    async viewEmailsRaw(requestParameters: ViewEmailsRequest): Promise<runtime.ApiResponse<EmailsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmails.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/email`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmailsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all emails for an ORCID ID\n     */\n    async viewEmails(requestParameters: ViewEmailsRequest): Promise<EmailsV20> {\n        const response = await this.viewEmailsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Retrive a specific education representation\n     * Fetch an Employment\n     */\n    async viewEmploymentRaw(requestParameters: ViewEmploymentRequest): Promise<runtime.ApiResponse<EmploymentV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmployment.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEmployment.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/employment/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Retrive a specific education representation\n     * Fetch an Employment\n     */\n    async viewEmployment(requestParameters: ViewEmploymentRequest): Promise<EmploymentV20> {\n        const response = await this.viewEmploymentRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch an Employment Summary\n     */\n    async viewEmploymentSummaryRaw(requestParameters: ViewEmploymentSummaryRequest): Promise<runtime.ApiResponse<EmploymentSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmploymentSummary.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewEmploymentSummary.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/employment/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch an Employment Summary\n     */\n    async viewEmploymentSummary(requestParameters: ViewEmploymentSummaryRequest): Promise<EmploymentSummaryV20> {\n        const response = await this.viewEmploymentSummaryRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all employments\n     */\n    async viewEmploymentsRaw(requestParameters: ViewEmploymentsRequest): Promise<runtime.ApiResponse<EmploymentsSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewEmployments.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/employments`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmploymentsSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all employments\n     */\n    async viewEmployments(requestParameters: ViewEmploymentsRequest): Promise<EmploymentsSummaryV20> {\n        const response = await this.viewEmploymentsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch external identifier\n     */\n    async viewExternalIdentifierRaw(requestParameters: ViewExternalIdentifierRequest): Promise<runtime.ApiResponse<PersonExternalIdentifierV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewExternalIdentifier.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewExternalIdentifier.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/external-identifiers/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PersonExternalIdentifierV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch external identifier\n     */\n    async viewExternalIdentifier(requestParameters: ViewExternalIdentifierRequest): Promise<PersonExternalIdentifierV20> {\n        const response = await this.viewExternalIdentifierRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch external identifiers\n     */\n    async viewExternalIdentifiersRaw(requestParameters: ViewExternalIdentifiersRequest): Promise<runtime.ApiResponse<PersonExternalIdentifiersV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewExternalIdentifiers.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.accessToken) {\n            // oauth required\n            if (typeof this.configuration.accessToken === 'function') {\n                headerParameters[\"Authorization\"] = this.configuration.accessToken(\"orcid_two_legs\", [\"/read-public\"]);\n            } else {\n                headerParameters[\"Authorization\"] = this.configuration.accessToken;\n            }\n        }\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/external-identifiers`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PersonExternalIdentifiersV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch external identifiers\n     */\n    async viewExternalIdentifiers(requestParameters: ViewExternalIdentifiersRequest): Promise<PersonExternalIdentifiersV20> {\n        const response = await this.viewExternalIdentifiersRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Funding\n     */\n    async viewFundingRaw(requestParameters: ViewFundingRequest): Promise<runtime.ApiResponse<FundingV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewFunding.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewFunding.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/funding/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Funding\n     */\n    async viewFunding(requestParameters: ViewFundingRequest): Promise<FundingV20> {\n        const response = await this.viewFundingRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Funding Summary\n     */\n    async viewFundingSummaryRaw(requestParameters: ViewFundingSummaryRequest): Promise<runtime.ApiResponse<FundingSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewFundingSummary.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewFundingSummary.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/funding/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Funding Summary\n     */\n    async viewFundingSummary(requestParameters: ViewFundingSummaryRequest): Promise<FundingSummaryV20> {\n        const response = await this.viewFundingSummaryRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all fundings\n     */\n    async viewFundingsRaw(requestParameters: ViewFundingsRequest): Promise<runtime.ApiResponse<FundingsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewFundings.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/fundings`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FundingsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all fundings\n     */\n    async viewFundings(requestParameters: ViewFundingsRequest): Promise<FundingsV20> {\n        const response = await this.viewFundingsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch keyword\n     */\n    async viewKeywordRaw(requestParameters: ViewKeywordRequest): Promise<runtime.ApiResponse<KeywordV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewKeyword.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewKeyword.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/keywords/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => KeywordV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch keyword\n     */\n    async viewKeyword(requestParameters: ViewKeywordRequest): Promise<KeywordV20> {\n        const response = await this.viewKeywordRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch keywords\n     */\n    async viewKeywordsRaw(requestParameters: ViewKeywordsRequest): Promise<runtime.ApiResponse<KeywordsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewKeywords.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/keywords`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => KeywordsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch keywords\n     */\n    async viewKeywords(requestParameters: ViewKeywordsRequest): Promise<KeywordsV20> {\n        const response = await this.viewKeywordsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch Other name\n     */\n    async viewOtherNameRaw(requestParameters: ViewOtherNameRequest): Promise<runtime.ApiResponse<OtherNameV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewOtherName.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewOtherName.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/other-names/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => OtherNameV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch Other name\n     */\n    async viewOtherName(requestParameters: ViewOtherNameRequest): Promise<OtherNameV20> {\n        const response = await this.viewOtherNameRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch Other names\n     */\n    async viewOtherNamesRaw(requestParameters: ViewOtherNamesRequest): Promise<runtime.ApiResponse<OtherNamesV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewOtherNames.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/other-names`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => OtherNamesV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch Other names\n     */\n    async viewOtherNames(requestParameters: ViewOtherNamesRequest): Promise<OtherNamesV20> {\n        const response = await this.viewOtherNamesRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Peer Review\n     */\n    async viewPeerReviewRaw(requestParameters: ViewPeerReviewRequest): Promise<runtime.ApiResponse<PeerReviewV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPeerReview.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewPeerReview.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/peer-review/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PeerReviewV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Peer Review\n     */\n    async viewPeerReview(requestParameters: ViewPeerReviewRequest): Promise<PeerReviewV20> {\n        const response = await this.viewPeerReviewRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Peer Review Summary\n     */\n    async viewPeerReviewSummaryRaw(requestParameters: ViewPeerReviewSummaryRequest): Promise<runtime.ApiResponse<PeerReviewSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPeerReviewSummary.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewPeerReviewSummary.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/peer-review/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PeerReviewSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Peer Review Summary\n     */\n    async viewPeerReviewSummary(requestParameters: ViewPeerReviewSummaryRequest): Promise<PeerReviewSummaryV20> {\n        const response = await this.viewPeerReviewSummaryRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all peer reviews\n     */\n    async viewPeerReviewsRaw(requestParameters: ViewPeerReviewsRequest): Promise<runtime.ApiResponse<PeerReviewsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPeerReviews.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/peer-reviews`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PeerReviewsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all peer reviews\n     */\n    async viewPeerReviews(requestParameters: ViewPeerReviewsRequest): Promise<PeerReviewsV20> {\n        const response = await this.viewPeerReviewsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch person details\n     */\n    async viewPersonRaw(requestParameters: ViewPersonRequest): Promise<runtime.ApiResponse<PersonV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPerson.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/person`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PersonV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch person details\n     */\n    async viewPerson(requestParameters: ViewPersonRequest): Promise<PersonV20> {\n        const response = await this.viewPersonRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch personal details for an ORCID ID\n     */\n    async viewPersonalDetailsRaw(requestParameters: ViewPersonalDetailsRequest): Promise<runtime.ApiResponse<PersonalDetailsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewPersonalDetails.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/personal-details`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PersonalDetailsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch personal details for an ORCID ID\n     */\n    async viewPersonalDetails(requestParameters: ViewPersonalDetailsRequest): Promise<PersonalDetailsV20> {\n        const response = await this.viewPersonalDetailsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch record details\n     */\n    async viewRecordRaw(requestParameters: ViewRecordRequest): Promise<runtime.ApiResponse<RecordV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewRecord.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RecordV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch record details\n     */\n    async viewRecord(requestParameters: ViewRecordRequest): Promise<RecordV20> {\n        const response = await this.viewRecordRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch one researcher url for an ORCID ID\n     */\n    async viewResearcherUrlRaw(requestParameters: ViewResearcherUrlRequest): Promise<runtime.ApiResponse<ResearcherUrlsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearcherUrl.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewResearcherUrl.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/researcher-urls/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ResearcherUrlsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch one researcher url for an ORCID ID\n     */\n    async viewResearcherUrl(requestParameters: ViewResearcherUrlRequest): Promise<ResearcherUrlsV20> {\n        const response = await this.viewResearcherUrlRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all researcher urls for an ORCID ID\n     */\n    async viewResearcherUrlsRaw(requestParameters: ViewResearcherUrlsRequest): Promise<runtime.ApiResponse<ResearcherUrlsV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewResearcherUrls.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/researcher-urls`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ResearcherUrlsV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all researcher urls for an ORCID ID\n     */\n    async viewResearcherUrls(requestParameters: ViewResearcherUrlsRequest): Promise<ResearcherUrlsV20> {\n        const response = await this.viewResearcherUrlsRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch specified works\n     */\n    async viewSpecifiedWorksRaw(requestParameters: ViewSpecifiedWorksRequest): Promise<runtime.ApiResponse<WorkBulkV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewSpecifiedWorks.');\n        }\n\n        if (requestParameters.putCodes === null || requestParameters.putCodes === undefined) {\n            throw new runtime.RequiredError('putCodes','Required parameter requestParameters.putCodes was null or undefined when calling viewSpecifiedWorks.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/works/{putCodes}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCodes\"}}`, encodeURIComponent(String(requestParameters.putCodes))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkBulkV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch specified works\n     */\n    async viewSpecifiedWorks(requestParameters: ViewSpecifiedWorksRequest): Promise<WorkBulkV20> {\n        const response = await this.viewSpecifiedWorksRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Check the server status\n     */\n    async viewStatusTextRaw(): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.TextApiResponse(response) as any;\n    }\n\n    /**\n     * Check the server status\n     */\n    async viewStatusText(): Promise<string> {\n        const response = await this.viewStatusTextRaw();\n        return await response.value();\n    }\n\n    /**\n     * More notes about this method\n     * Fetch a Work\n     */\n    async viewWorkRaw(requestParameters: ViewWorkRequest): Promise<runtime.ApiResponse<WorkV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewWork.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewWork.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/work/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkV20FromJSON(jsonValue));\n    }\n\n    /**\n     * More notes about this method\n     * Fetch a Work\n     */\n    async viewWork(requestParameters: ViewWorkRequest): Promise<WorkV20> {\n        const response = await this.viewWorkRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch a Work Summary\n     */\n    async viewWorkSummaryRaw(requestParameters: ViewWorkSummaryRequest): Promise<runtime.ApiResponse<WorkSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewWorkSummary.');\n        }\n\n        if (requestParameters.putCode === null || requestParameters.putCode === undefined) {\n            throw new runtime.RequiredError('putCode','Required parameter requestParameters.putCode was null or undefined when calling viewWorkSummary.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/work/summary/{putCode}`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))).replace(`{${\"putCode\"}}`, encodeURIComponent(String(requestParameters.putCode))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorkSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch a Work Summary\n     */\n    async viewWorkSummary(requestParameters: ViewWorkSummaryRequest): Promise<WorkSummaryV20> {\n        const response = await this.viewWorkSummaryRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * Fetch all works\n     */\n    async viewWorksRaw(requestParameters: ViewWorksRequest): Promise<runtime.ApiResponse<WorksSummaryV20>> {\n        if (requestParameters.orcid === null || requestParameters.orcid === undefined) {\n            throw new runtime.RequiredError('orcid','Required parameter requestParameters.orcid was null or undefined when calling viewWorks.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/v2.0/{orcid}/works`.replace(`{${\"orcid\"}}`, encodeURIComponent(String(requestParameters.orcid))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => WorksSummaryV20FromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch all works\n     */\n    async viewWorks(requestParameters: ViewWorksRequest): Promise<WorksSummaryV20> {\n        const response = await this.viewWorksRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * ArXiV API\n */\n\nimport { parseString } from 'xml2js';\n\nexport const BASE_PATH = \"https://export.arxiv.org/api\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n        ? context.body\n        : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Date) {\n                return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class XMLApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (xmlValue: any) => xmlValue) {}\n\n    async value(): Promise<T> {\n        const text = await this.raw.text();      \n        let parsedText : any = null;\n        parseString(text, { explicitArray: false }, function(error, result) {\n            parsedText = result;\n        });\n        return this.transformer(await parsedText);\n    }\n\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","\nexport interface Author {\n    name: string;\n}\n\nexport function AuthorFromXml(xml: any): Author {\n    return AuthorFromXmlTyped(xml, false);\n}\n\nexport function AuthorFromXmlTyped(xml: any, ignoreDiscriminator: boolean): Author {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        name: xml.name\n    };\n}\n","export interface Category {\n    term: string;\n    scheme: string;\n}\n\nexport function CategoryFromXml(xml: any): Category {\n    return CategoryFromXmlTyped(xml, false);\n}\n\nexport function CategoryFromXmlTyped(xml: any, ignoreDiscriminator: boolean) {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        term: xml.$.term,\n        scheme: xml.$.scheme\n    };\n}\n","\nexport interface Comment {\n    text: string;\n}\n\nexport function CommentFromXml(xml: any): Comment {\n    return CommentFromXmlTyped(xml, false);\n}\n\nexport function CommentFromXmlTyped(xml: any, ignoreDiscriminator: boolean): Comment {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        text: xml._\n    };\n}\n","import { exists } from '../runtime';\n\n\nexport interface Link {\n    href: string;\n    rel: string;\n    type: string;\n    title?: string;\n}\n\nexport function LinkFromXml(xml: any): Link {\n    return LinkFromXmlTyped(xml, false);\n}\n\nexport function LinkFromXmlTyped(xml: any, ignoreDiscriminator: boolean): Link {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        href: xml.$.href,\n        rel: xml.$.rel,\n        type: xml.$.type,\n        title: !exists(xml.$, 'title') ? undefined : xml.$.title\n    };\n}\n","import { Author, AuthorFromXml } from \"./Author\";\nimport { Category, CategoryFromXml } from \"./Category\";\nimport { Comment, CommentFromXml } from \"./Comment\";\nimport { Link, LinkFromXml } from './Link';\n\n\nexport interface Entry {\n    id: string;\n    updated: Date;\n    published: Date;\n    title: string;\n    summary: string;\n    author: Author[];\n    comment: Comment;\n    link: Link[];\n    primary_category: Category;\n    category: Category[];\n}\n\nexport function EntryFromXml(xml: any): Entry {\n    return EntryFromXmlTyped(xml, false);\n}\n\nexport function EntryFromXmlTyped(xml: any, ignoreDiscriminator: boolean) {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        id: xml.id,\n        updated: xml.updated,\n        published: xml.published,\n        title: xml.title,\n        summary: xml.summary,\n        author: ((xml.author as Array<any>).map(AuthorFromXml)),\n        comment: CommentFromXml(xml['arxiv:comment']),\n        link: ((xml.link as Array<any>).map(LinkFromXml)),\n        primary_category: CategoryFromXml(xml['arxiv:primary_category']),\n        category: ((xml.category as Array<any>).map(CategoryFromXml))\n    };\n}\n","export interface ItemsPerPage {\n    namespace: string;\n    value: string;\n}\n\nexport function ItemsPerPageFromXml(xml: any): ItemsPerPage {\n    return ItemsPerPageFromXmlTyped(xml, false);\n}\n\nexport function ItemsPerPageFromXmlTyped(xml: any, ignoreDiscriminator: boolean): ItemsPerPage {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        namespace: xml.$[\"xmlns:opensearch\"],\n        value: xml._\n    };\n}\n","export interface Title {\n    type: string;\n    text: string;\n}\n\nexport function TitleFromXml(xml: any): Title {\n    return TitleFromXmlTyped(xml, false);\n}\nexport function TitleFromXmlTyped(xml: any, ignoreDiscriminator: boolean): Title {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        type: xml.$.type,\n        text: xml._\n    };\n}\n","import { Entry, EntryFromXml } from \"./Entry\";\nimport { ItemsPerPage, ItemsPerPageFromXml } from \"./ItemsPerPage\";\nimport { Link, LinkFromXml } from './Link';\nimport { Title, TitleFromXml } from \"./Title\";\n\nexport interface Feed {\n    link:         Link;\n    title:        Title;\n    id:           string;\n    updated:      Date;\n    totalResults: ItemsPerPage;\n    startIndex:   ItemsPerPage;\n    itemsPerPage: ItemsPerPage;\n    entry:        Entry;\n    _xmlns:       string;\n}\n\nexport function FeedFromXml(xml: any): Feed {\n    return FeedFromXmlTyped(xml, false);\n}\n\nexport function FeedFromXmlTyped(xml: any, ignoreDiscriminator: boolean): Feed {\n    if ((xml === undefined) || (xml === null)) {\n        return xml;\n    }\n    return {\n        link:         LinkFromXml(xml.feed.link),\n        title:        TitleFromXml(xml.feed.title),\n        id:           xml.feed.id,\n        updated:      xml.feed.updated,\n        totalResults: ItemsPerPageFromXml(xml.feed[\"opensearch:totalResults\"]),\n        startIndex:   ItemsPerPageFromXml(xml.feed[\"opensearch:startIndex\"]),\n        itemsPerPage: ItemsPerPageFromXml(xml.feed[\"opensearch:itemsPerPage\"]),\n        entry:        EntryFromXml(xml.feed.entry),\n        _xmlns:       xml.feed.$.xmlns\n    };\n}\n\n\n","import * as runtime from '../runtime';\nimport { Feed, FeedFromXml } from '../models';\n\nexport class QueryApi extends runtime.BaseAPI {\n\n    async queryByIdRaw(requestParameters : QueryByIdRequest) : Promise<runtime.ApiResponse<Feed>> {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling queryById.');\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/query?id_list={id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.XMLApiResponse(response, (jsonValue) => FeedFromXml(jsonValue));\n    }\n\n    async queryById(requestParameters : QueryByIdRequest) : Promise<Feed> {\n        const response = await this.queryByIdRaw(requestParameters);\n        return await response.value();\n    }\n}\n\n\n\nexport interface QueryByIdRequest {\n    id: string;\n}\n","\nimport { ref, onBeforeMount } from \"vue\";\nimport { Configuration, PublicAPIV20Api } from '@/clients/orcid';\n//import { WorksApi } from '@/clients/crossref';\nimport { CachedWorksApi } from '@/tools/CachedWorksApi';\nimport { QueryApi } from '@/clients/arxiv';\n//import OrcidRequester from \"@/backend/people/OrcidRequester\";\n//import { OrcidPerson } from \"@/backend/models/OrcidResponse\";\nconst orcid : string = \"0000-0001-9848-2017\";\n//const doi = \"10.1145/3368089.3409767\"\n\n\nexport default {\n  setup() {\n    const person = ref(null);\n\n    onBeforeMount(() => {\n\n      const orcidApi = new PublicAPIV20Api(new Configuration({ headers: {'Accept': 'application/json'}}));\n\n      orcidApi.viewPersonalDetails({\"orcid\": orcid})\n      .then(result => {\n        console.debug(result.name);\n      });\n\n      const crWorksApi = new CachedWorksApi();\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1109/TPDS.2020.3014173\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1145/3243176.3243199\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1145/3368089.3409697\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      crWorksApi.worksDoiGet({\"doi\": \"10.1145/3394451.3397204\"})\n        .then(result => {\n          console.debug(result);\n        });\n      \n      const arxivApi = new QueryApi();\n      arxivApi.queryById({\"id\" : \"2103.12221\"})\n        .then(result => {\n          console.debug(result);\n        });\n\n      /*const oReq = new OrcidRequester();\n      oReq\n        .getPersonalDetails(orcid)\n        .then(result => {\n          person.value = result.returnValue;\n          console.debug(result.returnValue.lastModifiedDate);\n        });\n\n      */\n\n        /*\n      const paperReq = new CrossrefRequester();\n      paperReq.getPaper(doi)\n        .then(result => {\n          let crPaper = result.returnValue.message;\n          paper.value =  { doi: crPaper.DOI, title: crPaper.title[0]} as Paper;\n        });\n\n      isLoading.value = false;\n      */\n    });\n\n    return { person };\n  }\n}\n","import { render } from \"./TopFive.vue?vue&type=template&id=fed1260c\"\nimport script from \"./TopFive.vue?vue&type=script&lang=ts\"\nexport * from \"./TopFive.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export default interface Reuse {\n  sourceDOI: string,\n  type : ReuseType,\n  comment: string,\n  sourceReference: string,\n  reusedDOI: string,\n  alternativeID: string,\n  sourceReferenceDetail: string\n}\n\nexport enum ReuseType {\n  UNKNOWN = \"Unknown\",\n  METHODOLOGY = \"Methodology\",\n  DATASET = \"Dataset\",\n  TOOL = \"Tool\",\n  STATISTICS = \"Statistics\",\n  PROTOCOL = \"Protocol\",\n  METRIC = \"Metric\",\n  SANITYCHECK = \"Sanity check\"\n}\n\nexport function ReuseFromJson(json: any): Reuse {\n  if ((json === undefined) || (json === null)) {\n    return json;\n  }\n  return {\n    \"sourceDOI\": json['sourceDOI'],\n    \"type\" : json['type'],\n    \"comment\": json['comment'],\n    \"sourceReference\": json['sourceReference'],\n    \"reusedDOI\": json['reusedDOI'],\n    \"alternativeID\": json['alternativeID'],\n    \"sourceReferenceDetail\": json['sourceReferenceDetail']\n  };\n}\n\n\nexport function ReuseToJson(value? : Reuse) : any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    \"sourceDOI\": value.sourceDOI,\n    \"reusedDOI\": value.reusedDOI,\n    \"type\" : value.type,\n    \"comment\": value.comment,\n    \"sourceReference\": value.sourceReference,\n    \"alternativeID\": value.alternativeID,\n    \"sourceReferenceDetail\": value.sourceReferenceDetail\n  };\n}","\nimport { ref, onMounted } from \"vue\";\n\nimport GraphView from './components/GraphView.vue';\nimport TopFive from './components/TopFive.vue';\nimport reuseJson from './assets/data/reuse.json';\nimport { ReuseFromJson } from './backend/models/Reuse';\n\nexport default {\n  name: \"App\",\n  components: { GraphView, TopFive },\n  setup() {\n    let showSplash = ref(true);\n    const reuseData = (reuseJson as Array<any>).map(ReuseFromJson);\n\n    onMounted(() => {\n      setTimeout(() => {\n        showSplash.value = false;\n      }, 3000);\n     \n\n    });\n\n    return { showSplash, reuseData };\n  },\n};\n\n/*\nmethods: {\n   nodeClicked(doi) {\n     this.$refs.doiFull.updateRecord(doi);\n   },\n   computeTopResearchers(data) {\n     return {\n       reused: this.sortByCount(data.flatMap((item) => { return item.reused.author; }), this.authorKey).slice(0,5),\n       reusing: this.sortByCount(data.flatMap((item) => { return item.reusing.author; }), this.authorKey).slice(0,5)\n     };\n   },\n   computeTopPublications(data) {\n     return {\n       reused: this.sortByCount(data.map((item) => { return {title: item.reused.title, url: item.reused.url }; }), this.publicationKey).slice(0,5),\n       reusing: this.sortByCount(data.map((item) => { return {title: item.reusing.title, url: item.reused.url }; }), this.publicationKey).slice(0,5)\n     };\n   },\n   authorKey(item) {\n     return item.given + \" \" + item.family;\n   },\n   publicationKey(item) {\n     return item.title;\n   },\n   sortByCount(toBeSorted, key) {\n     var hash = new Object();\n\n     toBeSorted.forEach(function (element) {\n                            var name = key(element);\n                            if (hash[name] == undefined) {\n                                hash[name] = 1;\n                            }\n                            else {\n                                hash[name] +=1;\n                            }});\n\n     var sorted = toBeSorted.sort(function(a,b) {\n       return hash[key(b)] - hash[key(a)];\n     });\n\n     var seen = new Object();\n     sorted = sorted.filter(function(item) {\n       var name = key(item);\n       if (seen[name] == undefined) {\n           seen[name] = true;\n           return true;\n       }\n       return false;\n     });\n\n     return sorted;\n   }\n }\n\n*/\n","import { render } from \"./App.vue?vue&type=template&id=0234fe04\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0234fe04&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './assets/tailwind.css'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\n\ncreateApp(App).use(VueAxios, axios).mount('#app')\n","module.exports = __webpack_public_path__ + \"img/dor-logo.0d71f7c5.svg\";"],"sourceRoot":""}